<!doctype html>
<html>
<head>
<meta charset='UTF-8'><meta name='viewport' content='width=device-width initial-scale=1'>

<style type='text/css'>html {overflow-x: initial !important;}:root { --mermaid-theme: default; --mermaid-sequence-numbers: off; --mermaid-flowchart-curve: linear; --mermaid--gantt-left-padding: 75; --sequence-theme: simple; }


:root { --bg-color: #ffffff; --text-color: #333333; --select-text-bg-color: #B5D6FC; --select-text-font-color: auto; --monospace: "Lucida Console",Consolas,"Courier",monospace; --title-bar-height: 20px; }
.mac-os-11 { --title-bar-height: 28px; }
html { font-size: 14px; background-color: var(--bg-color); color: var(--text-color); font-family: "Helvetica Neue", Helvetica, Arial, sans-serif; -webkit-font-smoothing: antialiased; }
body { margin: 0px; padding: 0px; height: auto; inset: 0px; font-size: 1rem; line-height: 1.42857143; overflow-x: hidden; background-image: inherit; background-size: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: inherit; tab-size: 4; background-position: inherit; background-repeat: inherit; }
iframe { margin: auto; }
a.url { word-break: break-all; }
a:active, a:hover { outline: 0px; }
.in-text-selection, ::selection { text-shadow: none; background: var(--select-text-bg-color); color: var(--select-text-font-color); }
#write { margin: 0px auto; height: auto; width: inherit; word-break: normal; word-wrap: break-word; position: relative; white-space: normal; overflow-x: visible; padding-top: 36px; }
#write.first-line-indent p { text-indent: 2em; }
#write.first-line-indent li p, #write.first-line-indent p * { text-indent: 0px; }
#write.first-line-indent li { margin-left: 2em; }
.for-image #write { padding-left: 8px; padding-right: 8px; }
body.typora-export { padding-left: 30px; padding-right: 30px; }
.typora-export .footnote-line, .typora-export li, .typora-export p { white-space: pre-wrap; }
.typora-export .task-list-item input { pointer-events: none; }
@media screen and (max-width: 500px) {
  body.typora-export { padding-left: 0px; padding-right: 0px; }
  #write { padding-left: 20px; padding-right: 20px; }
  .CodeMirror-sizer { margin-left: 0px !important; }
  .CodeMirror-gutters { display: none !important; }
}
#write li > figure:last-child { margin-bottom: 0.5rem; }
#write ol, #write ul { position: relative; }
img { max-width: 100%; vertical-align: middle; image-orientation: from-image; }
button, input, select, textarea { color: inherit; font-family: inherit; font-size: inherit; font-style: inherit; font-variant-caps: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; }
input[type="checkbox"], input[type="radio"] { line-height: normal; padding: 0px; }
*, ::after, ::before { box-sizing: border-box; }
#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p, #write pre { width: inherit; }
#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p { position: relative; }
p { line-height: inherit; }
h1, h2, h3, h4, h5, h6 { break-after: avoid-page; break-inside: avoid; orphans: 4; }
p { orphans: 4; }
h1 { font-size: 2rem; }
h2 { font-size: 1.8rem; }
h3 { font-size: 1.6rem; }
h4 { font-size: 1.4rem; }
h5 { font-size: 1.2rem; }
h6 { font-size: 1rem; }
.md-math-block, .md-rawblock, h1, h2, h3, h4, h5, h6, p { margin-top: 1rem; margin-bottom: 1rem; }
.hidden { display: none; }
.md-blockmeta { color: rgb(204, 204, 204); font-weight: 700; font-style: italic; }
a { cursor: pointer; }
sup.md-footnote { padding: 2px 4px; background-color: rgba(238, 238, 238, 0.7); color: rgb(85, 85, 85); border-radius: 4px; cursor: pointer; }
sup.md-footnote a, sup.md-footnote a:hover { color: inherit; text-transform: inherit; text-decoration: inherit; }
#write input[type="checkbox"] { cursor: pointer; width: inherit; height: inherit; }
figure { overflow-x: auto; margin: 1.2em 0px; max-width: calc(100% + 16px); padding: 0px; }
figure > table { margin: 0px; }
tr { break-inside: avoid; break-after: auto; }
thead { display: table-header-group; }
table { border-collapse: collapse; border-spacing: 0px; width: 100%; overflow: auto; break-inside: auto; text-align: left; }
table.md-table td { min-width: 32px; }
.CodeMirror-gutters { border-right-width: 0px; background-color: inherit; }
.CodeMirror-linenumber { }
.CodeMirror { text-align: left; }
.CodeMirror-placeholder { opacity: 0.3; }
.CodeMirror pre { padding: 0px 4px; }
.CodeMirror-lines { padding: 0px; }
div.hr:focus { cursor: none; }
#write pre { white-space: pre-wrap; }
#write.fences-no-line-wrapping pre { white-space: pre; }
#write pre.ty-contain-cm { white-space: normal; }
.CodeMirror-gutters { margin-right: 4px; }
.md-fences { font-size: 0.9rem; display: block; break-inside: avoid; text-align: left; overflow: visible; white-space: pre; background-image: inherit; background-size: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: inherit; position: relative !important; background-position: inherit; background-repeat: inherit; }
.md-fences-adv-panel { width: 100%; margin-top: 10px; text-align: center; padding-top: 0px; padding-bottom: 8px; overflow-x: auto; }
#write .md-fences.mock-cm { white-space: pre-wrap; }
.md-fences.md-fences-with-lineno { padding-left: 0px; }
#write.fences-no-line-wrapping .md-fences.mock-cm { white-space: pre; overflow-x: auto; }
.md-fences.mock-cm.md-fences-with-lineno { padding-left: 8px; }
.CodeMirror-line, twitterwidget { break-inside: avoid; }
.footnotes { opacity: 0.8; font-size: 0.9rem; margin-top: 1em; margin-bottom: 1em; }
.footnotes + .footnotes { margin-top: 0px; }
.md-reset { margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: top; text-decoration: none; text-shadow: none; float: none; position: static; width: auto; height: auto; white-space: nowrap; cursor: inherit; line-height: normal; font-weight: 400; text-align: left; box-sizing: content-box; direction: ltr; background-position: 0px 0px; }
li div { padding-top: 0px; }
blockquote { margin: 1rem 0px; }
li .mathjax-block, li p { margin: 0.5rem 0px; }
li blockquote { margin: 1rem 0px; }
li { margin: 0px; position: relative; }
blockquote > :last-child { margin-bottom: 0px; }
blockquote > :first-child, li > :first-child { margin-top: 0px; }
.footnotes-area { color: rgb(136, 136, 136); margin-top: 0.714rem; padding-bottom: 0.143rem; white-space: normal; }
#write .footnote-line { white-space: pre-wrap; }
@media print {
  body, html { border: 1px solid transparent; height: 99%; break-after: avoid; break-before: avoid; font-variant-ligatures: no-common-ligatures; }
  #write { margin-top: 0px; padding-top: 0px; border-color: transparent !important; }
  .typora-export * { print-color-adjust: exact; }
  .typora-export #write { break-after: avoid; }
  .typora-export #write::after { height: 0px; }
  .is-mac table { break-inside: avoid; }
  .typora-export-show-outline .typora-export-sidebar { display: none; }
}
.footnote-line { margin-top: 0.714em; font-size: 0.7em; }
a img, img a { cursor: pointer; }
pre.md-meta-block { font-size: 0.8rem; min-height: 0.8rem; white-space: pre-wrap; background-color: rgb(204, 204, 204); display: block; overflow-x: hidden; }
p > .md-image:only-child:not(.md-img-error) img, p > img:only-child { display: block; margin: auto; }
#write.first-line-indent p > .md-image:only-child:not(.md-img-error) img { left: -2em; position: relative; }
p > .md-image:only-child { display: inline-block; width: 100%; }
#write .MathJax_Display { margin: 0.8em 0px 0px; }
.md-math-block { width: 100%; }
.md-math-block:not(:empty)::after { display: none; }
.MathJax_ref { fill: currentcolor; }
[contenteditable="true"]:active, [contenteditable="true"]:focus, [contenteditable="false"]:active, [contenteditable="false"]:focus { outline: 0px; box-shadow: none; }
.md-task-list-item { position: relative; list-style-type: none; }
.task-list-item.md-task-list-item { padding-left: 0px; }
.md-task-list-item > input { position: absolute; top: 0px; left: 0px; margin-left: -1.2em; margin-top: calc(1em - 10px); border: none; }
.math { font-size: 1rem; }
.md-toc { min-height: 3.58rem; position: relative; font-size: 0.9rem; border-radius: 10px; }
.md-toc-content { position: relative; margin-left: 0px; }
.md-toc-content::after, .md-toc::after { display: none; }
.md-toc-item { display: block; color: rgb(65, 131, 196); }
.md-toc-item a { text-decoration: none; }
.md-toc-inner:hover { text-decoration: underline; }
.md-toc-inner { display: inline-block; cursor: pointer; }
.md-toc-h1 .md-toc-inner { margin-left: 0px; font-weight: 700; }
.md-toc-h2 .md-toc-inner { margin-left: 2em; }
.md-toc-h3 .md-toc-inner { margin-left: 4em; }
.md-toc-h4 .md-toc-inner { margin-left: 6em; }
.md-toc-h5 .md-toc-inner { margin-left: 8em; }
.md-toc-h6 .md-toc-inner { margin-left: 10em; }
@media screen and (max-width: 48em) {
  .md-toc-h3 .md-toc-inner { margin-left: 3.5em; }
  .md-toc-h4 .md-toc-inner { margin-left: 5em; }
  .md-toc-h5 .md-toc-inner { margin-left: 6.5em; }
  .md-toc-h6 .md-toc-inner { margin-left: 8em; }
}
a.md-toc-inner { font-size: inherit; font-style: inherit; font-weight: inherit; line-height: inherit; }
.footnote-line a:not(.reversefootnote) { color: inherit; }
.md-attr { display: none; }
.md-fn-count::after { content: "."; }
code, pre, samp, tt { font-family: var(--monospace); }
kbd { margin: 0px 0.1em; padding: 0.1em 0.6em; font-size: 0.8em; color: rgb(36, 39, 41); background-color: rgb(255, 255, 255); border: 1px solid rgb(173, 179, 185); border-radius: 3px; box-shadow: rgba(12, 13, 14, 0.2) 0px 1px 0px, rgb(255, 255, 255) 0px 0px 0px 2px inset; white-space: nowrap; vertical-align: middle; }
.md-comment { color: rgb(162, 127, 3); opacity: 0.6; font-family: var(--monospace); }
code { text-align: left; }
a.md-print-anchor { white-space: pre !important; border: none !important; display: inline-block !important; position: absolute !important; width: 1px !important; right: 0px !important; outline: 0px !important; text-shadow: initial !important; background-position: 0px 0px !important; }
.os-windows.monocolor-emoji .md-emoji { font-family: "Segoe UI Symbol", sans-serif; }
.md-diagram-panel > svg { max-width: 100%; }
[lang="flow"] svg, [lang="mermaid"] svg { max-width: 100%; height: auto; }
[lang="mermaid"] .node text { font-size: 1rem; }
table tr th { border-bottom-width: 0px; }
video { max-width: 100%; display: block; margin: 0px auto; }
iframe { max-width: 100%; width: 100%; border: none; }
.highlight td, .highlight tr { border: 0px; }
mark { background-color: rgb(255, 255, 0); color: rgb(0, 0, 0); }
.md-html-inline .md-plain, .md-html-inline strong, mark .md-inline-math, mark strong { color: inherit; }
.md-expand mark .md-meta { opacity: 0.3 !important; }
mark .md-meta { color: rgb(0, 0, 0); }
@media print {
  .typora-export h1, .typora-export h2, .typora-export h3, .typora-export h4, .typora-export h5, .typora-export h6 { break-inside: avoid; }
}
.md-diagram-panel .messageText { stroke: none !important; }
.md-diagram-panel .start-state { fill: var(--node-fill); }
.md-diagram-panel .edgeLabel rect { opacity: 1 !important; }
.md-fences.md-fences-math { font-size: 1em; }
.md-fences-advanced:not(.md-focus) { padding: 0px; white-space: nowrap; border: 0px; }
.md-fences-advanced:not(.md-focus) { background-image: inherit; background-size: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: inherit; background-position: inherit; background-repeat: inherit; }
.typora-export-show-outline .typora-export-content { max-width: 1440px; margin: auto; display: flex; flex-direction: row; }
.typora-export-sidebar { width: 300px; font-size: 0.8rem; margin-top: 80px; margin-right: 18px; }
.typora-export-show-outline #write { --webkit-flex: 2; flex: 2 1 0%; }
.typora-export-sidebar .outline-content { position: fixed; top: 0px; max-height: 100%; overflow: hidden auto; padding-bottom: 30px; padding-top: 60px; width: 300px; }
@media screen and (max-width: 1024px) {
  .typora-export-sidebar, .typora-export-sidebar .outline-content { width: 240px; }
}
@media screen and (max-width: 800px) {
  .typora-export-sidebar { display: none; }
}
.outline-content li, .outline-content ul { margin-left: 0px; margin-right: 0px; padding-left: 0px; padding-right: 0px; list-style: none; }
.outline-content ul { margin-top: 0px; margin-bottom: 0px; }
.outline-content strong { font-weight: 400; }
.outline-expander { width: 1rem; height: 1.428571429rem; position: relative; display: table-cell; vertical-align: middle; cursor: pointer; padding-left: 4px; }
.outline-expander::before { content: ""; position: relative; font-family: Ionicons; display: inline-block; font-size: 8px; vertical-align: middle; }
.outline-item { padding-top: 3px; padding-bottom: 3px; cursor: pointer; }
.outline-expander:hover::before { content: ""; }
.outline-h1 > .outline-item { padding-left: 0px; }
.outline-h2 > .outline-item { padding-left: 1em; }
.outline-h3 > .outline-item { padding-left: 2em; }
.outline-h4 > .outline-item { padding-left: 3em; }
.outline-h5 > .outline-item { padding-left: 4em; }
.outline-h6 > .outline-item { padding-left: 5em; }
.outline-label { cursor: pointer; display: table-cell; vertical-align: middle; text-decoration: none; color: inherit; }
.outline-label:hover { text-decoration: underline; }
.outline-item:hover { border-color: rgb(245, 245, 245); background-color: var(--item-hover-bg-color); }
.outline-item:hover { margin-left: -28px; margin-right: -28px; border-left-width: 28px; border-left-style: solid; border-left-color: transparent; border-right-width: 28px; border-right-style: solid; border-right-color: transparent; }
.outline-item-single .outline-expander::before, .outline-item-single .outline-expander:hover::before { display: none; }
.outline-item-open > .outline-item > .outline-expander::before { content: ""; }
.outline-children { display: none; }
.info-panel-tab-wrapper { display: none; }
.outline-item-open > .outline-children { display: block; }
.typora-export .outline-item { padding-top: 1px; padding-bottom: 1px; }
.typora-export .outline-item:hover { margin-right: -8px; border-right-width: 8px; border-right-style: solid; border-right-color: transparent; }
.typora-export .outline-expander::before { content: "+"; font-family: inherit; top: -1px; }
.typora-export .outline-expander:hover::before, .typora-export .outline-item-open > .outline-item > .outline-expander::before { content: "−"; }
.typora-export-collapse-outline .outline-children { display: none; }
.typora-export-collapse-outline .outline-item-open > .outline-children, .typora-export-no-collapse-outline .outline-children { display: block; }
.typora-export-no-collapse-outline .outline-expander::before { content: "" !important; }
.typora-export-show-outline .outline-item-active > .outline-item .outline-label { font-weight: 700; }
.md-inline-math-container mjx-container { zoom: 0.95; }


.CodeMirror { height: auto; }
.CodeMirror.cm-s-inner { background-image: inherit; background-size: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: inherit; background-position: inherit; background-repeat: inherit; }
.CodeMirror-scroll { overflow: auto hidden; z-index: 3; }
.CodeMirror-gutter-filler, .CodeMirror-scrollbar-filler { background-color: rgb(255, 255, 255); }
.CodeMirror-gutters { border-right-width: 1px; border-right-style: solid; border-right-color: rgb(221, 221, 221); background-image: inherit; background-size: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: inherit; white-space: nowrap; background-position: inherit; background-repeat: inherit; }
.CodeMirror-linenumber { padding: 0px 3px 0px 5px; text-align: right; color: rgb(153, 153, 153); }
.cm-s-inner .cm-keyword { color: rgb(119, 0, 136); }
.cm-s-inner .cm-atom, .cm-s-inner.cm-atom { color: rgb(34, 17, 153); }
.cm-s-inner .cm-number { color: rgb(17, 102, 68); }
.cm-s-inner .cm-def { color: rgb(0, 0, 255); }
.cm-s-inner .cm-variable { color: rgb(0, 0, 0); }
.cm-s-inner .cm-variable-2 { color: rgb(0, 85, 170); }
.cm-s-inner .cm-variable-3 { color: rgb(0, 136, 85); }
.cm-s-inner .cm-string { color: rgb(170, 17, 17); }
.cm-s-inner .cm-property { color: rgb(0, 0, 0); }
.cm-s-inner .cm-operator { color: rgb(152, 26, 26); }
.cm-s-inner .cm-comment, .cm-s-inner.cm-comment { color: rgb(170, 85, 0); }
.cm-s-inner .cm-string-2 { color: rgb(255, 85, 0); }
.cm-s-inner .cm-meta { color: rgb(85, 85, 85); }
.cm-s-inner .cm-qualifier { color: rgb(85, 85, 85); }
.cm-s-inner .cm-builtin { color: rgb(51, 0, 170); }
.cm-s-inner .cm-bracket { color: rgb(153, 153, 119); }
.cm-s-inner .cm-tag { color: rgb(17, 119, 0); }
.cm-s-inner .cm-attribute { color: rgb(0, 0, 204); }
.cm-s-inner .cm-header, .cm-s-inner.cm-header { color: rgb(0, 0, 255); }
.cm-s-inner .cm-quote, .cm-s-inner.cm-quote { color: rgb(0, 153, 0); }
.cm-s-inner .cm-hr, .cm-s-inner.cm-hr { color: rgb(153, 153, 153); }
.cm-s-inner .cm-link, .cm-s-inner.cm-link { color: rgb(0, 0, 204); }
.cm-negative { color: rgb(221, 68, 68); }
.cm-positive { color: rgb(34, 153, 34); }
.cm-header, .cm-strong { font-weight: 700; }
.cm-del { text-decoration: line-through; }
.cm-em { font-style: italic; }
.cm-link { text-decoration: underline; }
.cm-error { color: red; }
.cm-invalidchar { color: red; }
.cm-constant { color: rgb(38, 139, 210); }
.cm-defined { color: rgb(181, 137, 0); }
div.CodeMirror span.CodeMirror-matchingbracket { color: rgb(0, 255, 0); }
div.CodeMirror span.CodeMirror-nonmatchingbracket { color: rgb(255, 34, 34); }
.cm-s-inner .CodeMirror-activeline-background { background-image: inherit; background-size: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: inherit; background-position: inherit; background-repeat: inherit; }
.CodeMirror { position: relative; overflow: hidden; }
.CodeMirror-scroll { height: 100%; outline: 0px; position: relative; box-sizing: content-box; background-image: inherit; background-size: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: inherit; background-position: inherit; background-repeat: inherit; }
.CodeMirror-sizer { position: relative; }
.CodeMirror-gutter-filler, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler, .CodeMirror-vscrollbar { position: absolute; z-index: 6; display: none; outline: 0px; }
.CodeMirror-vscrollbar { right: 0px; top: 0px; overflow: hidden; }
.CodeMirror-hscrollbar { bottom: 0px; left: 0px; overflow: auto hidden; }
.CodeMirror-scrollbar-filler { right: 0px; bottom: 0px; }
.CodeMirror-gutter-filler { left: 0px; bottom: 0px; }
.CodeMirror-gutters { position: absolute; left: 0px; top: 0px; padding-bottom: 10px; z-index: 3; overflow-y: hidden; }
.CodeMirror-gutter { white-space: normal; height: 100%; box-sizing: content-box; padding-bottom: 30px; margin-bottom: -32px; display: inline-block; }
.CodeMirror-gutter-wrapper { position: absolute; z-index: 4; border: none !important; background-position: 0px 0px !important; }
.CodeMirror-gutter-background { position: absolute; top: 0px; bottom: 0px; z-index: 4; }
.CodeMirror-gutter-elt { position: absolute; cursor: default; z-index: 4; }
.CodeMirror-lines { cursor: text; }
.CodeMirror pre { border-radius: 0px; border-width: 0px; font-family: inherit; font-size: inherit; margin: 0px; white-space: pre; word-wrap: normal; color: inherit; z-index: 2; position: relative; overflow: visible; background-position: 0px 0px; }
.CodeMirror-wrap pre { word-wrap: break-word; white-space: pre-wrap; word-break: normal; }
.CodeMirror-code pre { border-right-width: 30px; border-right-style: solid; border-right-color: transparent; width: fit-content; }
.CodeMirror-wrap .CodeMirror-code pre { border-right-style: none; width: auto; }
.CodeMirror-linebackground { position: absolute; inset: 0px; z-index: 0; }
.CodeMirror-linewidget { position: relative; z-index: 2; overflow: auto; }
.CodeMirror-wrap .CodeMirror-scroll { overflow-x: hidden; }
.CodeMirror-measure { position: absolute; width: 100%; height: 0px; overflow: hidden; visibility: hidden; }
.CodeMirror-measure pre { position: static; }
.CodeMirror div.CodeMirror-cursor { position: absolute; visibility: hidden; border-right-style: none; width: 0px; }
.CodeMirror div.CodeMirror-cursor { visibility: hidden; }
.CodeMirror-focused div.CodeMirror-cursor { visibility: inherit; }
.cm-searching { background-color: rgba(255, 255, 0, 0.4); }
span.cm-underlined { text-decoration: underline; }
span.cm-strikethrough { text-decoration: line-through; }
.cm-tw-syntaxerror { color: rgb(255, 255, 255); background-color: rgb(153, 0, 0); }
.cm-tw-deleted { text-decoration: line-through; }
.cm-tw-header5 { font-weight: 700; }
.cm-tw-listitem:first-child { padding-left: 10px; }
.cm-tw-box { border-style: solid; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-color: inherit; border-top-width: 0px !important; }
.cm-tw-underline { text-decoration: underline; }
@media print {
  .CodeMirror div.CodeMirror-cursor { visibility: hidden; }
}


/* font face configs */

:root {
    /* change your prefered font here */
    --title-font: "Avenir";
    --text-font: "Avenir";
    /* the Inter fontface family provides rich opentype features. see https://rsms.me/inter/  */
    --general-font-feature-settings: "calt", "ccmp", "kern", "salt" 0;
    --cjk-font: "Source Han Sans SC", "思源黑体 CN", "思源黑体";
    --mono-font: "Source Code Pro", "Menlo";
    --fallback-font: "Inter Display", "Inter", "system-ui", "Helvetica Neue", Helvetica, Arial, sans-serif;
    --mermaid-font-family: "Inter Display", "Inter", "system-ui", "Helvetica Neue", Helvetica, Arial, sans-serif;
}

/* general color configs */

:root {
    --color-scale-black: #1b1f23;
    --color-scale-white: #fff;
    --color-scale-gray-0: #fafbfc;
    --color-scale-gray-1: #f6f8fa;
    --color-scale-gray-2: #e1e4e8;
    --color-scale-gray-3: #d1d5da;
    --color-scale-gray-4: #959da5;
    --color-scale-gray-5: #6a737d;
    --color-scale-gray-6: #586069;
    --color-scale-gray-7: #444d56;
    --color-scale-gray-8: #2f363d;
    --color-scale-gray-9: #24292e;
    --color-scale-blue-0: #f1f8ff;
    --color-scale-blue-1: #dbedff;
    --color-scale-blue-2: #c8e1ff;
    --color-scale-blue-3: #79b8ff;
    --color-scale-blue-4: #2188ff;
    --color-scale-blue-5: #0366d6;
    --color-scale-blue-6: #005cc5;
    --color-scale-blue-7: #044289;
    --color-scale-blue-8: #032f62;
    --color-scale-blue-9: #05264c;
    --mark-bg: #ffde67;
    --mark-text: #080a10;
    --color-cm-keyword: #3b78e7;
    --color-cm-attr: #9c27b0;
    --color-cm-comment: #6a737d;
    --color-cm-string: #0d904f;
    --color-cm-operator: #d81b60;
    --color-cm-number: #d81b60;
    --color-cm-meta: #6933b1;
    --color-cm-builtin: #e36209;
    --color-cm-v3: #43a8b3;
    --color-cm-v: #c53929;
    --color-cm-link: #24a3c3;
    --text-link: #486df1;
    --bookmark-color: #311b92;
    --bookmark-bg: #ae92e3;
    --star-color: #044289;
    --star-bg: var(--color-scale-blue-2);
    --question-color: #880e4f;
    --question-bg: #f8bbd0;
    --alert-color: #8a2a0d;
    --alert-bg: #e69d94;
    --note-color: #004d40;
    --note-bg: #8be3d6;
    --lightbulb-color: #b0791b;
    --lightbulb-bg: #fff9c4;
}

:root {
    --control-text-color: var(--color-text-secondary);
    --bg-color: #ffffff;
    /*change background*/
    --text-color: var(--color-text-primary);
    /*change text color*/
    --md-char-color: #b3bdd1;
    --meta-content-color: #398ea3;
    /*change color of meta contents like image text or link address in markdown */
    --primary-color: #486df1;
    --accent-color: #486df1;
    /* color of primary buttons */
    --primary-btn-border-color: var(--color-border-primary);
    --primary-btn-text-color: #fff;
    --window-border: 1px solid var(--color-bg-tertiary);
    /*border for sidebar, etc*/
    --active-file-bg-color: var(--color-auto-blue-1);
    /*background color if list item in file tree or file list*/
    --active-file-text-color: inherit;
    --active-file-border-color: var(--color-auto-blue-6);
    --side-bar-bg-color: #f9fafb;
    /*change background of sidebar*/
    --item-hover-bg-color: rgba(229, 229, 229, 0.59);
    /*background of control items when hover, like menu in sidebar*/
    --item-hover-text-color: inherit;
    /*mono font for codes, fences*/
    --checkbox-filled: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2224%22%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M18%203C19.6569%203%2021%204.34315%2021%206V18C21%2019.6569%2019.6569%2021%2018%2021H6C4.34315%2021%203%2019.6569%203%2018V6C3%204.34315%204.34315%203%206%203H18ZM16.4697%207.96967L10%2014.4393L7.53033%2011.9697C7.23744%2011.6768%206.76256%2011.6768%206.46967%2011.9697C6.17678%2012.2626%206.17678%2012.7374%206.46967%2013.0303L9.46967%2016.0303C9.76256%2016.3232%2010.2374%2016.3232%2010.5303%2016.0303L17.5303%209.03033C17.8232%208.73744%2017.8232%208.26256%2017.5303%207.96967C17.2374%207.67678%2016.7626%207.67678%2016.4697%207.96967Z%22%20fill%3D%22%23486df1%22/%3E%0A%3C/svg%3E%0A");
    --dots: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M10%206C9.30964%206%208.75%205.44036%208.75%204.75C8.75%204.05964%209.30964%203.5%2010%203.5C10.6904%203.5%2011.25%204.05964%2011.25%204.75C11.25%205.44036%2010.6904%206%2010%206Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M10%2011.25C9.30964%2011.25%208.75%2010.6904%208.75%2010C8.75%209.30964%209.30964%208.75%2010%208.75C10.6904%208.75%2011.25%209.30964%2011.25%2010C11.25%2010.6904%2010.6904%2011.25%2010%2011.25Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M8.75%2015.25C8.75%2015.9404%209.30964%2016.5%2010%2016.5C10.6904%2016.5%2011.25%2015.9404%2011.25%2015.25C11.25%2014.5596%2010.6904%2014%2010%2014C9.30964%2014%208.75%2014.5596%208.75%2015.25Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");
    --cells: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M7.5%2011C8.32843%2011%209%2011.6716%209%2012.5V16.5C9%2017.3284%208.32843%2018%207.5%2018H3.5C2.67157%2018%202%2017.3284%202%2016.5V12.5C2%2011.6716%202.67157%2011%203.5%2011H7.5ZM16.5%2011C17.3284%2011%2018%2011.6716%2018%2012.5V16.5C18%2017.3284%2017.3284%2018%2016.5%2018H12.5C11.6716%2018%2011%2017.3284%2011%2016.5V12.5C11%2011.6716%2011.6716%2011%2012.5%2011H16.5ZM7.5%2012H3.5C3.22386%2012%203%2012.2239%203%2012.5V16.5C3%2016.7761%203.22386%2017%203.5%2017H7.5C7.77614%2017%208%2016.7761%208%2016.5V12.5C8%2012.2239%207.77614%2012%207.5%2012ZM16.5%2012H12.5C12.2239%2012%2012%2012.2239%2012%2012.5V16.5C12%2016.7761%2012.2239%2017%2012.5%2017H16.5C16.7761%2017%2017%2016.7761%2017%2016.5V12.5C17%2012.2239%2016.7761%2012%2016.5%2012ZM7.5%202C8.32843%202%209%202.67157%209%203.5V7.5C9%208.32843%208.32843%209%207.5%209H3.5C2.67157%209%202%208.32843%202%207.5V3.5C2%202.67157%202.67157%202%203.5%202H7.5ZM16.5%202C17.3284%202%2018%202.67157%2018%203.5V7.5C18%208.32843%2017.3284%209%2016.5%209H12.5C11.6716%209%2011%208.32843%2011%207.5V3.5C11%202.67157%2011.6716%202%2012.5%202H16.5ZM7.5%203H3.5C3.22386%203%203%203.22386%203%203.5V7.5C3%207.77614%203.22386%208%203.5%208H7.5C7.77614%208%208%207.77614%208%207.5V3.5C8%203.22386%207.77614%203%207.5%203ZM16.5%203H12.5C12.2239%203%2012%203.22386%2012%203.5V7.5C12%207.77614%2012.2239%208%2012.5%208H16.5C16.7761%208%2017%207.77614%2017%207.5V3.5C17%203.22386%2016.7761%203%2016.5%203Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");
    --add: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M9.5%2016.5C9.5%2016.7761%209.72386%2017%2010%2017C10.2761%2017%2010.5%2016.7761%2010.5%2016.5V10.5H16.5C16.7761%2010.5%2017%2010.2761%2017%2010C17%209.72386%2016.7761%209.5%2016.5%209.5H10.5V3.5C10.5%203.22386%2010.2761%203%2010%203C9.72386%203%209.5%203.22386%209.5%203.5V9.5H3.5C3.22386%209.5%203%209.72386%203%2010C3%2010.2761%203.22386%2010.5%203.5%2010.5H9.5V16.5Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");
    --chevron-right: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2212%22%20height%3D%2212%22%20viewBox%3D%220%200%2012%2012%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M4.46967%202.21967C4.17678%202.51256%204.17678%202.98744%204.46967%203.28033L7.18934%206L4.46967%208.71967C4.17678%209.01256%204.17678%209.48744%204.46967%209.78033C4.76256%2010.0732%205.23744%2010.0732%205.53033%209.78033L8.78033%206.53033C9.07322%206.23744%209.07322%205.76256%208.78033%205.46967L5.53033%202.21967C5.23744%201.92678%204.76256%201.92678%204.46967%202.21967Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");
    --chevron-down: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2212%22%20height%3D%2212%22%20viewBox%3D%220%200%2012%2012%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M2.21967%204.46967C2.51256%204.17678%202.98744%204.17678%203.28033%204.46967L6%207.18934L8.71967%204.46967C9.01256%204.17678%209.48744%204.17678%209.78033%204.46967C10.0732%204.76256%2010.0732%205.23744%209.78033%205.53033L6.53033%208.78033C6.23744%209.07322%205.76256%209.07322%205.46967%208.78033L2.21967%205.53033C1.92678%205.23744%201.92678%204.76256%202.21967%204.46967Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");
    --document: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M7.5%207C7.22386%207%207%207.22386%207%207.5C7%207.77614%207.22386%208%207.5%208H12.5C12.7761%208%2013%207.77614%2013%207.5C13%207.22386%2012.7761%207%2012.5%207H7.5Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M7%2010.5C7%2010.2239%207.22386%2010%207.5%2010H12.5C12.7761%2010%2013%2010.2239%2013%2010.5C13%2010.7761%2012.7761%2011%2012.5%2011H7.5C7.22386%2011%207%2010.7761%207%2010.5Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M7.5%2013C7.22386%2013%207%2013.2239%207%2013.5C7%2013.7761%207.22386%2014%207.5%2014H9.5C9.77614%2014%2010%2013.7761%2010%2013.5C10%2013.2239%209.77614%2013%209.5%2013H7.5Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M6.5%202C6.22386%202%206%202.22386%206%202.5V3H5.5C4.67157%203%204%203.67157%204%204.5V16.5C4%2017.3284%204.67157%2018%205.5%2018H11.5C11.6326%2018%2011.7598%2017.9473%2011.8536%2017.8536L15.8536%2013.8536C15.9473%2013.7598%2016%2013.6326%2016%2013.5V4.5C16%203.67157%2015.3284%203%2014.5%203H14V2.5C14%202.22386%2013.7761%202%2013.5%202C13.2239%202%2013%202.22386%2013%202.5V3H10.5V2.5C10.5%202.22386%2010.2761%202%2010%202C9.72386%202%209.5%202.22386%209.5%202.5V3H7V2.5C7%202.22386%206.77614%202%206.5%202ZM14.5%204C14.7761%204%2015%204.22386%2015%204.5V13H12.5C11.6716%2013%2011%2013.6716%2011%2014.5V17H5.5C5.22386%2017%205%2016.7761%205%2016.5V4.5C5%204.22386%205.22386%204%205.5%204H14.5ZM14.2929%2014L12%2016.2929V14.5C12%2014.2239%2012.2239%2014%2012.5%2014H14.2929Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");
    --folder: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M7.16667%203C7.43713%203%207.70151%203.0731%207.93238%203.21016L8.06667%203.3L9.667%204.5H15.5C16.7703%204.5%2017.8192%205.44737%2017.9789%206.67409L17.9947%206.83562L18%207V14.5C18%2015.8255%2016.9685%2016.91%2015.6644%2016.9947L15.5%2017H4.5C3.17452%2017%202.08996%2015.9685%202.00532%2014.6644L2%2014.5V5.5C2%204.17452%203.03154%203.08996%204.33562%203.00532L4.5%203H7.16667ZM8.15763%207.03449C7.90991%207.2946%207.57838%207.45592%207.22435%207.49219L7.07143%207.5L3%207.499V14.5C3%2015.2797%203.59489%2015.9204%204.35554%2015.9931L4.5%2016H15.5C16.2797%2016%2016.9204%2015.4051%2016.9931%2014.6445L17%2014.5V7C17%206.2203%2016.4051%205.57955%2015.6445%205.50687L15.5%205.5H9.617L8.15763%207.03449ZM7.16667%204H4.5C3.7203%204%203.07955%204.59489%203.00687%205.35554L3%205.5V6.499L7.07143%206.5C7.1809%206.5%207.28655%206.46411%207.37274%206.39902L7.4335%206.34483L8.694%205.021L7.46667%204.1C7.40176%204.05132%207.32632%204.01941%207.24701%204.0065L7.16667%204Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");
    --navigation: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M3%206.5C3.55228%206.5%204%206.05228%204%205.5C4%204.94772%203.55228%204.5%203%204.5C2.44772%204.5%202%204.94772%202%205.5C2%206.05228%202.44772%206.5%203%206.5ZM6%205.5C6%205.22386%206.22386%205%206.5%205H17.5C17.7761%205%2018%205.22386%2018%205.5C18%205.77614%2017.7761%206%2017.5%206H6.5C6.22386%206%206%205.77614%206%205.5ZM6%209.5C6%209.22386%206.22386%209%206.5%209H17.5C17.7761%209%2018%209.22386%2018%209.5C18%209.77614%2017.7761%2010%2017.5%2010H6.5C6.22386%2010%206%209.77614%206%209.5ZM6.5%2013C6.22386%2013%206%2013.2239%206%2013.5C6%2013.7761%206.22386%2014%206.5%2014H17.5C17.7761%2014%2018%2013.7761%2018%2013.5C18%2013.2239%2017.7761%2013%2017.5%2013H6.5ZM4%2013.5C4%2014.0523%203.55228%2014.5%203%2014.5C2.44772%2014.5%202%2014.0523%202%2013.5C2%2012.9477%202.44772%2012.5%203%2012.5C3.55228%2012.5%204%2012.9477%204%2013.5ZM3%2010.5C3.55228%2010.5%204%2010.0523%204%209.5C4%208.94772%203.55228%208.5%203%208.5C2.44772%208.5%202%208.94772%202%209.5C2%2010.0523%202.44772%2010.5%203%2010.5Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");
    --tree: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M9%205C9%203.34315%207.65685%202%206%202C4.34315%202%203%203.34315%203%205C3%206.4865%204.08114%207.72048%205.5%207.95852V12.0415C4.08114%2012.2795%203%2013.5135%203%2015C3%2016.6569%204.34315%2018%206%2018C7.65685%2018%209%2016.6569%209%2015C9%2013.5135%207.91886%2012.2795%206.5%2012.0415V11H12C13.3807%2011%2014.5%209.88071%2014.5%208.5V7.95852C15.9189%207.72048%2017%206.4865%2017%205C17%203.34315%2015.6569%202%2014%202C12.3431%202%2011%203.34315%2011%205C11%206.4865%2012.0811%207.72048%2013.5%207.95852V8.5C13.5%209.32843%2012.8284%2010%2012%2010H6.5V7.95852C7.91886%207.72048%209%206.4865%209%205ZM6%207C4.89543%207%204%206.10457%204%205C4%203.89543%204.89543%203%206%203C7.10457%203%208%203.89543%208%205C8%206.10457%207.10457%207%206%207ZM6%2017C4.89543%2017%204%2016.1046%204%2015C4%2013.8954%204.89543%2013%206%2013C7.10457%2013%208%2013.8954%208%2015C8%2016.1046%207.10457%2017%206%2017ZM16%205C16%206.10457%2015.1046%207%2014%207C12.8954%207%2012%206.10457%2012%205C12%203.89543%2012.8954%203%2014%203C15.1046%203%2016%203.89543%2016%205Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");
    --search: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M8.5%203C11.5376%203%2014%205.46243%2014%208.5C14%209.83879%2013.5217%2011.0659%2012.7266%2012.0196L16.8536%2016.1464C17.0488%2016.3417%2017.0488%2016.6583%2016.8536%2016.8536C16.68%2017.0271%2016.4106%2017.0464%2016.2157%2016.9114L16.1464%2016.8536L12.0196%2012.7266C11.0659%2013.5217%209.83879%2014%208.5%2014C5.46243%2014%203%2011.5376%203%208.5C3%205.46243%205.46243%203%208.5%203ZM8.5%204C6.01472%204%204%206.01472%204%208.5C4%2010.9853%206.01472%2013%208.5%2013C10.9853%2013%2013%2010.9853%2013%208.5C13%206.01472%2010.9853%204%208.5%204Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");
    --checkbox-checked: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2224%22%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M18.25%203C19.7688%203%2021%204.23122%2021%205.75V18.25C21%2019.7688%2019.7688%2021%2018.25%2021H5.75C4.23122%2021%203%2019.7688%203%2018.25V5.75C3%204.23122%204.23122%203%205.75%203H18.25ZM18.25%204.5H5.75C5.05964%204.5%204.5%205.05964%204.5%205.75V18.25C4.5%2018.9404%205.05964%2019.5%205.75%2019.5H18.25C18.9404%2019.5%2019.5%2018.9404%2019.5%2018.25V5.75C19.5%205.05964%2018.9404%204.5%2018.25%204.5ZM10%2014.4393L16.4697%207.96967C16.7626%207.67678%2017.2374%207.67678%2017.5303%207.96967C17.7966%208.23594%2017.8208%208.6526%2017.6029%208.94621L17.5303%209.03033L10.5303%2016.0303C10.2641%2016.2966%209.8474%2016.3208%209.55379%2016.1029L9.46967%2016.0303L6.46967%2013.0303C6.17678%2012.7374%206.17678%2012.2626%206.46967%2011.9697C6.73594%2011.7034%207.1526%2011.6792%207.44621%2011.8971L7.53033%2011.9697L10%2014.4393L16.4697%207.96967L10%2014.4393Z%22%20fill%3D%22%23000%22/%3E%0A%3C/svg%3E%0A");
    --checkbox-unchecked: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2224%22%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M5.75%203H18.25C19.7688%203%2021%204.23122%2021%205.75V18.25C21%2019.7688%2019.7688%2021%2018.25%2021H5.75C4.23122%2021%203%2019.7688%203%2018.25V5.75C3%204.23122%204.23122%203%205.75%203ZM5.75%204.5C5.05964%204.5%204.5%205.05964%204.5%205.75V18.25C4.5%2018.9404%205.05964%2019.5%205.75%2019.5H18.25C18.9404%2019.5%2019.5%2018.9404%2019.5%2018.25V5.75C19.5%205.05964%2018.9404%204.5%2018.25%204.5H5.75Z%22%20fill%3D%22%23000%22/%3E%0A%3C/svg%3E%0A");
    --case: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M13.4911%203.50005C13.7013%203.50299%2013.8873%203.63714%2013.9563%203.83574L17.6085%2014.3357C17.6992%2014.5966%2017.5613%2014.8815%2017.3005%2014.9722C17.0397%2015.063%2016.7547%2014.9251%2016.664%2014.6643L15.7373%2012L10.9833%2012L9.96737%2014.6774C9.8694%2014.9356%209.58069%2015.0654%209.32251%2014.9675C9.06433%2014.8695%208.93445%2014.5808%209.03241%2014.3226L10.2727%2011.0539V11H10.2932L13.0166%203.82262C13.0912%203.62603%2013.2808%203.49711%2013.4911%203.50005ZM13.4636%205.46323L11.3627%2011L15.3895%2011L13.4636%205.46323Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M5.6667%208.70091L5.85817%208.70749C7.16522%208.77248%207.94311%209.52482%207.997%2010.737L8%2010.8735V14.5402C8%2014.7933%207.8119%2015.0025%207.56785%2015.0356L7.5%2015.0402C7.24687%2015.0402%207.03767%2014.8521%207.00456%2014.6081L7%2014.5402L6.9991%2014.4706C6.34072%2014.8475%205.7317%2015.0402%205.16667%2015.0402C3.94105%2015.0402%203%2014.1772%203%2012.8735C3%2011.724%203.79229%2010.8699%205.10646%2010.7105C5.728%2010.6351%206.35968%2010.6823%206.99902%2010.8503C6.99247%2010.1122%206.62837%209.74702%205.8085%209.70625C5.16701%209.67435%204.7162%209.76443%204.45216%209.94958C4.22607%2010.1081%203.91426%2010.0534%203.75572%209.82728C3.59717%209.60118%203.65193%209.28937%203.87802%209.13083C4.31656%208.8233%204.91381%208.68705%205.6667%208.70091ZM6.99933%2011.916L6.79742%2011.8558C6.25917%2011.7078%205.73655%2011.6657%205.22687%2011.7275C4.40527%2011.8271%204%2012.264%204%2012.8978C4%2013.6289%204.47493%2014.0644%205.16667%2014.0644C5.62021%2014.0644%206.17899%2013.8549%206.83419%2013.422L6.99933%2013.3094V11.916Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");
    --arrowleft: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M9.16289%2016.8692C9.36683%2017.0555%209.68308%2017.0411%209.86926%2016.8371C10.0554%2016.6331%2010.041%2016.3168%209.83711%2016.1306L3.66925%2010.4988L17.5%2010.4988C17.7761%2010.4988%2018%2010.2749%2018%209.99868C18%209.72249%2017.7761%209.49859%2017.5%209.49859L3.67214%209.49859L9.83711%203.86943C10.041%203.68322%2010.0554%203.3669%209.86926%203.16293C9.68308%202.95895%209.36683%202.94455%209.16289%203.13076L2.24654%209.446C2.10659%209.57378%202.02676%209.74135%202.00705%209.91453C2.00241%209.94189%202%209.97%202%209.99868C2%2010.0256%202.00212%2010.0519%202.0062%2010.0777C2.02437%2010.2536%202.10449%2010.4243%202.24654%2010.554L9.16289%2016.8692Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");
    --match: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M9.5%2012.75C9.5%2013.1642%209.16421%2013.5%208.75%2013.5C8.33579%2013.5%208%2013.1642%208%2012.75C8%2012.3358%208.33579%2012%208.75%2012C9.16421%2012%209.5%2012.3358%209.5%2012.75Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M11.75%2012.75C11.75%2013.1642%2011.4142%2013.5%2011%2013.5C10.5858%2013.5%2010.25%2013.1642%2010.25%2012.75C10.25%2012.3358%2010.5858%2012%2011%2012C11.4142%2012%2011.75%2012.3358%2011.75%2012.75Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M14%2012.75C14%2013.1642%2013.6642%2013.5%2013.25%2013.5C12.8358%2013.5%2012.5%2013.1642%2012.5%2012.75C12.5%2012.3358%2012.8358%2012%2013.25%2012C13.6642%2012%2014%2012.3358%2014%2012.75Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M16.25%2012.75C16.25%2013.1642%2015.9142%2013.5%2015.5%2013.5C15.0858%2013.5%2014.75%2013.1642%2014.75%2012.75C14.75%2012.3358%2015.0858%2012%2015.5%2012C15.9142%2012%2016.25%2012.3358%2016.25%2012.75Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M8.75%208C9.16421%208%209.5%207.66421%209.5%207.25C9.5%206.83579%209.16421%206.5%208.75%206.5C8.33579%206.5%208%206.83579%208%207.25C8%207.66421%208.33579%208%208.75%208Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M11%208C11.4142%208%2011.75%207.66421%2011.75%207.25C11.75%206.83579%2011.4142%206.5%2011%206.5C10.5858%206.5%2010.25%206.83579%2010.25%207.25C10.25%207.66421%2010.5858%208%2011%208Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M13.25%208C13.6642%208%2014%207.66421%2014%207.25C14%206.83579%2013.6642%206.5%2013.25%206.5C12.8358%206.5%2012.5%206.83579%2012.5%207.25C12.5%207.66421%2012.8358%208%2013.25%208Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M15.5%208C15.9142%208%2016.25%207.66421%2016.25%207.25C16.25%206.83579%2015.9142%206.5%2015.5%206.5C15.0858%206.5%2014.75%206.83579%2014.75%207.25C14.75%207.66421%2015.0858%208%2015.5%208Z%22%20fill%3D%22%23636566%22/%3E%0A%3Cpath%20d%3D%22M2%207C2%205.34315%203.34315%204%205%204H15C16.6569%204%2018%205.34315%2018%207V13C18%2014.6569%2016.6569%2016%2015%2016H5C3.34315%2016%202%2014.6569%202%2013V7ZM5%205C3.89543%205%203%205.89543%203%207V9.5H6V5H5ZM6%2010.5H3V13C3%2014.1046%203.89543%2015%205%2015H6V10.5ZM7%2010.5V15H15C16.1046%2015%2017%2014.1046%2017%2013V10.5H7ZM17%209.5V7C17%205.89543%2016.1046%205%2015%205H7V9.5H17Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");
    --chevron-up: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M4.14708%2012.3544C3.95147%2012.1594%203.9509%2011.8429%204.14582%2011.6472L9.6108%206.16276C9.82574%205.94705%2010.1751%205.94705%2010.39%206.16276L15.855%2011.6472C16.0499%2011.8429%2016.0493%2012.1594%2015.8537%2012.3544C15.6581%2012.5493%2015.3415%2012.5487%2015.1466%2012.3531L10.0004%207.18851L4.85418%2012.3531C4.65927%2012.5487%204.34269%2012.5493%204.14708%2012.3544Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");
    --chevron-next: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M15.8527%207.64582C16.0484%207.84073%2016.0489%208.15731%2015.854%208.35292L10.389%2013.8374C10.1741%2014.0531%209.82477%2014.0531%209.60982%2013.8374L4.14484%208.35292C3.94993%208.15731%203.95049%207.84073%204.1461%207.64582C4.34171%207.4509%204.65829%207.45147%204.85321%207.64708L9.99942%2012.8117L15.1456%207.64708C15.3406%207.45147%2015.6571%207.4509%2015.8527%207.64582Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");
    --dismiss: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M4.08859%204.21569L4.14645%204.14645C4.32001%203.97288%204.58944%203.9536%204.78431%204.08859L4.85355%204.14645L10%209.293L15.1464%204.14645C15.32%203.97288%2015.5894%203.9536%2015.7843%204.08859L15.8536%204.14645C16.0271%204.32001%2016.0464%204.58944%2015.9114%204.78431L15.8536%204.85355L10.707%2010L15.8536%2015.1464C16.0271%2015.32%2016.0464%2015.5894%2015.9114%2015.7843L15.8536%2015.8536C15.68%2016.0271%2015.4106%2016.0464%2015.2157%2015.9114L15.1464%2015.8536L10%2010.707L4.85355%2015.8536C4.67999%2016.0271%204.41056%2016.0464%204.21569%2015.9114L4.14645%2015.8536C3.97288%2015.68%203.9536%2015.4106%204.08859%2015.2157L4.14645%2015.1464L9.293%2010L4.14645%204.85355C3.97288%204.67999%203.9536%204.41056%204.08859%204.21569L4.14645%204.14645L4.08859%204.21569Z%22%20fill%3D%22%23636566%22/%3E%0A%3C/svg%3E%0A");
    --bookmark-filled: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M4%204.5C4%203.11929%205.11929%202%206.5%202H13.5C14.8807%202%2016%203.11929%2016%204.5V17.5C16%2017.6881%2015.8945%2017.8602%2015.7269%2017.9456C15.5593%2018.0309%2015.358%2018.015%2015.2059%2017.9044L10%2014.1183L4.79409%2017.9044C4.64199%2018.015%204.4407%2018.0309%204.27311%2017.9456C4.10553%2017.8602%204%2017.6881%204%2017.5V4.5Z%22%20fill%3D%22%23311b92%22/%3E%0A%3C/svg%3E%0A");
    --chat-help-filled: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M2.00001%2010C2.00001%205.58172%205.58173%202%2010%202C14.4183%202%2018%205.58172%2018%2010C18%2014.4183%2014.4183%2018%2010%2018C8.65078%2018%207.37829%2017.6656%206.26225%2017.0748L2.62128%2017.9851C2.45089%2018.0277%202.27065%2017.9777%202.14646%2017.8536C2.02227%2017.7294%201.97234%2017.5491%202.01494%2017.3787L2.92518%2013.7378C2.33442%2012.6217%202.00001%2011.3492%202.00001%2010ZM9.25027%207.30723C9.40317%207.13358%209.64031%207%2010%207C10.3597%207%2010.5968%207.13358%2010.7497%207.30723C10.9113%207.49072%2011%207.74463%2011%208C11%208.31707%2010.9286%208.52273%2010.8337%208.68547C10.7328%208.85858%2010.5985%208.99908%2010.4106%209.19559L10.3885%209.21878C10.2003%209.41576%209.96787%209.66319%209.79142%2010.0002C9.61017%2010.3464%209.5%2010.7611%209.5%2011.2929C9.5%2011.5691%209.72386%2011.7929%2010%2011.7929C10.2761%2011.7929%2010.5%2011.5691%2010.5%2011.2929C10.5%2010.9085%2010.5773%2010.6551%2010.6773%2010.4641C10.7821%2010.2639%2010.9247%2010.1051%2011.1115%209.90956L11.1528%209.86652C11.3225%209.68963%2011.5347%209.46855%2011.6976%209.18921C11.8839%208.86964%2012%208.48947%2012%208C12%207.52689%2011.8387%207.0308%2011.5003%206.64641C11.1532%206.25219%2010.6403%206%2010%206C9.35969%206%208.84683%206.25219%208.49973%206.64641C8.16129%207.0308%208%207.52689%208%208C8%208.27614%208.22386%208.5%208.5%208.5C8.77614%208.5%209%208.27614%209%208C9%207.74463%209.08871%207.49072%209.25027%207.30723ZM10.6995%2013.5126C10.6995%2013.1262%2010.3863%2012.813%209.99989%2012.813C9.61352%2012.813%209.30029%2013.1262%209.30029%2013.5126C9.30029%2013.899%209.61352%2014.2122%209.99989%2014.2122C10.3863%2014.2122%2010.6995%2013.899%2010.6995%2013.5126Z%22%20fill%3D%22%23880e4f%22/%3E%0A%3C/svg%3E%0A");
    --star-filled: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M9.10433%202.89874C9.47114%202.15549%2010.531%202.1555%2010.8978%202.89874L12.8282%206.81024L17.1448%207.43748C17.9651%207.55666%2018.2926%208.56464%2017.699%209.14317L14.5755%2012.1878L15.3129%2016.487C15.453%2017.3039%2014.5956%2017.9269%2013.8619%2017.5412L10.0011%2015.5114L6.14018%2017.5412C5.40655%2017.9269%204.54913%2017.3039%204.68924%2016.487L5.4266%2012.1878L2.30308%209.14317C1.70956%208.56463%202.03708%207.55666%202.8573%207.43748L7.17389%206.81024L9.10433%202.89874Z%22%20fill%3D%22%23044289%22/%3E%0A%3C/svg%3E%0A");
    --warn-filled: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M8.68569%202.85232L2.12696%2014.7773C1.57714%2015.777%202.30038%2017.0002%203.44129%2017.0002H16.5587C17.6996%2017.0002%2018.4229%2015.777%2017.8731%2014.7773L11.3143%202.85232C10.7444%201.81615%209.25558%201.81616%208.68569%202.85232ZM10%206.75016C10.4142%206.75016%2010.75%207.08595%2010.75%207.50016V11.5002C10.75%2011.9144%2010.4142%2012.2502%2010%2012.2502C9.58579%2012.2502%209.25%2011.9144%209.25%2011.5002V7.50016C9.25%207.08595%209.58579%206.75016%2010%206.75016ZM10.75%2013.7502C10.75%2014.1644%2010.4142%2014.5002%2010%2014.5002C9.58579%2014.5002%209.25%2014.1644%209.25%2013.7502C9.25%2013.3359%209.58579%2013.0002%2010%2013.0002C10.4142%2013.0002%2010.75%2013.3359%2010.75%2013.7502Z%22%20fill%3D%22%238a2a0d%22/%3E%0A%3C/svg%3E%0A");
    --light-bulb-filled: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M13.073%2015L12.6891%2016.6051C12.5048%2017.3763%2011.8236%2017.935%2011.0181%2017.9947L10.8748%2018H9.12546C8.30655%2018%207.59%2017.4839%207.34866%2016.7385L7.31108%2016.6047L6.928%2015H13.073Z%22%20fill%3D%22%23b0791b%22/%3E%0A%3Cpath%20d%3D%22M10%202C13.3137%202%2016%204.59693%2016%207.80041C16%209.47737%2015.2546%2011.0164%2013.7961%2012.3942C13.7324%2012.4544%2013.6831%2012.5269%2013.6512%2012.6065L13.6251%2012.6883L13.311%2014H10.5002V9.49707C10.5002%209.22093%2010.2764%208.99707%2010.0002%208.99707C9.7241%208.99707%209.50024%209.22093%209.50024%209.49707V14H6.689L6.37626%2012.6886C6.34955%2012.5766%206.29016%2012.4745%206.20516%2012.3942C4.8153%2011.0819%204.07265%209.62354%204.00507%208.03903L4%207.80041L4.00321%207.60894C4.1077%204.49409%206.75257%202%2010%202ZM9.5%206.50238V7.50391C9.5%207.78005%209.72386%208.00391%2010%208.00391C10.2761%208.00391%2010.5%207.78005%2010.5%207.50391V6.50238C10.5%206.22624%2010.2761%206.00238%2010%206.00238C9.72386%206.00238%209.5%206.22624%209.5%206.50238ZM12.8506%207.44332C12.6553%207.24806%2012.3388%207.24806%2012.1435%207.44332L11.4353%208.15151C11.2401%208.34677%2011.2401%208.66335%2011.4353%208.85861C11.6306%209.05388%2011.9472%209.05388%2012.1424%208.85861L12.8506%208.15043C13.0459%207.95517%2013.0459%207.63858%2012.8506%207.44332ZM7.8521%207.44332C7.65684%207.24806%207.34026%207.24806%207.145%207.44332C6.94973%207.63858%206.94973%207.95517%207.145%208.15043L7.85318%208.85861C8.04844%209.05388%208.36503%209.05388%208.56029%208.85861C8.75555%208.66335%208.75555%208.34677%208.56029%208.15151L7.8521%207.44332Z%22%20fill%3D%22%23b0791b%22/%3E%0A%3C/svg%3E%0A");
    --note-filled: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M14%203C15.5977%203%2016.9037%204.24892%2016.9949%205.82373L17%206V10H13L12.8237%2010.0051C11.3072%2010.093%2010.093%2011.3072%2010.0051%2012.8237L10%2013V17H6C4.40232%2017%203.09634%2015.7511%203.00509%2014.1763L3%2014V6C3%204.40232%204.24892%203.09634%205.82373%203.00509L6%203H14ZM16.9007%2011.001C16.8232%2011.2376%2016.7018%2011.459%2016.5416%2011.6528L16.4142%2011.7929L11.7929%2016.4142C11.5687%2016.6384%2011.2968%2016.8039%2011.001%2016.9007L11%2013L11.0055%2012.8507C11.078%2011.8676%2011.8612%2011.0821%2012.8433%2011.006L13%2011L16.9007%2011.001Z%22%20fill%3D%22%23004d40%22/%3E%0A%3C/svg%3E%0A");
    --elevated-background: var(--color-scale-gray-0);
    --border: #f1f3f4;
    --icon-color: var(--text-color);
    --icon-filer: brightness(10);
    --title-color: #3399FF;
    --monospace: var(--mono);
    --mark-border: none;
    --table-border: 1px solid var(--color-scale-gray-2) !important;
}

@media (prefers-color-scheme: dark) {
    :root {
        --mermaid-theme: dark;
        --title-color: #eff0f2;
        --bg-color: #131416;
        --text-color: #d0d3d4;
        --side-bar-bg-color: #030405;
        --control-text-color: #a0a0a0;
        --item-hover-bg-color: rgba(60, 61, 61, 0.59);
        --elevated-background: var(--color-scale-gray-9);
        --border: var(--color-auto-gray-8);
        --primary-color: #33373f;
        --accent-color: #33373f;
        --icon-color: var(--color-scale-gray-1);
        --icon-filer: brightness(10);
        --bookmark-filled: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M4%204.5C4%203.11929%205.11929%202%206.5%202H13.5C14.8807%202%2016%203.11929%2016%204.5V17.5C16%2017.6881%2015.8945%2017.8602%2015.7269%2017.9456C15.5593%2018.0309%2015.358%2018.015%2015.2059%2017.9044L10%2014.1183L4.79409%2017.9044C4.64199%2018.015%204.4407%2018.0309%204.27311%2017.9456C4.10553%2017.8602%204%2017.6881%204%2017.5V4.5Z%22%20fill%3D%22%23ae92e3%22/%3E%0A%3C/svg%3E%0A");
        --chat-help-filled: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M2.00001%2010C2.00001%205.58172%205.58173%202%2010%202C14.4183%202%2018%205.58172%2018%2010C18%2014.4183%2014.4183%2018%2010%2018C8.65078%2018%207.37829%2017.6656%206.26225%2017.0748L2.62128%2017.9851C2.45089%2018.0277%202.27065%2017.9777%202.14646%2017.8536C2.02227%2017.7294%201.97234%2017.5491%202.01494%2017.3787L2.92518%2013.7378C2.33442%2012.6217%202.00001%2011.3492%202.00001%2010ZM9.25027%207.30723C9.40317%207.13358%209.64031%207%2010%207C10.3597%207%2010.5968%207.13358%2010.7497%207.30723C10.9113%207.49072%2011%207.74463%2011%208C11%208.31707%2010.9286%208.52273%2010.8337%208.68547C10.7328%208.85858%2010.5985%208.99908%2010.4106%209.19559L10.3885%209.21878C10.2003%209.41576%209.96787%209.66319%209.79142%2010.0002C9.61017%2010.3464%209.5%2010.7611%209.5%2011.2929C9.5%2011.5691%209.72386%2011.7929%2010%2011.7929C10.2761%2011.7929%2010.5%2011.5691%2010.5%2011.2929C10.5%2010.9085%2010.5773%2010.6551%2010.6773%2010.4641C10.7821%2010.2639%2010.9247%2010.1051%2011.1115%209.90956L11.1528%209.86652C11.3225%209.68963%2011.5347%209.46855%2011.6976%209.18921C11.8839%208.86964%2012%208.48947%2012%208C12%207.52689%2011.8387%207.0308%2011.5003%206.64641C11.1532%206.25219%2010.6403%206%2010%206C9.35969%206%208.84683%206.25219%208.49973%206.64641C8.16129%207.0308%208%207.52689%208%208C8%208.27614%208.22386%208.5%208.5%208.5C8.77614%208.5%209%208.27614%209%208C9%207.74463%209.08871%207.49072%209.25027%207.30723ZM10.6995%2013.5126C10.6995%2013.1262%2010.3863%2012.813%209.99989%2012.813C9.61352%2012.813%209.30029%2013.1262%209.30029%2013.5126C9.30029%2013.899%209.61352%2014.2122%209.99989%2014.2122C10.3863%2014.2122%2010.6995%2013.899%2010.6995%2013.5126Z%22%20fill%3D%22%23f8bbd0%22/%3E%0A%3C/svg%3E%0A");
        --star-filled: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M9.10433%202.89874C9.47114%202.15549%2010.531%202.1555%2010.8978%202.89874L12.8282%206.81024L17.1448%207.43748C17.9651%207.55666%2018.2926%208.56464%2017.699%209.14317L14.5755%2012.1878L15.3129%2016.487C15.453%2017.3039%2014.5956%2017.9269%2013.8619%2017.5412L10.0011%2015.5114L6.14018%2017.5412C5.40655%2017.9269%204.54913%2017.3039%204.68924%2016.487L5.4266%2012.1878L2.30308%209.14317C1.70956%208.56463%202.03708%207.55666%202.8573%207.43748L7.17389%206.81024L9.10433%202.89874Z%22%20fill%3D%22%23c8e1ff%22/%3E%0A%3C/svg%3E%0A");
        --warn-filled: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M8.68569%202.85232L2.12696%2014.7773C1.57714%2015.777%202.30038%2017.0002%203.44129%2017.0002H16.5587C17.6996%2017.0002%2018.4229%2015.777%2017.8731%2014.7773L11.3143%202.85232C10.7444%201.81615%209.25558%201.81616%208.68569%202.85232ZM10%206.75016C10.4142%206.75016%2010.75%207.08595%2010.75%207.50016V11.5002C10.75%2011.9144%2010.4142%2012.2502%2010%2012.2502C9.58579%2012.2502%209.25%2011.9144%209.25%2011.5002V7.50016C9.25%207.08595%209.58579%206.75016%2010%206.75016ZM10.75%2013.7502C10.75%2014.1644%2010.4142%2014.5002%2010%2014.5002C9.58579%2014.5002%209.25%2014.1644%209.25%2013.7502C9.25%2013.3359%209.58579%2013.0002%2010%2013.0002C10.4142%2013.0002%2010.75%2013.3359%2010.75%2013.7502Z%22%20fill%3D%22%23e69d94%22/%3E%0A%3C/svg%3E%0A");
        --light-bulb-filled: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M13.073%2015L12.6891%2016.6051C12.5048%2017.3763%2011.8236%2017.935%2011.0181%2017.9947L10.8748%2018H9.12546C8.30655%2018%207.59%2017.4839%207.34866%2016.7385L7.31108%2016.6047L6.928%2015H13.073Z%22%20fill%3D%22%23fff9c4%22/%3E%0A%3Cpath%20d%3D%22M10%202C13.3137%202%2016%204.59693%2016%207.80041C16%209.47737%2015.2546%2011.0164%2013.7961%2012.3942C13.7324%2012.4544%2013.6831%2012.5269%2013.6512%2012.6065L13.6251%2012.6883L13.311%2014H10.5002V9.49707C10.5002%209.22093%2010.2764%208.99707%2010.0002%208.99707C9.7241%208.99707%209.50024%209.22093%209.50024%209.49707V14H6.689L6.37626%2012.6886C6.34955%2012.5766%206.29016%2012.4745%206.20516%2012.3942C4.8153%2011.0819%204.07265%209.62354%204.00507%208.03903L4%207.80041L4.00321%207.60894C4.1077%204.49409%206.75257%202%2010%202ZM9.5%206.50238V7.50391C9.5%207.78005%209.72386%208.00391%2010%208.00391C10.2761%208.00391%2010.5%207.78005%2010.5%207.50391V6.50238C10.5%206.22624%2010.2761%206.00238%2010%206.00238C9.72386%206.00238%209.5%206.22624%209.5%206.50238ZM12.8506%207.44332C12.6553%207.24806%2012.3388%207.24806%2012.1435%207.44332L11.4353%208.15151C11.2401%208.34677%2011.2401%208.66335%2011.4353%208.85861C11.6306%209.05388%2011.9472%209.05388%2012.1424%208.85861L12.8506%208.15043C13.0459%207.95517%2013.0459%207.63858%2012.8506%207.44332ZM7.8521%207.44332C7.65684%207.24806%207.34026%207.24806%207.145%207.44332C6.94973%207.63858%206.94973%207.95517%207.145%208.15043L7.85318%208.85861C8.04844%209.05388%208.36503%209.05388%208.56029%208.85861C8.75555%208.66335%208.75555%208.34677%208.56029%208.15151L7.8521%207.44332Z%22%20fill%3D%22%23fff9c4%22/%3E%0A%3C/svg%3E%0A");
        --note-filled: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M14%203C15.5977%203%2016.9037%204.24892%2016.9949%205.82373L17%206V10H13L12.8237%2010.0051C11.3072%2010.093%2010.093%2011.3072%2010.0051%2012.8237L10%2013V17H6C4.40232%2017%203.09634%2015.7511%203.00509%2014.1763L3%2014V6C3%204.40232%204.24892%203.09634%205.82373%203.00509L6%203H14ZM16.9007%2011.001C16.8232%2011.2376%2016.7018%2011.459%2016.5416%2011.6528L16.4142%2011.7929L11.7929%2016.4142C11.5687%2016.6384%2011.2968%2016.8039%2011.001%2016.9007L11%2013L11.0055%2012.8507C11.078%2011.8676%2011.8612%2011.0821%2012.8433%2011.006L13%2011L16.9007%2011.001Z%22%20fill%3D%22%238be3d6%22/%3E%0A%3C/svg%3E%0A");
        --checkbox-filled: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2224%22%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M18%203C19.6569%203%2021%204.34315%2021%206V18C21%2019.6569%2019.6569%2021%2018%2021H6C4.34315%2021%203%2019.6569%203%2018V6C3%204.34315%204.34315%203%206%203H18ZM16.4697%207.96967L10%2014.4393L7.53033%2011.9697C7.23744%2011.6768%206.76256%2011.6768%206.46967%2011.9697C6.17678%2012.2626%206.17678%2012.7374%206.46967%2013.0303L9.46967%2016.0303C9.76256%2016.3232%2010.2374%2016.3232%2010.5303%2016.0303L17.5303%209.03033C17.8232%208.73744%2017.8232%208.26256%2017.5303%207.96967C17.2374%207.67678%2016.7626%207.67678%2016.4697%207.96967Z%22%20fill%3D%22%23d0d3d4%22/%3E%0A%3C/svg%3E%0A");
        --dots: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M10%206C9.30964%206%208.75%205.44036%208.75%204.75C8.75%204.05964%209.30964%203.5%2010%203.5C10.6904%203.5%2011.25%204.05964%2011.25%204.75C11.25%205.44036%2010.6904%206%2010%206Z%22%20fill%3D%22%23a0a0a0%22/%3E%0A%3Cpath%20d%3D%22M10%2011.25C9.30964%2011.25%208.75%2010.6904%208.75%2010C8.75%209.30964%209.30964%208.75%2010%208.75C10.6904%208.75%2011.25%209.30964%2011.25%2010C11.25%2010.6904%2010.6904%2011.25%2010%2011.25Z%22%20fill%3D%22%23a0a0a0%22/%3E%0A%3Cpath%20d%3D%22M8.75%2015.25C8.75%2015.9404%209.30964%2016.5%2010%2016.5C10.6904%2016.5%2011.25%2015.9404%2011.25%2015.25C11.25%2014.5596%2010.6904%2014%2010%2014C9.30964%2014%208.75%2014.5596%208.75%2015.25Z%22%20fill%3D%22%23a0a0a0%22/%3E%0A%3C/svg%3E%0A");
        --cells: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M7.5%2011C8.32843%2011%209%2011.6716%209%2012.5V16.5C9%2017.3284%208.32843%2018%207.5%2018H3.5C2.67157%2018%202%2017.3284%202%2016.5V12.5C2%2011.6716%202.67157%2011%203.5%2011H7.5ZM16.5%2011C17.3284%2011%2018%2011.6716%2018%2012.5V16.5C18%2017.3284%2017.3284%2018%2016.5%2018H12.5C11.6716%2018%2011%2017.3284%2011%2016.5V12.5C11%2011.6716%2011.6716%2011%2012.5%2011H16.5ZM7.5%2012H3.5C3.22386%2012%203%2012.2239%203%2012.5V16.5C3%2016.7761%203.22386%2017%203.5%2017H7.5C7.77614%2017%208%2016.7761%208%2016.5V12.5C8%2012.2239%207.77614%2012%207.5%2012ZM16.5%2012H12.5C12.2239%2012%2012%2012.2239%2012%2012.5V16.5C12%2016.7761%2012.2239%2017%2012.5%2017H16.5C16.7761%2017%2017%2016.7761%2017%2016.5V12.5C17%2012.2239%2016.7761%2012%2016.5%2012ZM7.5%202C8.32843%202%209%202.67157%209%203.5V7.5C9%208.32843%208.32843%209%207.5%209H3.5C2.67157%209%202%208.32843%202%207.5V3.5C2%202.67157%202.67157%202%203.5%202H7.5ZM16.5%202C17.3284%202%2018%202.67157%2018%203.5V7.5C18%208.32843%2017.3284%209%2016.5%209H12.5C11.6716%209%2011%208.32843%2011%207.5V3.5C11%202.67157%2011.6716%202%2012.5%202H16.5ZM7.5%203H3.5C3.22386%203%203%203.22386%203%203.5V7.5C3%207.77614%203.22386%208%203.5%208H7.5C7.77614%208%208%207.77614%208%207.5V3.5C8%203.22386%207.77614%203%207.5%203ZM16.5%203H12.5C12.2239%203%2012%203.22386%2012%203.5V7.5C12%207.77614%2012.2239%208%2012.5%208H16.5C16.7761%208%2017%207.77614%2017%207.5V3.5C17%203.22386%2016.7761%203%2016.5%203Z%22%20fill%3D%22%23a0a0a0%22/%3E%0A%3C/svg%3E%0A");
        --add: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M9.5%2016.5C9.5%2016.7761%209.72386%2017%2010%2017C10.2761%2017%2010.5%2016.7761%2010.5%2016.5V10.5H16.5C16.7761%2010.5%2017%2010.2761%2017%2010C17%209.72386%2016.7761%209.5%2016.5%209.5H10.5V3.5C10.5%203.22386%2010.2761%203%2010%203C9.72386%203%209.5%203.22386%209.5%203.5V9.5H3.5C3.22386%209.5%203%209.72386%203%2010C3%2010.2761%203.22386%2010.5%203.5%2010.5H9.5V16.5Z%22%20fill%3D%22%23a0a0a0%22/%3E%0A%3C/svg%3E%0A");
        --chevron-right: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2212%22%20height%3D%2212%22%20viewBox%3D%220%200%2012%2012%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M4.46967%202.21967C4.17678%202.51256%204.17678%202.98744%204.46967%203.28033L7.18934%206L4.46967%208.71967C4.17678%209.01256%204.17678%209.48744%204.46967%209.78033C4.76256%2010.0732%205.23744%2010.0732%205.53033%209.78033L8.78033%206.53033C9.07322%206.23744%209.07322%205.76256%208.78033%205.46967L5.53033%202.21967C5.23744%201.92678%204.76256%201.92678%204.46967%202.21967Z%22%20fill%3D%22%23a0a0a0%22/%3E%0A%3C/svg%3E%0A");
        --chevron-down: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2212%22%20height%3D%2212%22%20viewBox%3D%220%200%2012%2012%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M2.21967%204.46967C2.51256%204.17678%202.98744%204.17678%203.28033%204.46967L6%207.18934L8.71967%204.46967C9.01256%204.17678%209.48744%204.17678%209.78033%204.46967C10.0732%204.76256%2010.0732%205.23744%209.78033%205.53033L6.53033%208.78033C6.23744%209.07322%205.76256%209.07322%205.46967%208.78033L2.21967%205.53033C1.92678%205.23744%201.92678%204.76256%202.21967%204.46967Z%22%20fill%3D%22%23a0a0a0%22/%3E%0A%3C/svg%3E%0A");
        --document: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M7.5%207C7.22386%207%207%207.22386%207%207.5C7%207.77614%207.22386%208%207.5%208H12.5C12.7761%208%2013%207.77614%2013%207.5C13%207.22386%2012.7761%207%2012.5%207H7.5Z%22%20fill%3D%22%23a0a0a0%22/%3E%0A%3Cpath%20d%3D%22M7%2010.5C7%2010.2239%207.22386%2010%207.5%2010H12.5C12.7761%2010%2013%2010.2239%2013%2010.5C13%2010.7761%2012.7761%2011%2012.5%2011H7.5C7.22386%2011%207%2010.7761%207%2010.5Z%22%20fill%3D%22%23a0a0a0%22/%3E%0A%3Cpath%20d%3D%22M7.5%2013C7.22386%2013%207%2013.2239%207%2013.5C7%2013.7761%207.22386%2014%207.5%2014H9.5C9.77614%2014%2010%2013.7761%2010%2013.5C10%2013.2239%209.77614%2013%209.5%2013H7.5Z%22%20fill%3D%22%23a0a0a0%22/%3E%0A%3Cpath%20d%3D%22M6.5%202C6.22386%202%206%202.22386%206%202.5V3H5.5C4.67157%203%204%203.67157%204%204.5V16.5C4%2017.3284%204.67157%2018%205.5%2018H11.5C11.6326%2018%2011.7598%2017.9473%2011.8536%2017.8536L15.8536%2013.8536C15.9473%2013.7598%2016%2013.6326%2016%2013.5V4.5C16%203.67157%2015.3284%203%2014.5%203H14V2.5C14%202.22386%2013.7761%202%2013.5%202C13.2239%202%2013%202.22386%2013%202.5V3H10.5V2.5C10.5%202.22386%2010.2761%202%2010%202C9.72386%202%209.5%202.22386%209.5%202.5V3H7V2.5C7%202.22386%206.77614%202%206.5%202ZM14.5%204C14.7761%204%2015%204.22386%2015%204.5V13H12.5C11.6716%2013%2011%2013.6716%2011%2014.5V17H5.5C5.22386%2017%205%2016.7761%205%2016.5V4.5C5%204.22386%205.22386%204%205.5%204H14.5ZM14.2929%2014L12%2016.2929V14.5C12%2014.2239%2012.2239%2014%2012.5%2014H14.2929Z%22%20fill%3D%22%23a0a0a0%22/%3E%0A%3C/svg%3E%0A");
        --folder: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M7.16667%203C7.43713%203%207.70151%203.0731%207.93238%203.21016L8.06667%203.3L9.667%204.5H15.5C16.7703%204.5%2017.8192%205.44737%2017.9789%206.67409L17.9947%206.83562L18%207V14.5C18%2015.8255%2016.9685%2016.91%2015.6644%2016.9947L15.5%2017H4.5C3.17452%2017%202.08996%2015.9685%202.00532%2014.6644L2%2014.5V5.5C2%204.17452%203.03154%203.08996%204.33562%203.00532L4.5%203H7.16667ZM8.15763%207.03449C7.90991%207.2946%207.57838%207.45592%207.22435%207.49219L7.07143%207.5L3%207.499V14.5C3%2015.2797%203.59489%2015.9204%204.35554%2015.9931L4.5%2016H15.5C16.2797%2016%2016.9204%2015.4051%2016.9931%2014.6445L17%2014.5V7C17%206.2203%2016.4051%205.57955%2015.6445%205.50687L15.5%205.5H9.617L8.15763%207.03449ZM7.16667%204H4.5C3.7203%204%203.07955%204.59489%203.00687%205.35554L3%205.5V6.499L7.07143%206.5C7.1809%206.5%207.28655%206.46411%207.37274%206.39902L7.4335%206.34483L8.694%205.021L7.46667%204.1C7.40176%204.05132%207.32632%204.01941%207.24701%204.0065L7.16667%204Z%22%20fill%3D%22%23a0a0a0%22/%3E%0A%3C/svg%3E%0A");
        --navigation: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M3%206.5C3.55228%206.5%204%206.05228%204%205.5C4%204.94772%203.55228%204.5%203%204.5C2.44772%204.5%202%204.94772%202%205.5C2%206.05228%202.44772%206.5%203%206.5ZM6%205.5C6%205.22386%206.22386%205%206.5%205H17.5C17.7761%205%2018%205.22386%2018%205.5C18%205.77614%2017.7761%206%2017.5%206H6.5C6.22386%206%206%205.77614%206%205.5ZM6%209.5C6%209.22386%206.22386%209%206.5%209H17.5C17.7761%209%2018%209.22386%2018%209.5C18%209.77614%2017.7761%2010%2017.5%2010H6.5C6.22386%2010%206%209.77614%206%209.5ZM6.5%2013C6.22386%2013%206%2013.2239%206%2013.5C6%2013.7761%206.22386%2014%206.5%2014H17.5C17.7761%2014%2018%2013.7761%2018%2013.5C18%2013.2239%2017.7761%2013%2017.5%2013H6.5ZM4%2013.5C4%2014.0523%203.55228%2014.5%203%2014.5C2.44772%2014.5%202%2014.0523%202%2013.5C2%2012.9477%202.44772%2012.5%203%2012.5C3.55228%2012.5%204%2012.9477%204%2013.5ZM3%2010.5C3.55228%2010.5%204%2010.0523%204%209.5C4%208.94772%203.55228%208.5%203%208.5C2.44772%208.5%202%208.94772%202%209.5C2%2010.0523%202.44772%2010.5%203%2010.5Z%22%20fill%3D%22%23a0a0a0%22/%3E%0A%3C/svg%3E%0A");
        --tree: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M9%205C9%203.34315%207.65685%202%206%202C4.34315%202%203%203.34315%203%205C3%206.4865%204.08114%207.72048%205.5%207.95852V12.0415C4.08114%2012.2795%203%2013.5135%203%2015C3%2016.6569%204.34315%2018%206%2018C7.65685%2018%209%2016.6569%209%2015C9%2013.5135%207.91886%2012.2795%206.5%2012.0415V11H12C13.3807%2011%2014.5%209.88071%2014.5%208.5V7.95852C15.9189%207.72048%2017%206.4865%2017%205C17%203.34315%2015.6569%202%2014%202C12.3431%202%2011%203.34315%2011%205C11%206.4865%2012.0811%207.72048%2013.5%207.95852V8.5C13.5%209.32843%2012.8284%2010%2012%2010H6.5V7.95852C7.91886%207.72048%209%206.4865%209%205ZM6%207C4.89543%207%204%206.10457%204%205C4%203.89543%204.89543%203%206%203C7.10457%203%208%203.89543%208%205C8%206.10457%207.10457%207%206%207ZM6%2017C4.89543%2017%204%2016.1046%204%2015C4%2013.8954%204.89543%2013%206%2013C7.10457%2013%208%2013.8954%208%2015C8%2016.1046%207.10457%2017%206%2017ZM16%205C16%206.10457%2015.1046%207%2014%207C12.8954%207%2012%206.10457%2012%205C12%203.89543%2012.8954%203%2014%203C15.1046%203%2016%203.89543%2016%205Z%22%20fill%3D%22%23a0a0a0%22/%3E%0A%3C/svg%3E%0A");
        --search: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M8.5%203C11.5376%203%2014%205.46243%2014%208.5C14%209.83879%2013.5217%2011.0659%2012.7266%2012.0196L16.8536%2016.1464C17.0488%2016.3417%2017.0488%2016.6583%2016.8536%2016.8536C16.68%2017.0271%2016.4106%2017.0464%2016.2157%2016.9114L16.1464%2016.8536L12.0196%2012.7266C11.0659%2013.5217%209.83879%2014%208.5%2014C5.46243%2014%203%2011.5376%203%208.5C3%205.46243%205.46243%203%208.5%203ZM8.5%204C6.01472%204%204%206.01472%204%208.5C4%2010.9853%206.01472%2013%208.5%2013C10.9853%2013%2013%2010.9853%2013%208.5C13%206.01472%2010.9853%204%208.5%204Z%22%20fill%3D%22%23a0a0a0%22/%3E%0A%3C/svg%3E%0A");
        --checkbox-checked: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2224%22%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M18.25%203C19.7688%203%2021%204.23122%2021%205.75V18.25C21%2019.7688%2019.7688%2021%2018.25%2021H5.75C4.23122%2021%203%2019.7688%203%2018.25V5.75C3%204.23122%204.23122%203%205.75%203H18.25ZM18.25%204.5H5.75C5.05964%204.5%204.5%205.05964%204.5%205.75V18.25C4.5%2018.9404%205.05964%2019.5%205.75%2019.5H18.25C18.9404%2019.5%2019.5%2018.9404%2019.5%2018.25V5.75C19.5%205.05964%2018.9404%204.5%2018.25%204.5ZM10%2014.4393L16.4697%207.96967C16.7626%207.67678%2017.2374%207.67678%2017.5303%207.96967C17.7966%208.23594%2017.8208%208.6526%2017.6029%208.94621L17.5303%209.03033L10.5303%2016.0303C10.2641%2016.2966%209.8474%2016.3208%209.55379%2016.1029L9.46967%2016.0303L6.46967%2013.0303C6.17678%2012.7374%206.17678%2012.2626%206.46967%2011.9697C6.73594%2011.7034%207.1526%2011.6792%207.44621%2011.8971L7.53033%2011.9697L10%2014.4393L16.4697%207.96967L10%2014.4393Z%22%20fill%3D%22%23f0f0f0%22/%3E%0A%3C/svg%3E%0A");
        --checkbox-unchecked: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2224%22%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M5.75%203H18.25C19.7688%203%2021%204.23122%2021%205.75V18.25C21%2019.7688%2019.7688%2021%2018.25%2021H5.75C4.23122%2021%203%2019.7688%203%2018.25V5.75C3%204.23122%204.23122%203%205.75%203ZM5.75%204.5C5.05964%204.5%204.5%205.05964%204.5%205.75V18.25C4.5%2018.9404%205.05964%2019.5%205.75%2019.5H18.25C18.9404%2019.5%2019.5%2018.9404%2019.5%2018.25V5.75C19.5%205.05964%2018.9404%204.5%2018.25%204.5H5.75Z%22%20fill%3D%22%23f0f0f0%22/%3E%0A%3C/svg%3E%0A");
        --case: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M13.4911%203.50005C13.7013%203.50299%2013.8873%203.63714%2013.9563%203.83574L17.6085%2014.3357C17.6992%2014.5966%2017.5613%2014.8815%2017.3005%2014.9722C17.0397%2015.063%2016.7547%2014.9251%2016.664%2014.6643L15.7373%2012L10.9833%2012L9.96737%2014.6774C9.8694%2014.9356%209.58069%2015.0654%209.32251%2014.9675C9.06433%2014.8695%208.93445%2014.5808%209.03241%2014.3226L10.2727%2011.0539V11H10.2932L13.0166%203.82262C13.0912%203.62603%2013.2808%203.49711%2013.4911%203.50005ZM13.4636%205.46323L11.3627%2011L15.3895%2011L13.4636%205.46323Z%22%20fill%3D%22%23a3a7a8%22/%3E%0A%3Cpath%20d%3D%22M5.6667%208.70091L5.85817%208.70749C7.16522%208.77248%207.94311%209.52482%207.997%2010.737L8%2010.8735V14.5402C8%2014.7933%207.8119%2015.0025%207.56785%2015.0356L7.5%2015.0402C7.24687%2015.0402%207.03767%2014.8521%207.00456%2014.6081L7%2014.5402L6.9991%2014.4706C6.34072%2014.8475%205.7317%2015.0402%205.16667%2015.0402C3.94105%2015.0402%203%2014.1772%203%2012.8735C3%2011.724%203.79229%2010.8699%205.10646%2010.7105C5.728%2010.6351%206.35968%2010.6823%206.99902%2010.8503C6.99247%2010.1122%206.62837%209.74702%205.8085%209.70625C5.16701%209.67435%204.7162%209.76443%204.45216%209.94958C4.22607%2010.1081%203.91426%2010.0534%203.75572%209.82728C3.59717%209.60118%203.65193%209.28937%203.87802%209.13083C4.31656%208.8233%204.91381%208.68705%205.6667%208.70091ZM6.99933%2011.916L6.79742%2011.8558C6.25917%2011.7078%205.73655%2011.6657%205.22687%2011.7275C4.40527%2011.8271%204%2012.264%204%2012.8978C4%2013.6289%204.47493%2014.0644%205.16667%2014.0644C5.62021%2014.0644%206.17899%2013.8549%206.83419%2013.422L6.99933%2013.3094V11.916Z%22%20fill%3D%22%23a3a7a8%22/%3E%0A%3C/svg%3E%0A");
        --arrowleft: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M9.16289%2016.8692C9.36683%2017.0555%209.68308%2017.0411%209.86926%2016.8371C10.0554%2016.6331%2010.041%2016.3168%209.83711%2016.1306L3.66925%2010.4988L17.5%2010.4988C17.7761%2010.4988%2018%2010.2749%2018%209.99868C18%209.72249%2017.7761%209.49859%2017.5%209.49859L3.67214%209.49859L9.83711%203.86943C10.041%203.68322%2010.0554%203.3669%209.86926%203.16293C9.68308%202.95895%209.36683%202.94455%209.16289%203.13076L2.24654%209.446C2.10659%209.57378%202.02676%209.74135%202.00705%209.91453C2.00241%209.94189%202%209.97%202%209.99868C2%2010.0256%202.00212%2010.0519%202.0062%2010.0777C2.02437%2010.2536%202.10449%2010.4243%202.24654%2010.554L9.16289%2016.8692Z%22%20fill%3D%22%23a3a7a8%22/%3E%0A%3C/svg%3E%0A");
        --match: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M9.5%2012.75C9.5%2013.1642%209.16421%2013.5%208.75%2013.5C8.33579%2013.5%208%2013.1642%208%2012.75C8%2012.3358%208.33579%2012%208.75%2012C9.16421%2012%209.5%2012.3358%209.5%2012.75Z%22%20fill%3D%22%23a3a7a8%22/%3E%0A%3Cpath%20d%3D%22M11.75%2012.75C11.75%2013.1642%2011.4142%2013.5%2011%2013.5C10.5858%2013.5%2010.25%2013.1642%2010.25%2012.75C10.25%2012.3358%2010.5858%2012%2011%2012C11.4142%2012%2011.75%2012.3358%2011.75%2012.75Z%22%20fill%3D%22%23a3a7a8%22/%3E%0A%3Cpath%20d%3D%22M14%2012.75C14%2013.1642%2013.6642%2013.5%2013.25%2013.5C12.8358%2013.5%2012.5%2013.1642%2012.5%2012.75C12.5%2012.3358%2012.8358%2012%2013.25%2012C13.6642%2012%2014%2012.3358%2014%2012.75Z%22%20fill%3D%22%23a3a7a8%22/%3E%0A%3Cpath%20d%3D%22M16.25%2012.75C16.25%2013.1642%2015.9142%2013.5%2015.5%2013.5C15.0858%2013.5%2014.75%2013.1642%2014.75%2012.75C14.75%2012.3358%2015.0858%2012%2015.5%2012C15.9142%2012%2016.25%2012.3358%2016.25%2012.75Z%22%20fill%3D%22%23a3a7a8%22/%3E%0A%3Cpath%20d%3D%22M8.75%208C9.16421%208%209.5%207.66421%209.5%207.25C9.5%206.83579%209.16421%206.5%208.75%206.5C8.33579%206.5%208%206.83579%208%207.25C8%207.66421%208.33579%208%208.75%208Z%22%20fill%3D%22%23a3a7a8%22/%3E%0A%3Cpath%20d%3D%22M11%208C11.4142%208%2011.75%207.66421%2011.75%207.25C11.75%206.83579%2011.4142%206.5%2011%206.5C10.5858%206.5%2010.25%206.83579%2010.25%207.25C10.25%207.66421%2010.5858%208%2011%208Z%22%20fill%3D%22%23a3a7a8%22/%3E%0A%3Cpath%20d%3D%22M13.25%208C13.6642%208%2014%207.66421%2014%207.25C14%206.83579%2013.6642%206.5%2013.25%206.5C12.8358%206.5%2012.5%206.83579%2012.5%207.25C12.5%207.66421%2012.8358%208%2013.25%208Z%22%20fill%3D%22%23a3a7a8%22/%3E%0A%3Cpath%20d%3D%22M15.5%208C15.9142%208%2016.25%207.66421%2016.25%207.25C16.25%206.83579%2015.9142%206.5%2015.5%206.5C15.0858%206.5%2014.75%206.83579%2014.75%207.25C14.75%207.66421%2015.0858%208%2015.5%208Z%22%20fill%3D%22%23a3a7a8%22/%3E%0A%3Cpath%20d%3D%22M2%207C2%205.34315%203.34315%204%205%204H15C16.6569%204%2018%205.34315%2018%207V13C18%2014.6569%2016.6569%2016%2015%2016H5C3.34315%2016%202%2014.6569%202%2013V7ZM5%205C3.89543%205%203%205.89543%203%207V9.5H6V5H5ZM6%2010.5H3V13C3%2014.1046%203.89543%2015%205%2015H6V10.5ZM7%2010.5V15H15C16.1046%2015%2017%2014.1046%2017%2013V10.5H7ZM17%209.5V7C17%205.89543%2016.1046%205%2015%205H7V9.5H17Z%22%20fill%3D%22%23a3a7a8%22/%3E%0A%3C/svg%3E%0A");
        --chevron-up: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M4.14708%2012.3544C3.95147%2012.1594%203.9509%2011.8429%204.14582%2011.6472L9.6108%206.16276C9.82574%205.94705%2010.1751%205.94705%2010.39%206.16276L15.855%2011.6472C16.0499%2011.8429%2016.0493%2012.1594%2015.8537%2012.3544C15.6581%2012.5493%2015.3415%2012.5487%2015.1466%2012.3531L10.0004%207.18851L4.85418%2012.3531C4.65927%2012.5487%204.34269%2012.5493%204.14708%2012.3544Z%22%20fill%3D%22%23a3a7a8%22/%3E%0A%3C/svg%3E%0A");
        --chevron-next: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M15.8527%207.64582C16.0484%207.84073%2016.0489%208.15731%2015.854%208.35292L10.389%2013.8374C10.1741%2014.0531%209.82477%2014.0531%209.60982%2013.8374L4.14484%208.35292C3.94993%208.15731%203.95049%207.84073%204.1461%207.64582C4.34171%207.4509%204.65829%207.45147%204.85321%207.64708L9.99942%2012.8117L15.1456%207.64708C15.3406%207.45147%2015.6571%207.4509%2015.8527%207.64582Z%22%20fill%3D%22%23a3a7a8%22/%3E%0A%3C/svg%3E%0A");
        --dismiss: url("data:image/svg+xml;utf8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%0A%3Cpath%20d%3D%22M4.08859%204.21569L4.14645%204.14645C4.32001%203.97288%204.58944%203.9536%204.78431%204.08859L4.85355%204.14645L10%209.293L15.1464%204.14645C15.32%203.97288%2015.5894%203.9536%2015.7843%204.08859L15.8536%204.14645C16.0271%204.32001%2016.0464%204.58944%2015.9114%204.78431L15.8536%204.85355L10.707%2010L15.8536%2015.1464C16.0271%2015.32%2016.0464%2015.5894%2015.9114%2015.7843L15.8536%2015.8536C15.68%2016.0271%2015.4106%2016.0464%2015.2157%2015.9114L15.1464%2015.8536L10%2010.707L4.85355%2015.8536C4.67999%2016.0271%204.41056%2016.0464%204.21569%2015.9114L4.14645%2015.8536C3.97288%2015.68%203.9536%2015.4106%204.08859%2015.2157L4.14645%2015.1464L9.293%2010L4.14645%204.85355C3.97288%204.67999%203.9536%204.41056%204.08859%204.21569L4.14645%204.14645L4.08859%204.21569Z%22%20fill%3D%22%23a3a7a8%22/%3E%0A%3C/svg%3E%0A");
        --color-cm-keyword: #a8cdf4;
        --color-cm-attr: #dea8e7;
        --color-cm-comment: #92989e;
        --color-cm-string: #8ce7b9;
        --color-cm-operator: #f1a5c1;
        --color-cm-number: #f1a5c1;
        --color-cm-meta: #bfa3e4;
        --color-cm-builtin: #e7bc9f;
        --color-cm-link: #9edae9;
        --color-cm-v3: #bafdf7;
        --mark-bg: #ffde6720;
        --mark-text: #ffe790;
        --text-link: #7492ff;
        --color-cm-v: #f2c08b;
        --border: #393b3b;
        --question-color: #f8bbd0;
        --alert-color: #e69d94;
        --note-color: #8be3d6;
        --lightbulb-color: #fff9c4;
        --bookmark-color: #ae92e3;
        --star-color: var(--color-scale-blue-2);
        --table-border: 1px solid var(--color-scale-gray-7) !important;
    }
}

/* CJK override */

:root {
    --mono: var(--mono-font), var(--cjk-font);
    --general-font: quote1, quote2, quote3, var(--text-font), var(--cjk-font), var(--fallback-font);
    --display-font: quote1, quote2, quote3, var(--title-font), var(--cjk-font), var(--fallback-font);
}

html {
    font-size: 16px;
}

body, .file-list-item-summary {
    font-family: var(--general-font);
    font-feature-settings: var(--general-font-feature-settings);
    color: var(--text-color);
    line-height: 1.6;
}

#write {
    max-width: 860px;
    margin: 0 auto;
    padding: 30px;
    padding-bottom: 100px;
}

@media only screen and (min-width: 1400px) {
    #write {
        max-width: 1024px;
    }
}

@media only screen and (min-width: 1800px) {
    #write {
        max-width: 1200px;
    }
}

#write>ul:first-child, #write>ol:first-child {
    margin-top: 30px;
}

h1, h2, h3, h4, h5, h6 {
    position: relative;
    margin-top: 1rem;
    margin-bottom: 1rem;
    font-weight: bold;
    line-height: 1.4;
    cursor: text;
    font-family: var(--display-font)!important;
}

h1, h2, h3, h4 {
    color: var(--title-color);
    letter-spacing: -0.04rem;
}

h6 {
    margin-top: .6rem;
    margin-bottom: .2rem;
}

h1:hover a.anchor, h2:hover a.anchor, h3:hover a.anchor, h4:hover a.anchor, h5:hover a.anchor, h6:hover a.anchor {
    text-decoration: none;
}

h1 tt, h1 code, h2 tt, h2 code, h3 tt, h3 code, h4 tt, h4 code, h5 tt, h5 code, h6 tt, h6 code {
    font-size: inherit;
}

h2 em {
    background-color: var(--bg-color);
    color: var(--title-color);
    border-radius: 50%;
    padding: 3px 10px;
}

h2 b {
  background-color: var(--bg-color);
  color: var(--title-color);
  border-radius: 50%;
  padding: 7px 9px;
  font-size: 0.7em;
}

h1 {
    font-size: 2.25em;
    line-height: 1.2;
}

h2 {
    font-size: 1.75em;
    line-height: 1.225;

    border-radius: 40px;
    padding: 10px;
    background-color: var(--title-color);
    color: var(--bg-color);
}

h3 {
    font-size: 1.5em;
    line-height: 1.43;
}

h4 {
    font-size: 1.25em;
}

h5 {
    font-size: 1em;
}

h6 {
    font-size: 1em;
    color: #777;
}

p, blockquote, ul, ol, dl, table {
    margin: 0.8em 0;
}

li>ol, li>ul {
    margin: 0 0;
}

h1 code, h2 code, h3 code, h4 code, h5 code, h6 code {
    border: inherit;
    background-color: inherit;
}

hr {
    height: 2px;
    padding: 0;
    margin: 16px 0;
    background-color: #e7e7e7;
    border: 0 none;
    overflow: hidden;
    box-sizing: content-box;
}

li p.first {
    display: inline-block;
}

ul, ol {
    padding-left: 30px;
}

ul:first-child, ol:first-child {
    margin-top: 0;
}

ul:last-child, ol:last-child {
    margin-bottom: 0;
}

blockquote {
    color: var(--text-color);
    border: 1px solid var(--border);
    background-color: var(--elevated-background);
    border-radius: 4px;
    padding: 12px 16px;
    overflow: hidden;
    box-sizing: border-box;
}

blockquote blockquote {
    padding-right: 0;
}

table {
    padding: 0;
    word-break: initial;
}

table tr {
    border: 1px solid #dfe2e5;
    margin: 0;
    padding: 0;
}

table tr:nth-child(2n), thead {
    background-color: #f8f8f8;
}

table th {
    font-weight: bold;
    border: 1px solid #dfe2e5;
    border-bottom: 0;
    margin: 0;
    padding: 6px 13px;
}

table td {
    border: 1px solid #dfe2e5;
    margin: 0;
    padding: 6px 13px;
}

table th:first-child, table td:first-child {
    margin-top: 0;
}

table th:last-child, table td:last-child {
    margin-bottom: 0;
}

.CodeMirror-lines {
    padding-left: 4px;
}

.code-tooltip {
    border: 1px solid var(--border);
    background-color: var(--elevated-background);
    border-radius: 4px;
    font-family: var(--general-font);
    box-shadow: none!important;
}

.md-fences, code, tt {
    color: var(--text-color);
    border: 1px solid var(--border);
    background-color: var(--elevated-background);
    border-radius: 4px;
    padding: 0;
    padding: 2px 4px 0px 4px;
    font-size: 0.9em;
    font-family: var(--mono);
    font-variant-ligatures: common-ligatures!important;
    font-feature-settings: "liga" 1!important;
}

code {
    background-color: var(--elevated-background);
    padding: 0 2px 0 2px;
}

.md-fences {
    margin-bottom: 15px;
    margin-top: 15px;
    padding-top: 8px;
    padding-bottom: 6px;
}

.md-task-list-item>input {
    margin-left: -1.3em;
}

@media print {
    html {
        font-size: 13px;
    }
    table, pre {
        page-break-inside: avoid;
    }
    pre {
        word-wrap: break-word;
    }
    input[type=checkbox] {
        margin-top: -1px!important;
    }
}

#write pre.md-meta-block {
    padding: 1rem;
    font-size: 85%;
    line-height: 1.45;
    background-color: var(--elevated-background);
    border: 0;
    border-radius: 4px;
    color: #777777;
    margin-top: 0 !important;
}

.mathjax-block>.code-tooltip {
    bottom: .375rem;
}

.md-mathjax-midline {
    background: var(--elevated-background);
}

#write>h3.md-focus:before {
    left: -1.5625rem;
    top: .375rem;
}

#write>h4.md-focus:before {
    left: -1.5625rem;
    top: .285714286rem;
}

#write>h5.md-focus:before {
    left: -1.5625rem;
    top: .285714286rem;
}

#write>h6.md-focus:before {
    left: -1.5625rem;
    top: .285714286rem;
}

.md-image>.md-meta {
    border-radius: 4px;
    padding: 2px 0px 0px 4px;
    font-size: 0.9em;
    color: inherit;
}

.md-tag {
    color: var(--text-color);
    opacity: 1;
}

.md-toc {
    margin-top: 20px;
    padding-bottom: 20px;
}

.sidebar-tabs {
    border-bottom: none;
}

#typora-quick-open {
    border: 1px solid var(--border);
    background-color: var(--elevated-background);
}

#typora-quick-open-item {
    background-color: var(--elevated-background);
    border-color: #FEFEFE #e5e5e5 #e5e5e5 #eee;
    border-style: solid;
    border-width: 1px;
}

/** focus mode */

.on-focus-mode blockquote {
    border-left-color: rgba(85, 85, 85, 0.12);
}

header, .context-menu, .megamenu-content, footer {
    font-family: var(--general-font);
}

.file-node-content:hover .file-node-icon, .file-node-content:hover .file-node-open-state {
    visibility: visible;
}

.mac-seamless-mode #typora-sidebar {
    background-color: var(--elevated-background);
    background-color: var(--side-bar-bg-color);
}

.md-lang {
    color: #b4654d;
}

#md-notification .btn {
    border: 0;
}

.dropdown-menu .divider {
    border-color: #e5e5e5;
    opacity: 0.4;
}

.ty-preferences .window-content {
    background-color: var(--elevated-background);
}

.ty-preferences .nav-group-item.active {
    color: var(--text-color);
    background: #999;
}

.menu-item-container a.menu-style-btn {
    background-color: var(--elevated-background);
    background-image: linear-gradient( 180deg, hsla(0, 0%, 100%, 0.8), hsla(0, 0%, 100%, 0));
}

.cm-keyword {
    color: var(--color-cm-keyword)!important;
    font-weight: 700!important;
}

.cm-variable {
    color: var(--color-cm-v)!important;
}

.cm-tag {
    color: var(--color-cm-keyword)!important;
    font-weight: 700!important;
}

.cm-variable-3, .cm-variable-2 {
    color: var(--color-cm-v3)!important;
    font-weight: 700!important;
}

.cm-def {
    color: var(--color-cm-attr)!important;
}

.cm-attribute {
    color: var(--color-cm-attr)!important
}

.cm-comment, .md-comment, .md-meta {
    color: var(--color-cm-comment)!important;
}

.cm-string {
    color: var(--color-cm-string)!important;
    font-variant-ligatures: common-ligatures!important;
}

.cm-link {
    color: var(--color-cm-link)!important;
}

.cm-type {
    color: var(--color-cm-v3);
}

.cm-property {
    color: var(--color-cm-v3)!important;
}

.cm-tag:not(.cm-bracket) {
    font-weight: 700;
}

.cm-operator {
    color: var(--color-cm-operator)!important;
}

.cm-number {
    color: var(--color-cm-number)!important;
}

.cm-meta {
    color: var(--color-cm-meta)!important;
    font-weight: 700!important;
}

.cm-builtin {
    color: var(--color-cm-builtin)!important;
}

li.task-list-item {
    list-style-type: none
}

li.task-list-item>input[type=checkbox], #write input[type=checkbox] {
    list-style: none;
    background: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    width: 24px;
    height: 24px;
    background-image: var(--checkbox-unchecked);
    padding: 0;
    margin-top: 1px;
    margin-left: -32px;
}

li.task-list-item>input[type=checkbox][checked=checked], li.task-list-item>input[type=checkbox][checked], #write input[type=checkbox][checked=checked], #write input[type=checkbox][checked] {
    background-image: var(--checkbox-filled);
}

a {
    color: var(--text-link);
}

span.ty-icon.ty-delete-button::before {
    background-image: var(--dismiss);
    vertical-align: middle;
    content: " ";
    width: 20px;
    height: 20px;
    display: inline-block;
}

i.fa.fa-folder-o::before {
    background-image: var(--folder);
    vertical-align: middle;
    content: " ";
    width: 20px;
    height: 20px;
    display: inline-block;
}

i.file-node-icon.fa.fa-folder::before {
    background-image: var(--folder);
    vertical-align: middle;
    content: " ";
    width: 20px;
    height: 20px;
    display: inline-block;
}

i.file-node-icon.fa.fa-file-text-o::before {
    background-image: var(--document);
    vertical-align: middle;
    content: " ";
    width: 20px;
    height: 20px;
    display: inline-block;
}

i.fa.fa-caret-down::before {
    background-image: var(--chevron-down);
    vertical-align: middle;
    content: " ";
    width: 12px;
    height: 12px;
    display: inline-block;
}

i.fa.fa-caret-right::before {
    background-image: var(--chevron-right);
    vertical-align: middle;
    content: " ";
    width: 12px;
    height: 12px;
    display: inline-block;
}

.file-node-open-state {
    width: 16px;
    text-align: center;
}

span.ty-icon.ty-file-tree::before {
    background-image: var(--tree);
    vertical-align: middle;
    content: " ";
    width: 20px;
    height: 20px;
    display: inline-block;
}

span.ty-icon.ty-left-arrow::before {
    background-image: var(--arrowleft);
    vertical-align: middle;
    content: " ";
    width: 20px;
    height: 20px;
    display: inline-block;
}

span.ty-icon.ty-list::before {
    background-image: var(--navigation);
    vertical-align: middle;
    content: " ";
    width: 20px;
    height: 20px;
    display: inline-block;
}

span.ion-ios7-search-strong::before {
    background-image: var(--search);
    vertical-align: middle;
    content: " ";
    width: 20px;
    height: 20px;
    display: inline-block;
}

.sidebar-tab-btn, span.ion-ios7-search-strong, .sidebar-footer-item .footer-btn {
    display: flex!important;
    align-items: center!important;
    justify-content: center!important;
    vertical-align: middle!important;
}

span.ty-icon.ty-add::before {
    background-image: var(--add);
    vertical-align: middle;
    content: " ";
    width: 20px;
    height: 20px;
    display: inline-block;
    margin-bottom: 2px;
}

span.ty-icon.ty-dots-v::before {
    background-image: var(--dots);
    vertical-align: middle;
    content: " ";
    width: 20px;
    height: 20px;
    display: inline-block;
    margin-bottom: 2px;
}

span.ty-icon.ty-three-cells::before {
    background-image: var(--cells);
    vertical-align: middle;
    content: " ";
    width: 20px;
    height: 20px;
    display: inline-block;
    margin-bottom: 2px;
}

mark {
    border-radius: 4px;
    color: var(--mark-text);
    font-weight: inherit;
    background-color: var(--mark-bg);
    margin-left: 2px;
    margin-right: 2px;
    padding: 0px 4px 2px 4px;
    border-bottom: var(--mark-border);
}

del {
    border-radius: 4px;
    color: var(--text-color);
    font-weight: inherit;
    background-color: #88888850;
    margin-left: 2px;
    margin-right: 2px;
    padding: 0px 4px 2px 4px;
    text-decoration-color: var(--text-color);
    opacity: .3;
}

.sidebar-footer-item {
    height: 100%;
    vertical-align: middle;
    justify-content: center;
}

.file-node-background {
    height: 32px;
}

.file-library-node.file-tree-node.active>.file-node-content {
    color: white;
}

.file-library-node.file-tree-node.active>.file-node-content>i {
    filter: var(--icon-filer);
}

.file-library-node.file-tree-node.active>.file-node-background {
    background-color: var(--accent-color);
    border: none;
}

.cm-header, .cm-header-1 {
    color: var(--title-font)!important;
}

.cm-atom {
    color: var(--color-cm-builtin)!important;
}

/** Css below might be platform specified **/

#filesearch-case-option-btn>svg, #searchpanel-case-option-btn>svg {
    display: none;
}

#filesearch-case-option-btn::before, #searchpanel-case-option-btn::before {
    background-image: var(--case);
    vertical-align: middle;
    content: " ";
    width: 20px;
    height: 20px;
    display: inline-block;
}

#filesearch-word-option-btn>svg, #searchpanel-word-option-btn>svg {
    display: none;
}

#filesearch-word-option-btn::before, #searchpanel-word-option-btn::before {
    background-image: var(--match);
    vertical-align: middle;
    content: " ";
    width: 20px;
    height: 20px;
    display: inline-block;
}

.mac-seamless-mode #md-searchpanel, #md-searchpanel {
    box-shadow: 0 6.4px 14.4px 0 rgb(0 0 0 / 13%), 0 1.2px 3.6px 0 rgb(0 0 0 / 11%);
    border-bottom: 1px solid var(--border);
    max-height: 72px;
}

.mac-seamless-mode #md-searchpanel input, #md-searchpanel input {
    height: auto;
}

.mac-seamless-mode #md-searchpanel.searchpanel-replace-mode, #md-searchpanel.searchpanel-replace-mode {
    max-height: 108px;
}

.ion-chevron-up::before {
    background-image: var(--chevron-up);
    vertical-align: middle;
    content: " ";
    width: 20px;
    height: 20px;
    display: inline-block;
}

.ion-chevron-down::before {
    background-image: var(--chevron-next);
    vertical-align: middle;
    content: " ";
    width: 20px;
    height: 20px;
    display: inline-block;
}

.ion-close-round::before {
    background-image: var(--dismiss);
    vertical-align: middle;
    content: " ";
    width: 20px;
    height: 20px;
    display: inline-block;
}

table.md-table {
    border: none!important;
    box-sizing: border-box;
    /* border-radius: 4px; */
    overflow: hidden;
}

table {
    border-collapse: separate;
}

tbody>tr>td:not(:first-child) {
    box-sizing: border-box;
    border: none;
    border-right: var(--table-border);
    border-bottom: var(--table-border);
}

tbody>tr>td:first-child {
    box-sizing: border-box;
    border: none;
    border-bottom: var(--table-border);
    border-left: var(--table-border);
    border-right: var(--table-border);
}

tr>th:not(:first-child) {
    box-sizing: border-box;
    border: none;
    border-top: var(--table-border);
    border-right: var(--table-border);
    border-bottom: var(--table-border);
}

tr>th:first-child {
    box-sizing: border-box;
    border: var(--table-border);
}

tr:first-child>th:first-child {
    border-top-left-radius: 4px;
}

tr:first-child>th:last-child {
    border-top-right-radius: 4px;
}

tbody>tr:last-child>td:last-child {
    border-bottom-right-radius: 4px;
}

tbody>tr:last-child>td:first-child {
    border-bottom-left-radius: 4px;
}

table tr:nth-child(2n), table thead>tr {
    background-color: var(--elevated-background);
}

table tbody tr:nth-child(2n+1) {
    background-color: var(--bg-color);
}

thead:last-child>tr:last-child>th:first-child {
    border-bottom-left-radius: 4px;
}

thead:last-child>tr:last-child>th:last-child {
    border-bottom-right-radius: 4px;
}

table {
    font-feature-settings: "tnum";
}

blockquote>h1:first-child, blockquote>h2:first-child, blockquote>h3:first-child, blockquote>h4:first-child, blockquote>h5:first-child, blockquote>h6:first-child {
    font: var(--title-font);
    font-weight: 700;
    font-size: inherit!important;
    margin: -12px -16px -8px -16px;
    padding: 12px 16px 8px 16px;
    border-top-right-radius: 4px;
    border-top-left-radius: 4px;
    display: flex;
    align-items: center;
    letter-spacing: auto!important;
}

blockquote>h1:first-child {
    color: var(--bookmark-color);
}

blockquote>h1:first-child::before {
    background-image: var(--bookmark-filled);
    vertical-align: middle;
    content: " ";
    width: 20px;
    height: 20px;
    display: inline-block;
    margin-right: 4px;
}

blockquote>h2:first-child {
    color: var(--star-color);
}

blockquote>h2:first-child::before {
    background-image: var(--star-filled);
    vertical-align: middle;
    content: " ";
    width: 20px;
    height: 20px;
    display: inline-block;
    margin-right: 4px;
}

blockquote>h3:first-child {
    color: var(--lightbulb-color);
}

blockquote>h3:first-child::before {
    background-image: var(--light-bulb-filled);
    vertical-align: middle;
    content: " ";
    width: 20px;
    height: 20px;
    display: inline-block;
    margin-right: 4px;
}

blockquote>h4:first-child {
    color: var(--note-color);
}

blockquote>h4:first-child::before {
    background-image: var(--note-filled);
    vertical-align: middle;
    content: " ";
    width: 20px;
    height: 20px;
    display: inline-block;
    margin-right: 4px;
}

blockquote>h5:first-child {
    color: var(--alert-color);
}

blockquote>h5:first-child::before {
    background-image: var(--warn-filled);
    vertical-align: middle;
    content: " ";
    width: 20px;
    height: 20px;
    display: inline-block;
    margin-right: 4px;
}

blockquote>h6:first-child {
    color: var(--question-color);
}

blockquote>h6:first-child::before {
    background-image: var(--chat-help-filled);
    vertical-align: middle;
    content: " ";
    width: 20px;
    height: 20px;
    display: inline-block;
    margin-right: 4px;
}



mjx-container[jax="SVG"] {
  direction: ltr;
}

mjx-container[jax="SVG"] > svg {
  overflow: visible;
  min-height: 1px;
  min-width: 1px;
}

mjx-container[jax="SVG"] > svg a {
  fill: blue;
  stroke: blue;
}

mjx-assistive-mml {
  position: absolute !important;
  top: 0px;
  left: 0px;
  clip: rect(1px, 1px, 1px, 1px);
  padding: 1px 0px 0px 0px !important;
  border: 0px !important;
  display: block !important;
  width: auto !important;
  overflow: hidden !important;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

mjx-assistive-mml[display="block"] {
  width: 100% !important;
}

mjx-container[jax="SVG"][display="true"] {
  display: block;
  text-align: center;
  margin: 1em 0;
}

mjx-container[jax="SVG"][display="true"][width="full"] {
  display: flex;
}

mjx-container[jax="SVG"][justify="left"] {
  text-align: left;
}

mjx-container[jax="SVG"][justify="right"] {
  text-align: right;
}

g[data-mml-node="merror"] > g {
  fill: red;
  stroke: red;
}

g[data-mml-node="merror"] > rect[data-background] {
  fill: yellow;
  stroke: none;
}

g[data-mml-node="mtable"] > line[data-line], svg[data-table] > g > line[data-line] {
  stroke-width: 70px;
  fill: none;
}

g[data-mml-node="mtable"] > rect[data-frame], svg[data-table] > g > rect[data-frame] {
  stroke-width: 70px;
  fill: none;
}

g[data-mml-node="mtable"] > .mjx-dashed, svg[data-table] > g > .mjx-dashed {
  stroke-dasharray: 140;
}

g[data-mml-node="mtable"] > .mjx-dotted, svg[data-table] > g > .mjx-dotted {
  stroke-linecap: round;
  stroke-dasharray: 0,140;
}

g[data-mml-node="mtable"] > g > svg {
  overflow: visible;
}

[jax="SVG"] mjx-tool {
  display: inline-block;
  position: relative;
  width: 0;
  height: 0;
}

[jax="SVG"] mjx-tool > mjx-tip {
  position: absolute;
  top: 0;
  left: 0;
}

mjx-tool > mjx-tip {
  display: inline-block;
  padding: .2em;
  border: 1px solid #888;
  font-size: 70%;
  background-color: #F8F8F8;
  color: black;
  box-shadow: 2px 2px 5px #AAAAAA;
}

g[data-mml-node="maction"][data-toggle] {
  cursor: pointer;
}

mjx-status {
  display: block;
  position: fixed;
  left: 1em;
  bottom: 1em;
  min-width: 25%;
  padding: .2em .4em;
  border: 1px solid #888;
  font-size: 90%;
  background-color: #F8F8F8;
  color: black;
}

foreignObject[data-mjx-xml] {
  font-family: initial;
  line-height: normal;
  overflow: visible;
}

mjx-container[jax="SVG"] path[data-c], mjx-container[jax="SVG"] use[data-c] {
  stroke-width: 3;
}

g[data-mml-node="xypic"] path {
  stroke-width: inherit;
}

.MathJax g[data-mml-node="xypic"] path {
  stroke-width: inherit;
}
mjx-container[jax="SVG"] path[data-c], mjx-container[jax="SVG"] use[data-c] {
							stroke-width: 0;
						} @media print { @page {margin: 0 0 0 0;} body.typora-export {padding-left: 0; padding-right: 0;} #write {padding:0;}}
</style><title>Révisions BA2 – PPOO</title>
</head>
<body class='typora-export'><div class='typora-export-content'>
<div id='write'  class=''><p><strong><span>RÉVISIONS – BA2</span></strong></p><h1 id='pratique-de-la-programmation-orientée-objet'><span>Pratique de la Programmation Orientée Objet.</span></h1><h2 id='1-test-unitaire'><em><span>1.</span></em><span> Test unitaire</span></h2><p><span>On utilisera </span><strong><span>JUnit</span></strong><span> pour aider à écrire des tests unitaires qui testent des fonctions.</span></p><h4 id='conventions-de-nommage'><span>Conventions de nommage</span></h4><ul><li><code>[ClassName]Test.java</code><span> pour décrire qu&#39;il s&#39;agit d&#39;un test qui teste </span><code>ClassName</code><span>.</span></li><li><span>Méthodes : </span><code>[functionName]WorksOn[context]</code><span> où on décrit de manière assez descriptive ce que la fonction fait dans la signature</span></li></ul><h4 id='structure-générale'><span>Structure générale</span></h4><p><span>Il s&#39;agit de créer plusieures fonctions : </span></p><ul><li><span>une générale </span><code>boolean check(boolean result)</code><span> qui vérifie si la valeur retournée par un certain test est </span><code>true</code></li><li><span>une (ou plusieures selon le nombre de tests) qui vérifie pour certaines valeurs judicieusement choisies : retourne </span><code>true</code><span> si la fonction fonctionne comme attendue et </span><code>false</code><span> sinon.</span></li></ul><h4 id='junit'><code>JUnit</code></h4><p><span>Cette classe permet de simplifier la manière de créer des tests.</span></p><p><span>On utilise l&#39;annotation </span><code>@Test</code><span> pour signaler qu&#39;une méthode s&#39;agit d&#39;une méthode de test, puis pour signaler qu&#39;un résultat marche bien on utilise des méthodes d&#39;assertion, telles que</span></p><ul><li><p><code>assertEquals(expected_value, resulting_value)</code><span> qui compare les deux valeurs et lance un erreur si les deux valeurs ne sont pas les mêmes.</span></p><ul><li><span>On peut ajouter une tolérance avec un paramètre optionnel </span><code>delta</code><span> pour prendre en compte les problème arrondis</span></li></ul></li><li><p><code>assertThrows(className, predicate)</code><span> qui vérifie que l&#39;exception lancée est bien la bonne.</span></p></li><li><p><code>assertTrue()</code><span> qui vérifie que la valeur du test devrait être </span><code>true</code></p></li></ul><blockquote><p>⚠️<span> Attention à ne pas confondre les méthodes de JUnit </span><code>assert*()</code><span> contre le mot-clé </span><code>assert</code><span> de Java!</span></p></blockquote><p>&nbsp;</p><h2 id='2-types-entiers'><em><span>2.</span></em><span> Types entiers</span></h2><p><strong><span>Les entiers</span></strong><span> : &quot;Vecteurs&quot; de bits (digits binaires)</span></p><ul><li><code>byte</code><span> – 8 bits //  </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="2.119ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 936.6 833.9" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: 0px;"><defs><path id="MJX-1-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-1-TEX-N-38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-1-TEX-N-32"></use></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><use data-c="38" xlink:href="#MJX-1-TEX-N-38"></use></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msup><mn>2</mn><mn>8</mn></msup></math></mjx-assistive-mml></mjx-container><script type="math/tex">2^8</script><span> = 256 valeurs différentes</span></li><li><code>short</code><span> – 16 bits</span></li><li><code>char</code><span> – 16 bits (pour représenter des caractères)</span></li><li><code>int</code><span> – 32 bits</span></li><li><code>long</code><span> – 64 bits</span></li></ul><p>&nbsp;</p><ul><li><span>Interprétation non signée (unsigned) </span><strong><span>binaire</span></strong></li></ul><figure><table><thead><tr><th><span>Poids</span></th><th><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="2.119ex" height="1.903ex" role="img" focusable="false" viewBox="0 -841 936.6 841" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: 0px;"><defs><path id="MJX-2-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-2-TEX-N-37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-2-TEX-N-32"></use></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><use data-c="37" xlink:href="#MJX-2-TEX-N-37"></use></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msup><mn>2</mn><mn>7</mn></msup></math></mjx-assistive-mml></mjx-container><script type="math/tex">2^7</script></th><th><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="2.119ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 936.6 833.9" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: 0px;"><defs><path id="MJX-11-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-11-TEX-N-36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-11-TEX-N-32"></use></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><use data-c="36" xlink:href="#MJX-11-TEX-N-36"></use></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msup><mn>2</mn><mn>6</mn></msup></math></mjx-assistive-mml></mjx-container><script type="math/tex">2^6</script></th><th><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="2.119ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 936.6 833.9" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: 0px;"><defs><path id="MJX-12-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-12-TEX-N-35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-12-TEX-N-32"></use></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><use data-c="35" xlink:href="#MJX-12-TEX-N-35"></use></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msup><mn>2</mn><mn>5</mn></msup></math></mjx-assistive-mml></mjx-container><script type="math/tex">2^5</script></th><th><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="2.119ex" height="1.904ex" role="img" focusable="false" viewBox="0 -841.7 936.6 841.7" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: 0px;"><defs><path id="MJX-13-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-13-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-13-TEX-N-32"></use></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><use data-c="34" xlink:href="#MJX-13-TEX-N-34"></use></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msup><mn>2</mn><mn>4</mn></msup></math></mjx-assistive-mml></mjx-container><script type="math/tex">2^4</script></th><th><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="2.119ex" height="1.885ex" role="img" focusable="false" viewBox="0 -833.2 936.6 833.2" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: 0px;"><defs><path id="MJX-14-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-14-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-14-TEX-N-32"></use></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><use data-c="33" xlink:href="#MJX-14-TEX-N-33"></use></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msup><mn>2</mn><mn>3</mn></msup></math></mjx-assistive-mml></mjx-container><script type="math/tex">2^3</script></th><th><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="2.119ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 936.6 833.9" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: 0px;"><defs><path id="MJX-15-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-15-TEX-N-32"></use></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><use data-c="32" xlink:href="#MJX-15-TEX-N-32"></use></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msup><mn>2</mn><mn>2</mn></msup></math></mjx-assistive-mml></mjx-container><script type="math/tex">2^2</script></th><th><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="2.119ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 936.6 833.9" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: 0px;"><defs><path id="MJX-16-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-16-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-16-TEX-N-32"></use></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><use data-c="31" xlink:href="#MJX-16-TEX-N-31"></use></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msup><mn>2</mn><mn>1</mn></msup></math></mjx-assistive-mml></mjx-container><script type="math/tex">2^1</script></th><th><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="2.119ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 936.6 833.9" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: 0px;"><defs><path id="MJX-142-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-142-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-142-TEX-N-32"></use></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><use data-c="30" xlink:href="#MJX-142-TEX-N-30"></use></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msup><mn>2</mn><mn>0</mn></msup></math></mjx-assistive-mml></mjx-container><script type="math/tex">2^0</script></th></tr></thead><tbody><tr><td><span>Bit</span></td><td><span>1</span></td><td><span>0</span></td><td><span>0</span></td><td><span>0</span></td><td><span>1</span></td><td><span>1</span></td><td><span>0</span></td><td><span>0</span></td></tr><tr><td>&nbsp;</td><td><span>MSB</span><br><span>Le plus grand bit</span></td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td><span>LSB</span><br><span>Le plus petit bit</span></td></tr></tbody></table></figure><ul><li><span>Interprétation signée – </span><strong><span>two&#39;s complement</span></strong></li></ul><figure><table><thead><tr><th><span>Poids</span></th><th><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="5.639ex" height="2.468ex" role="img" focusable="false" viewBox="0 -841 2492.6 1091" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-10-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-10-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-10-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-10-TEX-N-37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path><path id="MJX-10-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><use data-c="2212" xlink:href="#MJX-10-TEX-N-2212"></use></g><g data-mml-node="mo" transform="translate(778,0)"><use data-c="28" xlink:href="#MJX-10-TEX-N-28"></use></g><g data-mml-node="msup" transform="translate(1167,0)"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-10-TEX-N-32"></use></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><use data-c="37" xlink:href="#MJX-10-TEX-N-37"></use></g></g><g data-mml-node="mo" transform="translate(2103.6,0)"><use data-c="29" xlink:href="#MJX-10-TEX-N-29"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>−</mo><mo stretchy="false">(</mo><msup><mn>2</mn><mn>7</mn></msup><mo stretchy="false">)</mo></math></mjx-assistive-mml></mjx-container><script type="math/tex">-(2^7)</script></th><th><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="2.119ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 936.6 833.9" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: 0px;"><defs><path id="MJX-11-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-11-TEX-N-36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-11-TEX-N-32"></use></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><use data-c="36" xlink:href="#MJX-11-TEX-N-36"></use></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msup><mn>2</mn><mn>6</mn></msup></math></mjx-assistive-mml></mjx-container><script type="math/tex">2^6</script></th><th><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="2.119ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 936.6 833.9" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: 0px;"><defs><path id="MJX-12-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-12-TEX-N-35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-12-TEX-N-32"></use></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><use data-c="35" xlink:href="#MJX-12-TEX-N-35"></use></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msup><mn>2</mn><mn>5</mn></msup></math></mjx-assistive-mml></mjx-container><script type="math/tex">2^5</script></th><th><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="2.119ex" height="1.904ex" role="img" focusable="false" viewBox="0 -841.7 936.6 841.7" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: 0px;"><defs><path id="MJX-13-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-13-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-13-TEX-N-32"></use></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><use data-c="34" xlink:href="#MJX-13-TEX-N-34"></use></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msup><mn>2</mn><mn>4</mn></msup></math></mjx-assistive-mml></mjx-container><script type="math/tex">2^4</script></th><th><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="2.119ex" height="1.885ex" role="img" focusable="false" viewBox="0 -833.2 936.6 833.2" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: 0px;"><defs><path id="MJX-14-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-14-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-14-TEX-N-32"></use></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><use data-c="33" xlink:href="#MJX-14-TEX-N-33"></use></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msup><mn>2</mn><mn>3</mn></msup></math></mjx-assistive-mml></mjx-container><script type="math/tex">2^3</script></th><th><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="2.119ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 936.6 833.9" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: 0px;"><defs><path id="MJX-15-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-15-TEX-N-32"></use></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><use data-c="32" xlink:href="#MJX-15-TEX-N-32"></use></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msup><mn>2</mn><mn>2</mn></msup></math></mjx-assistive-mml></mjx-container><script type="math/tex">2^2</script></th><th><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="2.119ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 936.6 833.9" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: 0px;"><defs><path id="MJX-16-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-16-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-16-TEX-N-32"></use></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><use data-c="31" xlink:href="#MJX-16-TEX-N-31"></use></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msup><mn>2</mn><mn>1</mn></msup></math></mjx-assistive-mml></mjx-container><script type="math/tex">2^1</script></th><th><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="2.119ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 936.6 833.9" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: 0px;"><defs><path id="MJX-142-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-142-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-142-TEX-N-32"></use></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><use data-c="30" xlink:href="#MJX-142-TEX-N-30"></use></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><msup><mn>2</mn><mn>0</mn></msup></math></mjx-assistive-mml></mjx-container><script type="math/tex">2^0</script></th></tr></thead><tbody><tr><td><span>Bit</span></td><td><span>1</span></td><td><span>0</span></td><td><span>0</span></td><td><span>0</span></td><td><span>1</span></td><td><span>1</span></td><td><span>0</span></td><td><span>0</span></td></tr></tbody></table></figure><p><span>Le premier bit sera toujours négatif s&#39;il faut un – donc pour avoir une petite valeur négative on doit &quot;compenser&quot; avec des uns positifs : e.g. </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="19.494ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 8616.2 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-17-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-17-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path id="MJX-17-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-17-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-17-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path id="MJX-17-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-17-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><use data-c="28" xlink:href="#MJX-17-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(389,0)"><use data-c="34" xlink:href="#MJX-17-TEX-N-34"></use></g><g data-mml-node="msub" transform="translate(889,0)"><g data-mml-node="mo"><use data-c="29" xlink:href="#MJX-17-TEX-N-29"></use></g><g data-mml-node="TeXAtom" transform="translate(422,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="31" xlink:href="#MJX-17-TEX-N-31"></use><use data-c="30" xlink:href="#MJX-17-TEX-N-30" transform="translate(500,0)"></use></g></g></g><g data-mml-node="mo" transform="translate(2345.9,0)"><use data-c="3D" xlink:href="#MJX-17-TEX-N-3D"></use></g><g data-mml-node="mo" transform="translate(3401.7,0)"><use data-c="28" xlink:href="#MJX-17-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(3790.7,0)"><use data-c="31" xlink:href="#MJX-17-TEX-N-31"></use><use data-c="31" xlink:href="#MJX-17-TEX-N-31" transform="translate(500,0)"></use><use data-c="31" xlink:href="#MJX-17-TEX-N-31" transform="translate(1000,0)"></use><use data-c="31" xlink:href="#MJX-17-TEX-N-31" transform="translate(1500,0)"></use><use data-c="31" xlink:href="#MJX-17-TEX-N-31" transform="translate(2000,0)"></use><use data-c="31" xlink:href="#MJX-17-TEX-N-31" transform="translate(2500,0)"></use><use data-c="30" xlink:href="#MJX-17-TEX-N-30" transform="translate(3000,0)"></use><use data-c="30" xlink:href="#MJX-17-TEX-N-30" transform="translate(3500,0)"></use></g><g data-mml-node="msub" transform="translate(7790.7,0)"><g data-mml-node="mo"><use data-c="29" xlink:href="#MJX-17-TEX-N-29"></use></g><g data-mml-node="mn" transform="translate(422,-150) scale(0.707)"><use data-c="32" xlink:href="#MJX-17-TEX-N-32"></use></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo stretchy="false">(</mo><mn>4</mn><msub><mo stretchy="false">)</mo><mrow data-mjx-texclass="ORD"><mn>10</mn></mrow></msub><mo>=</mo><mo stretchy="false">(</mo><mn>11111100</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub></math></mjx-assistive-mml></mjx-container><script type="math/tex">(4)_{10} = (11111100)_2</script></p><p><span>Il y a donc une asymétrie : par exemple pour 8 bits on pourra créer </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="8.702ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3846.1 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-18-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-18-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-18-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-18-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-18-TEX-N-38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path><path id="MJX-18-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-18-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><use data-c="28" xlink:href="#MJX-18-TEX-N-28"></use></g><g data-mml-node="mo" transform="translate(389,0)"><use data-c="2212" xlink:href="#MJX-18-TEX-N-2212"></use></g><g data-mml-node="mn" transform="translate(1167,0)"><use data-c="31" xlink:href="#MJX-18-TEX-N-31"></use><use data-c="32" xlink:href="#MJX-18-TEX-N-32" transform="translate(500,0)"></use><use data-c="38" xlink:href="#MJX-18-TEX-N-38" transform="translate(1000,0)"></use></g><g data-mml-node="msub" transform="translate(2667,0)"><g data-mml-node="mo"><use data-c="29" xlink:href="#MJX-18-TEX-N-29"></use></g><g data-mml-node="TeXAtom" transform="translate(422,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="31" xlink:href="#MJX-18-TEX-N-31"></use><use data-c="30" xlink:href="#MJX-18-TEX-N-30" transform="translate(500,0)"></use></g></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo stretchy="false">(</mo><mo>−</mo><mn>128</mn><msub><mo stretchy="false">)</mo><mrow data-mjx-texclass="ORD"><mn>10</mn></mrow></msub></math></mjx-assistive-mml></mjx-container><script type="math/tex">(-128)_{10}</script><span> mais pas </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="8.702ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3846.1 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-19-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-19-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path><path id="MJX-19-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-19-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-19-TEX-N-38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path><path id="MJX-19-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-19-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><use data-c="28" xlink:href="#MJX-19-TEX-N-28"></use></g><g data-mml-node="mo" transform="translate(389,0)"><use data-c="2B" xlink:href="#MJX-19-TEX-N-2B"></use></g><g data-mml-node="mn" transform="translate(1167,0)"><use data-c="31" xlink:href="#MJX-19-TEX-N-31"></use><use data-c="32" xlink:href="#MJX-19-TEX-N-32" transform="translate(500,0)"></use><use data-c="38" xlink:href="#MJX-19-TEX-N-38" transform="translate(1000,0)"></use></g><g data-mml-node="msub" transform="translate(2667,0)"><g data-mml-node="mo"><use data-c="29" xlink:href="#MJX-19-TEX-N-29"></use></g><g data-mml-node="TeXAtom" transform="translate(422,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="31" xlink:href="#MJX-19-TEX-N-31"></use><use data-c="30" xlink:href="#MJX-19-TEX-N-30" transform="translate(500,0)"></use></g></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo stretchy="false">(</mo><mo>+</mo><mn>128</mn><msub><mo stretchy="false">)</mo><mrow data-mjx-texclass="ORD"><mn>10</mn></mrow></msub></math></mjx-assistive-mml></mjx-container><script type="math/tex">(+128)_{10}</script><span> car il manque une place pour la compenser (on s&#39;arrête à </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="8.702ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3846.1 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-20-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-20-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path><path id="MJX-20-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-20-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-20-TEX-N-37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path><path id="MJX-20-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-20-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><use data-c="28" xlink:href="#MJX-20-TEX-N-28"></use></g><g data-mml-node="mo" transform="translate(389,0)"><use data-c="2B" xlink:href="#MJX-20-TEX-N-2B"></use></g><g data-mml-node="mn" transform="translate(1167,0)"><use data-c="31" xlink:href="#MJX-20-TEX-N-31"></use><use data-c="32" xlink:href="#MJX-20-TEX-N-32" transform="translate(500,0)"></use><use data-c="37" xlink:href="#MJX-20-TEX-N-37" transform="translate(1000,0)"></use></g><g data-mml-node="msub" transform="translate(2667,0)"><g data-mml-node="mo"><use data-c="29" xlink:href="#MJX-20-TEX-N-29"></use></g><g data-mml-node="TeXAtom" transform="translate(422,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="31" xlink:href="#MJX-20-TEX-N-31"></use><use data-c="30" xlink:href="#MJX-20-TEX-N-30" transform="translate(500,0)"></use></g></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo stretchy="false">(</mo><mo>+</mo><mn>127</mn><msub><mo stretchy="false">)</mo><mrow data-mjx-texclass="ORD"><mn>10</mn></mrow></msub></math></mjx-assistive-mml></mjx-container><script type="math/tex">(+127)_{10}</script><span>). </span></p><p><span>À noter qu&#39;il en existe d&#39;autres: one&#39;s complement, Excess-</span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.025ex;"><defs><path id="MJX-38-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D45B" xlink:href="#MJX-38-TEX-I-1D45B"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>n</mi></math></mjx-assistive-mml></mjx-container><script type="math/tex">n</script><span>, sign and magnitude… </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="26.076ex" height="4.082ex" role="img" focusable="false" viewBox="0 -716 11525.4 1804.2" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -2.462ex;"><defs><path id="MJX-22-TEX-SS-1D5B5" d="M14 692Q14 694 68 694H122L146 633Q325 165 339 90Q340 87 341 87Q341 124 530 619L558 694H605Q652 694 652 692Q650 690 523 354T390 10L387 0H279L276 10Q271 18 144 354T14 692Z"></path><path id="MJX-22-TEX-SS-1D5AE" d="M55 345Q55 504 149 609T361 715Q386 715 406 713Q521 696 600 592T680 344Q680 193 590 86T368 -22Q239 -22 147 84T55 345ZM276 59T368 59T518 146T576 360Q576 473 525 545T401 634Q371 637 362 637Q284 637 222 562T159 360T217 147Z"></path><path id="MJX-22-TEX-SS-1D5A8" d="M87 0V694H191V0H87Z"></path><path id="MJX-22-TEX-SS-1D5B1" d="M88 0V694H227H259H302Q365 694 399 689T474 663Q528 637 558 595T589 504Q589 482 584 462T569 426T547 396T522 372T495 353T470 338T449 328T434 322L429 320L440 300Q452 280 477 238T523 160L617 1L565 0Q513 0 512 1Q512 2 424 156L337 309H189V0H88ZM492 504Q492 600 367 620Q354 622 271 623H189V385H271Q363 386 388 392Q432 402 462 430T492 504Z"></path><path id="MJX-22-TEX-SS-A0" d=""></path><path id="MJX-22-TEX-SS-1D5A3" d="M88 0V694H237H258H316Q383 694 425 686T511 648Q578 604 622 525T666 343Q666 190 564 86Q494 18 400 3Q387 1 237 0H88ZM565 341Q565 409 546 463T495 550T429 600T359 621Q348 623 267 623H189V71H267Q272 71 286 71T310 70Q461 70 527 184Q565 251 565 341Z"></path><path id="MJX-22-TEX-SS-1D5C2" d="M67 576V680H171V576H67ZM74 0V444H164V0H74Z"></path><path id="MJX-22-TEX-SS-1D5C0" d="M55 286Q55 357 105 406T224 455Q280 455 323 421L322 423L318 427Q318 428 339 434T396 448T465 455H471L478 416L485 377Q484 377 474 379T445 383T401 385Q397 385 391 385T381 384L362 383L357 387Q358 386 364 375T375 354T384 325T389 287Q389 217 340 168T221 119Q178 119 138 142Q133 145 131 143Q125 131 125 117Q125 82 155 72L227 71Q230 71 251 71T280 71T310 69T343 65T373 57T403 46T428 30T449 7Q471 -26 471 -62V-71Q471 -136 384 -178Q326 -206 250 -206Q159 -206 102 -172T30 -92Q28 -84 28 -68T31 -37T40 -12T52 7T64 21T75 31T82 38Q60 68 60 106Q60 145 80 180L86 189L80 199Q55 240 55 286ZM304 233T304 287T279 362T220 383Q189 383 165 361T140 287Q140 243 161 217T220 191Q253 191 278 212ZM250 -134Q298 -134 331 -122T375 -96T387 -69Q387 -21 306 -7Q288 -5 216 -5Q161 -5 153 -7Q146 -9 139 -13T122 -31T113 -66Q113 -75 113 -80T127 -97T166 -121Q203 -134 250 -134Z"></path><path id="MJX-22-TEX-SS-1D5CD" d="M333 27Q333 24 314 16T257 -1T184 -10H172Q146 -10 128 14T105 58T99 91Q95 113 95 251V371H18V444H98V571H182V444H316V371H182V253Q183 128 189 104Q199 68 234 68Q277 72 314 98Q315 93 323 61T333 27Z"></path><path id="MJX-22-TEX-SS-1D5BA" d="M236 387Q209 387 184 382T141 370T111 355T91 342T83 337L82 355Q80 373 79 393T77 417Q77 419 81 421Q86 423 91 426Q155 460 227 460H238Q319 460 368 400Q393 371 400 341T408 252Q408 240 408 207T407 152V0H317V39L306 32Q244 -10 159 -10H152Q109 -10 77 22Q38 61 38 126Q38 142 39 146Q55 199 130 223T295 252H314V277Q314 305 313 310Q308 342 287 364T236 387ZM303 186Q124 180 124 126Q124 105 144 86T208 66Q284 66 309 124Q314 137 314 166V186H303Z"></path><path id="MJX-22-TEX-SS-1D5C5" d="M74 0V694H164V0H74Z"></path><path id="MJX-22-TEX-SS-20" d=""></path><path id="MJX-22-TEX-SS-1D5B2" d="M55 514Q55 589 115 652T283 716Q315 716 345 711T396 699T432 685T457 672T467 667Q467 666 459 618T449 568Q383 634 282 634Q214 634 182 600T150 525Q150 507 155 492T172 465T194 446T222 432T247 423T272 416T289 412Q353 396 378 384Q432 358 466 307T500 194Q500 110 438 44T272 -22Q215 -22 159 -5T73 28T44 50Q45 51 49 75T57 122T62 146L65 143Q68 140 74 136T88 125T107 111T131 98T160 85T194 74T232 66T274 63H286Q327 63 366 96T406 182Q406 245 352 280Q329 296 265 310T173 339Q124 363 90 409T55 514Z"></path><path id="MJX-22-TEX-SS-1D5D2" d="M113 -204Q83 -204 63 -200L43 -197Q43 -196 40 -157T36 -117L48 -121Q79 -133 114 -133Q124 -133 130 -132T145 -121T163 -94Q169 -82 184 -42T200 1L188 29Q176 57 152 115T107 223T62 330T26 416L14 443Q14 444 61 444H109L122 411Q230 155 236 75L237 65V74Q245 161 348 424L356 444H401Q446 444 446 443L396 313Q345 183 293 49T236 -93Q191 -204 123 -204H113Z"></path><path id="MJX-22-TEX-SS-1D5CC" d="M33 326Q33 376 60 408T117 450T175 460H190Q245 460 272 454T345 429Q345 428 338 388L331 349Q278 386 188 386H183Q119 386 119 336Q119 307 142 295T210 276T278 256Q360 213 360 130Q360 108 354 88T332 43T281 5T195 -10Q152 -10 111 1T49 22T28 35Q29 36 32 56T39 95T43 115T51 110T72 99T102 85T143 73T193 68Q274 68 274 123Q274 152 248 167Q234 178 187 186T115 207Q66 229 46 273Q33 298 33 326Z"></path><path id="MJX-22-TEX-SS-1D5BE" d="M28 226Q28 329 91 395T235 461Q258 461 279 456T325 436T368 397T399 332T415 238V219H113V215Q113 163 151 114T248 65Q273 65 298 70T341 82T373 96T396 108L403 113Q403 106 406 76T409 38Q409 34 408 33T393 24Q325 -10 252 -10Q155 -10 92 59T28 226ZM340 289L338 297Q335 305 333 310T327 326T317 343T304 358T286 372T263 381T233 385Q212 385 193 376T162 353T140 325T127 301T123 289H340Z"></path><path id="MJX-22-TEX-SS-1D5C6" d="M160 392Q223 455 304 455Q359 455 386 436T430 383L437 391Q495 455 584 455Q694 455 715 354Q719 331 720 164V0H627V157Q626 315 625 320Q611 378 536 378H530Q501 378 481 358Q457 334 450 301T442 209Q442 198 442 172T443 129V0H350V157Q349 315 348 320Q334 378 259 378H253Q224 378 204 358Q180 334 173 301T165 209Q165 198 165 172T166 129V0H73V450H160V392Z"></path><path id="MJX-22-TEX-SS-1D5C7" d="M160 392Q214 446 283 454Q285 454 292 454T303 455H306Q417 455 438 354Q442 331 443 164V0H350V157Q349 315 348 320Q334 378 259 378H253Q224 378 204 358Q180 334 173 301T165 209Q165 198 165 172T166 129V0H73V450H160V392Z"></path><path id="MJX-22-TEX-SS-B4" d="M349 699Q367 699 380 686T393 656Q393 651 392 647T387 637T380 627T367 616T351 602T330 585T303 563L232 505L217 519Q203 533 204 533Q204 534 229 567T282 636T313 678L316 681Q318 684 321 686T328 692T337 697T349 699Z"></path><path id="MJX-22-TEX-SS-1D5CF" d="M178 0Q15 441 14 442Q14 444 60 444Q107 444 107 442Q108 441 136 364T196 194T232 67Q233 98 280 234T356 442Q356 444 401 444T446 442L282 0H178Z"></path><path id="MJX-22-TEX-SS-1D5C8" d="M28 222Q28 323 95 391T244 460Q275 460 281 459Q364 445 417 377T471 219Q471 124 408 57T250 -10Q158 -10 93 57T28 222ZM377 230Q377 277 364 310T328 358T287 379T248 385Q233 385 219 382T186 369T155 342T132 297T122 230Q122 146 159 108T250 69H253Q263 69 274 70T305 81T339 106T365 154T377 230Z"></path><path id="MJX-22-TEX-SS-1D5A1" d="M425 363Q438 363 465 353T526 324T585 270T610 192Q610 132 561 78T426 7Q404 2 387 2T240 0H90V694H227Q373 693 396 689Q484 673 533 623T583 517Q583 494 574 473T551 437T520 409T487 388T456 374T433 366L425 363ZM490 516Q490 527 485 539T467 568T423 599T347 621Q340 622 262 623H188V399H261H286Q432 399 478 475Q490 496 490 516ZM514 190Q514 245 462 280T343 322Q336 323 259 323H188V71H274Q365 72 388 77Q445 88 479 121T514 190Z"></path><path id="MJX-22-TEX-SS-1D5A0" d="M183 181Q183 179 152 91T118 0H28L154 346L280 693Q281 694 333 694H385L511 349Q636 4 638 2Q638 0 584 0H530L464 183H184L183 181ZM324 606Q319 578 292 492T238 332T210 256Q210 254 324 254T438 255L429 281L419 308Q409 336 395 378T365 465T339 551T324 611V606Z"></path><path id="MJX-22-TEX-SS-1D7E4" d="M222 599Q190 599 166 585T128 550T108 509T97 474T93 459L67 492L42 526L47 539Q72 608 120 642T225 677Q304 677 355 644Q449 579 449 454Q449 373 361 290Q351 280 315 250T199 144Q156 103 137 85L293 86H449V0H50V79L216 242Q284 302 317 349T351 456Q351 517 315 558T222 599Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtext" transform="scale(0.85)"><use data-c="1D5B5" xlink:href="#MJX-22-TEX-SS-1D5B5"></use><use data-c="1D5AE" xlink:href="#MJX-22-TEX-SS-1D5AE" transform="translate(667,0)"></use><use data-c="1D5A8" xlink:href="#MJX-22-TEX-SS-1D5A8" transform="translate(1403,0)"></use><use data-c="1D5B1" xlink:href="#MJX-22-TEX-SS-1D5B1" transform="translate(1681,0)"></use><use data-c="A0" xlink:href="#MJX-22-TEX-SS-A0" transform="translate(2327,0)"></use></g><g data-mml-node="munder" transform="translate(2190.4,0)"><g data-mml-node="mtext"><use data-c="A0" xlink:href="#MJX-22-TEX-SS-A0"></use><use data-c="1D5A3" xlink:href="#MJX-22-TEX-SS-1D5A3" transform="translate(250,0)"></use><use data-c="1D5C2" xlink:href="#MJX-22-TEX-SS-1D5C2" transform="translate(972,0)"></use><use data-c="1D5C0" xlink:href="#MJX-22-TEX-SS-1D5C0" transform="translate(1211,0)"></use><use data-c="1D5C2" xlink:href="#MJX-22-TEX-SS-1D5C2" transform="translate(1711,0)"></use><use data-c="1D5CD" xlink:href="#MJX-22-TEX-SS-1D5CD" transform="translate(1950,0)"></use><use data-c="1D5BA" xlink:href="#MJX-22-TEX-SS-1D5BA" transform="translate(2311,0)"></use><use data-c="1D5C5" xlink:href="#MJX-22-TEX-SS-1D5C5" transform="translate(2792,0)"></use><use data-c="20" xlink:href="#MJX-22-TEX-SS-20" transform="translate(3031,0)"></use><use data-c="1D5B2" xlink:href="#MJX-22-TEX-SS-1D5B2" transform="translate(3281,0)"></use><use data-c="1D5D2" xlink:href="#MJX-22-TEX-SS-1D5D2" transform="translate(3837,0)"></use><use data-c="1D5CC" xlink:href="#MJX-22-TEX-SS-1D5CC" transform="translate(4298,0)"></use><use data-c="1D5CD" xlink:href="#MJX-22-TEX-SS-1D5CD" transform="translate(4681,0)"></use><use data-c="1D5BE" xlink:href="#MJX-22-TEX-SS-1D5BE" transform="translate(5042,0)"></use><use data-c="1D5C6" xlink:href="#MJX-22-TEX-SS-1D5C6" transform="translate(5486,0)"></use><use data-c="20" xlink:href="#MJX-22-TEX-SS-20" transform="translate(6280,0)"></use><use data-c="1D5A3" xlink:href="#MJX-22-TEX-SS-1D5A3" transform="translate(6530,0)"></use><use data-c="1D5BE" xlink:href="#MJX-22-TEX-SS-1D5BE" transform="translate(7252,0)"></use><use data-c="1D5CC" xlink:href="#MJX-22-TEX-SS-1D5CC" transform="translate(7696,0)"></use><use data-c="1D5C2" xlink:href="#MJX-22-TEX-SS-1D5C2" transform="translate(8079,0)"></use><use data-c="1D5C0" xlink:href="#MJX-22-TEX-SS-1D5C0" transform="translate(8318,0)"></use><use data-c="1D5C7" xlink:href="#MJX-22-TEX-SS-1D5C7" transform="translate(8818,0)"></use></g><g data-mml-node="mrow" transform="translate(2582.9,-981.1) scale(0.707)"><g data-mml-node="mtext"><use data-c="1D5B1" xlink:href="#MJX-22-TEX-SS-1D5B1"></use></g><g data-mml-node="mover" transform="translate(646,0)"><g data-mml-node="mtext"><use data-c="1D5BE" xlink:href="#MJX-22-TEX-SS-1D5BE"></use></g><g data-mml-node="mo" transform="translate(222,61) translate(-250 0)"><use data-c="B4" xlink:href="#MJX-22-TEX-SS-B4"></use></g></g><g data-mml-node="mtext" transform="translate(1090,0)"><use data-c="1D5CF" xlink:href="#MJX-22-TEX-SS-1D5CF"></use><use data-c="1D5C2" xlink:href="#MJX-22-TEX-SS-1D5C2" transform="translate(461,0)"></use><use data-c="1D5CC" xlink:href="#MJX-22-TEX-SS-1D5CC" transform="translate(700,0)"></use><use data-c="1D5C2" xlink:href="#MJX-22-TEX-SS-1D5C2" transform="translate(1083,0)"></use><use data-c="1D5C8" xlink:href="#MJX-22-TEX-SS-1D5C8" transform="translate(1322,0)"></use><use data-c="1D5C7" xlink:href="#MJX-22-TEX-SS-1D5C7" transform="translate(1822,0)"></use><use data-c="1D5CC" xlink:href="#MJX-22-TEX-SS-1D5CC" transform="translate(2339,0)"></use><use data-c="20" xlink:href="#MJX-22-TEX-SS-20" transform="translate(2722,0)"></use><use data-c="1D5A1" xlink:href="#MJX-22-TEX-SS-1D5A1" transform="translate(2972,0)"></use><use data-c="1D5A0" xlink:href="#MJX-22-TEX-SS-1D5A0" transform="translate(3639,0)"></use><use data-c="1D7E4" xlink:href="#MJX-22-TEX-SS-1D7E4" transform="translate(4306,0)"></use></g></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mtext mathvariant="sans-serif" mathsize="0.85">VOIR&nbsp;</mtext><munder><mtext mathvariant="sans-serif">&nbsp;Digital System Design</mtext><mrow><mtext mathvariant="sans-serif">R</mtext><mover><mtext mathvariant="sans-serif">e</mtext><mo data-mjx-pseudoscript="true" mathvariant="sans-serif">´</mo></mover><mtext mathvariant="sans-serif">visions BA2</mtext></mrow></munder></math></mjx-assistive-mml></mjx-container><script type="math/tex">\textsf{\small VOIR }\underset{\textsf{R\'evisions BA2}}{\textsf{ Digital System Design}}</script><span>.)</span></p><h3 id='opérateurs-bit-à-bit'><span>Opérateurs bit à bit</span></h3><figure><table><thead><tr><th><span>Symbole</span></th><th><span>Nom</span></th><th><span>Comportement</span></th><th><span>Équivalent logique</span></th></tr></thead><tbody><tr><td><span>~</span></td><td><span>complément</span></td><td><span>inverse le bit</span></td><td><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.509ex" height="0.604ex" role="img" focusable="false" viewBox="0 -356 667 267" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: 0.201ex;"><defs><path id="MJX-23-TEX-N-AC" d="M56 323T56 336T70 356H596Q603 353 611 343V102Q598 89 591 89Q587 89 584 90T579 94T575 98T572 102L571 209V316H70Q56 323 56 336Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="AC" xlink:href="#MJX-23-TEX-N-AC"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi mathvariant="normal">¬</mi></math></mjx-assistive-mml></mjx-container><script type="math/tex">\neg</script></td></tr><tr><td><span>&amp;</span></td><td><span>et</span></td><td><span>1 </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="5.462ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 2414 549" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.054ex;"><defs><path id="MJX-45-TEX-N-27FA" d="M1438 514Q1438 525 1454 525Q1459 525 1462 525T1467 525T1471 524T1473 523T1475 520T1477 517T1480 512Q1517 438 1578 381T1689 300T1785 263Q1802 258 1802 250T1793 239T1756 228T1698 204Q1554 134 1480 -12Q1476 -21 1473 -22T1458 -24Q1438 -24 1438 -17Q1438 -13 1443 0Q1478 69 1529 123L1539 133H318L328 123Q379 69 414 0Q419 -13 419 -17Q419 -24 399 -24Q388 -24 385 -23T377 -12Q332 77 253 144T72 237Q62 240 59 242T56 250T59 257T70 262T89 268T119 278T160 296Q303 366 377 512Q382 522 385 523T401 525Q419 524 419 515Q419 510 414 500Q379 431 328 377L318 367H1539L1529 377Q1496 412 1467 458T1438 514ZM274 173H1583L1593 181Q1632 211 1710 250Q1709 251 1692 259T1647 283T1593 319L1583 327H930L927 328L602 327H274L264 319Q225 289 147 250Q148 249 165 241T210 217T264 181L274 173Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mspace"></g></g><g data-mml-node="mo" transform="translate(278,0)"><use data-c="27FA" xlink:href="#MJX-45-TEX-N-27FA"></use></g><g data-mml-node="mstyle" transform="translate(2136,0)"><g data-mml-node="mspace"></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mstyle scriptlevel="0"><mspace width="0.278em"></mspace></mstyle><mo stretchy="false">⟺</mo><mstyle scriptlevel="0"><mspace width="0.278em"></mspace></mstyle></math></mjx-assistive-mml></mjx-container><script type="math/tex">\iff</script><span> 1&amp;1, 0 sinon</span></td><td><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.509ex" height="1.403ex" role="img" focusable="false" viewBox="0 -598 667 620" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.05ex;"><defs><path id="MJX-25-TEX-N-2227" d="M318 591Q325 598 333 598Q344 598 348 591Q349 590 414 445T545 151T611 -4Q609 -22 591 -22Q588 -22 586 -21T581 -20T577 -17T575 -13T572 -9T570 -4L333 528L96 -4Q87 -20 80 -21Q78 -22 75 -22Q57 -22 55 -4Q55 2 120 150T251 444T318 591Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><use data-c="2227" xlink:href="#MJX-25-TEX-N-2227"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>∧</mo></math></mjx-assistive-mml></mjx-container><script type="math/tex">\wedge</script></td></tr><tr><td><span>|</span></td><td><span>ou</span></td><td><span>1 </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="5.462ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 2414 549" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.054ex;"><defs><path id="MJX-45-TEX-N-27FA" d="M1438 514Q1438 525 1454 525Q1459 525 1462 525T1467 525T1471 524T1473 523T1475 520T1477 517T1480 512Q1517 438 1578 381T1689 300T1785 263Q1802 258 1802 250T1793 239T1756 228T1698 204Q1554 134 1480 -12Q1476 -21 1473 -22T1458 -24Q1438 -24 1438 -17Q1438 -13 1443 0Q1478 69 1529 123L1539 133H318L328 123Q379 69 414 0Q419 -13 419 -17Q419 -24 399 -24Q388 -24 385 -23T377 -12Q332 77 253 144T72 237Q62 240 59 242T56 250T59 257T70 262T89 268T119 278T160 296Q303 366 377 512Q382 522 385 523T401 525Q419 524 419 515Q419 510 414 500Q379 431 328 377L318 367H1539L1529 377Q1496 412 1467 458T1438 514ZM274 173H1583L1593 181Q1632 211 1710 250Q1709 251 1692 259T1647 283T1593 319L1583 327H930L927 328L602 327H274L264 319Q225 289 147 250Q148 249 165 241T210 217T264 181L274 173Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mspace"></g></g><g data-mml-node="mo" transform="translate(278,0)"><use data-c="27FA" xlink:href="#MJX-45-TEX-N-27FA"></use></g><g data-mml-node="mstyle" transform="translate(2136,0)"><g data-mml-node="mspace"></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mstyle scriptlevel="0"><mspace width="0.278em"></mspace></mstyle><mo stretchy="false">⟺</mo><mstyle scriptlevel="0"><mspace width="0.278em"></mspace></mstyle></math></mjx-assistive-mml></mjx-container><script type="math/tex">\iff</script><span> 1</span><span>|</span><span>0 ou 0</span><span>|</span><span>1 ou 1</span><span>|</span><span>1</span></td><td><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.509ex" height="1.403ex" role="img" focusable="false" viewBox="0 -598 667 620" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.05ex;"><defs><path id="MJX-27-TEX-N-2228" d="M55 580Q56 587 61 592T75 598Q86 598 96 580L333 48L570 580Q579 596 586 597Q588 598 591 598Q609 598 611 580Q611 574 546 426T415 132T348 -15Q343 -22 333 -22T318 -15Q317 -14 252 131T121 425T55 580Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><use data-c="2228" xlink:href="#MJX-27-TEX-N-2228"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>∨</mo></math></mjx-assistive-mml></mjx-container><script type="math/tex">\or</script></td></tr><tr><td><span>^</span></td><td><span>ou exclusif</span></td><td><span>1 </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="5.462ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 2414 549" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.054ex;"><defs><path id="MJX-45-TEX-N-27FA" d="M1438 514Q1438 525 1454 525Q1459 525 1462 525T1467 525T1471 524T1473 523T1475 520T1477 517T1480 512Q1517 438 1578 381T1689 300T1785 263Q1802 258 1802 250T1793 239T1756 228T1698 204Q1554 134 1480 -12Q1476 -21 1473 -22T1458 -24Q1438 -24 1438 -17Q1438 -13 1443 0Q1478 69 1529 123L1539 133H318L328 123Q379 69 414 0Q419 -13 419 -17Q419 -24 399 -24Q388 -24 385 -23T377 -12Q332 77 253 144T72 237Q62 240 59 242T56 250T59 257T70 262T89 268T119 278T160 296Q303 366 377 512Q382 522 385 523T401 525Q419 524 419 515Q419 510 414 500Q379 431 328 377L318 367H1539L1529 377Q1496 412 1467 458T1438 514ZM274 173H1583L1593 181Q1632 211 1710 250Q1709 251 1692 259T1647 283T1593 319L1583 327H930L927 328L602 327H274L264 319Q225 289 147 250Q148 249 165 241T210 217T264 181L274 173Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mspace"></g></g><g data-mml-node="mo" transform="translate(278,0)"><use data-c="27FA" xlink:href="#MJX-45-TEX-N-27FA"></use></g><g data-mml-node="mstyle" transform="translate(2136,0)"><g data-mml-node="mspace"></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mstyle scriptlevel="0"><mspace width="0.278em"></mspace></mstyle><mo stretchy="false">⟺</mo><mstyle scriptlevel="0"><mspace width="0.278em"></mspace></mstyle></math></mjx-assistive-mml></mjx-container><script type="math/tex">\iff</script><span> 1</span><span>|</span><span>0 ou 0</span><span>|</span><span>1 mais pas 1</span><span>|</span><span>1</span></td><td><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.76ex" height="1.507ex" role="img" focusable="false" viewBox="0 -583 778 666" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.188ex;"><defs><path id="MJX-29-TEX-N-2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><use data-c="2295" xlink:href="#MJX-29-TEX-N-2295"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>⊕</mo></math></mjx-assistive-mml></mjx-container><script type="math/tex">\oplus</script></td></tr><tr><td><code>a</code><span> &lt;&lt; </span><code>b</code></td><td><span>décalage à gauche</span></td><td><span>Ajoute </span><code>b</code><span> zéros à la fin de </span><code>a</code><span> et supprime les valeurs au début si lles dépassent le nombre maximal de places.</span></td><td><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="3.765ex" height="1.932ex" role="img" focusable="false" viewBox="0 -853.7 1664.3 853.7" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: 0px;"><defs><path id="MJX-30-TEX-N-D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path><path id="MJX-30-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-30-TEX-I-1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><use data-c="D7" xlink:href="#MJX-30-TEX-N-D7"></use></g><g data-mml-node="msup" transform="translate(778,0)"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-30-TEX-N-32"></use></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><use data-c="1D44F" xlink:href="#MJX-30-TEX-I-1D44F"></use></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>×</mo><msup><mn>2</mn><mi>b</mi></msup></math></mjx-assistive-mml></mjx-container><script type="math/tex">\times 2^b</script></td></tr><tr><td><code>a</code><span> &gt;&gt;&gt; </span><code>b</code></td><td><span>décalage à droite logique</span></td><td><span>Ajoute </span><code>b</code><span> zéros au début de </span><code>a</code><span> et supprime les valeurs à la fin si elles dépassent le nombre maximal de places.</span></td><td>&nbsp;</td></tr><tr><td><code>a</code><span> &gt;&gt; </span><code>b</code></td><td><span>décalage à droite</span></td><td><span>Ajoute </span><code>b</code><span> zéros ou uns (selon la valeur du MSB dans l&#39;interprétation fixée) au début </span><code>a</code><span> et supprime les zéros au début si elles dépassent le nombre maximal de places.</span></td><td><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="5.01ex" height="1.932ex" role="img" focusable="false" viewBox="0 -853.7 2214.5 853.7" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: 0px;"><defs><path id="MJX-31-TEX-N-D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path><path id="MJX-31-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-31-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-31-TEX-I-1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><use data-c="D7" xlink:href="#MJX-31-TEX-N-D7"></use></g><g data-mml-node="msup" transform="translate(778,0)"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-31-TEX-N-32"></use></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><use data-c="2212" xlink:href="#MJX-31-TEX-N-2212"></use></g><g data-mml-node="mi" transform="translate(778,0)"><use data-c="1D44F" xlink:href="#MJX-31-TEX-I-1D44F"></use></g></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>×</mo><msup><mn>2</mn><mrow data-mjx-texclass="ORD"><mo>−</mo><mi>b</mi></mrow></msup></math></mjx-assistive-mml></mjx-container><script type="math/tex">\times  2^{-b}</script></td></tr></tbody></table></figure><blockquote><p>⚠️<span> </span><code>&gt;&gt;</code><span> et </span><code>&gt;&gt;&gt;</code><span> ne seront différents uniquement si le MSB vaut un, donc dans une interprétation de complément à deux (comme </span><code>int</code><span>), pour les entiers négatifs.</span></p></blockquote><h3 id='opérations-sur-les-bits'><span>Opérations sur les bits</span></h3><ul><li><p><strong><span>Masque</span></strong><span> – on peut généralement sélectionner certains bits à manipuler en créeant un masque avec des </span><code>1</code><span> uniquement aux positions où on en a besoin.</span>
<em><span>Par exemple, pour extraire la valeur aux la positions 3 et 4 du nombre  </span><code>0b101011</code><span>, on peut procéder comme ainsi :</span></em></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-3">int</span> <span class="cm-variable">maskPosition34</span> <span class="cm-operator">=</span> <span class="cm-number">0b11</span> <span class="cm-operator">&lt;&lt;</span> <span class="cm-number">3</span>;</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-3">int</span> <span class="cm-variable">valueAtPosition3</span> <span class="cm-operator">=</span> <span class="cm-variable">maskPosition34</span> <span class="cm-operator">&amp;</span> <span class="cm-number">0b101011</span> <span class="cm-comment">// = 0b01</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 44px;"></div><div class="CodeMirror-gutters" style="display: none; height: 44px;"></div></div></div></pre></li><li><p><strong><span>Division et soustraction par 2</span><sup><span>n</span></sup></strong><span> – cela se fait par les décalages arithmétiques :</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-3">int</span> <span class="cm-variable">num</span> <span class="cm-operator">=</span> <span class="cm-number">24</span>; <span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-comment">// 0b11000</span></span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-number">12</span> <span class="cm-operator">==</span> <span class="cm-variable">num</span> <span class="cm-operator">&gt;&gt;</span> <span class="cm-number">1</span>;<span class="cm-tab" role="presentation" cm-text="	"> </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-comment">// true</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-number">96</span> <span class="cm-operator">==</span> <span class="cm-variable">num</span> <span class="cm-operator">&lt;&lt;</span> <span class="cm-number">2</span>;<span class="cm-tab" role="presentation" cm-text="	"> </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-comment">// true</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 66px;"></div><div class="CodeMirror-gutters" style="display: none; height: 66px;"></div></div></div></pre></li><li><p><strong><span>Parité</span></strong><span> – il suffit de vérifier que le LSB est soit 1 soit 0 (le nombre s&#39;écrit comme combinaisons de puissances de 2) :</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-3">int</span> <span class="cm-variable">x</span> <span class="cm-operator">=</span> <span class="cm-number">3</span>;<span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-comment">// x est impair</span></span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">x</span> <span class="cm-operator">&amp;</span> <span class="cm-number">1</span> <span class="cm-operator">==</span> <span class="cm-number">0</span>;<span class="cm-tab" role="presentation" cm-text="	"> </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-comment">// false</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">x</span> <span class="cm-operator">&amp;</span> <span class="cm-number">1</span> <span class="cm-operator">==</span> <span class="cm-number">1</span>;<span class="cm-tab" role="presentation" cm-text="	"> </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-comment">// true</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 66px;"></div><div class="CodeMirror-gutters" style="display: none; height: 66px;"></div></div></div></pre></li></ul><h5 id='dans-lapi-java'><span>Dans l&#39;API Java</span></h5><ul><li><span>Les entiers sont représentés aussi par les types formels </span><code>Byte</code><span>, </span><code>Short</code><span>,  </span><code>Integer</code><span>, </span><code>Long</code><span> et </span><code>Character</code><span>. Ils possèdent des méthodes statiques utiles à la programmation :</span></li></ul><figure><table><thead><tr><th><span>Attribut</span></th><th><span>Description</span></th></tr></thead><tbody><tr><td><code>MIN_VALUE</code><span>, </span><code>MAX_VALUE</code></td><td><span>petite et plus grande valeur du type entier</span></td></tr><tr><td><code>SIZE</code></td><td><span>taille en bits du type entier</span></td></tr><tr><td><code>BYTES</code></td><td><span>le nombre d&#39;octets représenté par le type.</span></td></tr><tr><td><code>String toString(int i, int b=10)</code></td><td><span>représentation de l&#39;entier en base </span><code>b,</code><span> par défaut base 10.</span></td></tr><tr><td><code>int parseInt(String s, int b)</code></td><td><span>convertit un </span><code>String</code><span> en </span><code>int</code><span> (si possible) selon la base spécifiée.</span></td></tr><tr><td><code>int bitCount(int i)</code></td><td><span>nombre de bits qui valent </span><code>1</code><span> dans </span><code>i</code><span>.</span></td></tr><tr><td><code>int lowestOneBit(int i)</code></td><td><span>donne un </span><code>int</code><span> avec </span><code>1</code><span> dans la position LSB de </span><code>i</code></td></tr><tr><td><code>int highestOneBit(int i)</code></td><td><span>donne un </span><code>int</code><span> avec </span><code>1</code><span> dans la position MSB de </span><code>i</code></td></tr><tr><td><code>int rotateLeft(int i, int d)</code></td><td><span>effectue une rotation à la gauche sur </span><code>i</code><span> de </span><code>d</code><span> places,  dont les valeurs à la fin sont réinjectées au début.</span></td></tr><tr><td><code>int rotateRight(int i, int d)</code></td><td><span>effectue une rotation à la droite sur </span><code>i</code><span> de </span><code>d</code><span> places,  dont les valeurs au début sont réinjectées à la fin.</span></td></tr><tr><td><code>int reverse(int i)</code></td><td><span>invertit l&#39;ordre des bits de </span><code>i</code></td></tr><tr><td><code>int reverseBytes(int i)</code></td><td><span>invertit l&#39;ordre des octets de </span><code>i</code></td></tr></tbody></table></figure><h3 id='empaquetage-de-couleurs'><span>Empaquetage de couleurs</span></h3><p><em><span>Se fait facilement dans un </span><code>int</code></em><span>:</span></p><figure><table><thead><tr><th><span>31 – 24</span></th><th><span>23 – 16 </span><sup><span>ROUGE</span></sup></th><th><span>15 – 8 </span><sup><span>VERT</span></sup></th><th><span>7 – 0 </span><sup><span>BLEU</span></sup></th></tr></thead><tbody><tr><td><span>inutilisés</span></td><td><span>r</span><sub><span>7</span></sub><span> … r</span><sub><span>0</span></sub></td><td><span>g</span><sub><span>7</span></sub><span> … g</span><sub><span>0</span></sub></td><td><span>b</span><sub><span>7</span></sub><span> … b</span><sub><span>0</span></sub></td></tr></tbody></table></figure><p><span>On utilise souvent la représentation </span><strong><span>hexadécimale</span></strong><span> pour représenter les valeurs pusique deux chiffres hexadécimaux peuvent représenter </span><strong><span>256</span></strong><span> valeurs différentes, donc c&#39;est très économique: le format devient </span><code>couleur = RRGGBB</code><span> où par exemple </span><code>00 &lt; RR &lt; FF</code><span>.</span></p><h2 id='3-entréessorties-io'><em><span>3.</span></em><span> Entrées/sorties (I/O)</span></h2><blockquote><h4 id='petite-session-vocabulaire'><span>Petite session vocabulaire</span></h4><ul><li><p><strong><span>Fichier</span></strong><span> : séquence d&#39;octets stockée sur un support physique</span></p><ul><li><span>Accompagné de </span><strong><span>méta-données</span></strong><span> qui contient des infos dessus (nom, droits d&#39;accès, etc.)</span></li></ul></li><li><p><span>Un </span><strong><span>système de fichiers</span></strong><span> organise les fichiers dans des </span><strong><span>repértoires</span></strong><span> désignés par des </span><strong><span>chemin d&#39;accès</span></strong><span>.</span></p><ul><li>⚠️<span> Dans les chemins d&#39;accès Windows, les répertoires sont séparés avec </span><code>\</code><span>  alors que sur macOS, Linux et tout autre système Unix, ils sont séparés avec </span><code>/</code><span>.</span></li></ul></li><li><p><span>On distingue </span><em><span>deux types</span></em><span> de fichiers:</span></p><ul><li><strong><span>textuels</span></strong><span> – contiennent une séquence de caractères </span></li><li><strong><span>binaires</span></strong><span> – tous les autres types (images, software, formats propriétaires…)</span></li></ul></li><li><p><span>Dans Java, on peut gérer les entrées et les sorties avec deux paquetages différents : </span></p><ul><li><code>java.io</code><span> – les classes originales (depuis Java 1), qui gèrent des </span><strong><span>flots</span></strong><span> (</span><em><span>stream</span></em><span>), des séquences de valeurs </span></li><li><code>java.nio</code><span> (</span><em><span>new io</span></em><span>) – les classes plus récentes qui gèrent des </span><strong><span>mémoires tampons</span></strong><span> (</span><em><span>buffer</span></em><span>).</span></li></ul></li></ul></blockquote><p>&nbsp;</p><h3 id='javaio-----flotsstream-du-paquetage'><code>java.io</code><span> — Flots/</span><code>stream</code><span> du paquetage</span></h3><h5 id='deux-types-de-flots--- implémentations-abstraites-en-java'><span>Deux types de flots – implémentations abstraites en java</span></h5><figure><table><thead><tr><th><span>Type</span></th><th><span>Entrée</span></th><th><span>Sortie</span></th></tr></thead><tbody><tr><td><span>Octets</span></td><td><code>InputStream</code></td><td><code>OutputStream</code></td></tr><tr><td><span>Caractères</span></td><td><code>Reader</code></td><td><code>Writer</code></td></tr></tbody></table></figure><ul><li><p><code>abstract InputStream</code><span> — flot </span><strong><span>d&#39;entrée</span></strong></p><ul><li><p><span>abstract void </span><code>read()</code><span> – lit le prochain </span><code>byte</code><span>.</span></p></li><li><p><code>int readNBytes(byte[] arr, int off, int len)</code><span> – lit un nombre </span><code>len</code><span> de bytes à partir de </span><code>off</code><span>  et les insère dans </span><code>arr</code><span>.</span></p></li><li><p><code>byte[] readNBytes(int l)</code><span> qui les insère dans un nouveau tableau.</span></p></li><li><p><code>byte[] readAllBytes()</code><span> qui insère tous les octets dans un nouveau tableau.</span></p></li><li><p><code>long skip(long n)</code><span> – ignore au plus </span><code>n</code><span> octets et retourne le nombre ignoré.</span></p></li><li><p><code>void skipNBytes(long n)</code><span> – ignore exactement </span><code>n</code><span> octets.</span></p></li><li><p><code>int available()</code><span> – permet de connaître le nombre total d&#39;octets qui ne bloquerait pas le programme (voir dessous).</span></p></li><li><p><code>long transferTo(OutputStream o)</code><span> – lit tous les octets du flot et les écrit dans </span><code>o</code><span>.</span></p></li><li><p><em><span>Méthodes de marquage</span></em><span> qui permettent de marquer une position dans un flot:</span></p><ul><li><code>void mark(int l)</code><span> – marque la position actuelle pour les prochain </span><code>l</code><span> octets, si on appelle donc </span><code>reset()</code><span> celui-ci y retournera.</span></li><li><code>reset()</code><span> qui retourne à la dernière position marquée.</span></li></ul></li><li><p><code>close()</code><span> – </span><strong><span>important</span></strong><span>: il faut appeler cette méthode pour libérer les ressources système utilisées pour faire passer le </span><code>stream</code><span>. Comme &quot;raccroccher le téléphone&quot;.</span></p></li></ul></li></ul><blockquote><p>⚠️<span> </span><strong><span>Méthodes bloquantes</span></strong></p><p><span>Si tous les octets demandés ne sont pas encore chargés dans la mémoire, les méthodes </span><code>read</code><span> </span><strong><span>bloquent</span></strong><span> le programme (il cesse de fonctionner jusqu&#39;à ce que les octets soient chargés). C&#39;est pour cela que la méthode </span><code>available()</code><span> permet de ne pas bloquer le fonctionnement du programme.</span></p></blockquote><ul><li><p><code>abstract OutputStream</code><span> — flot de </span><strong><span>sortie</span></strong></p><ul><li><code>abstract void write(int b)</code><span> – écrit les 8 bits de poids faible de b dans le flot</span></li><li><code>void write(byte[] b)</code><span> – écrit la totalité des </span><code>bytes</code><span> dans </span><code>b</code><span> </span></li><li><code>void flush()</code><span> – force les données à être écrites toute de suite (ce n&#39;est pas forcément le cas).</span></li><li><code>void close()</code><span> – même comportement que </span><code>InputStream</code><span>.</span></li></ul></li></ul><h5 id='implémentations-concrètes'><span>Implémentations concrètes</span></h5><ul><li><p><code>InputStream</code><span> – deux familles concrètes</span></p><ul><li><p><span>Flots d&#39;entrée primaires, dont les données viennent directement d&#39;une source déterminée.</span></p><ul><li><code>FileInputStream</code><span>  – lit les octets d&#39;un fichier</span></li><li><code>ByteArrayInputStream</code><span> – d&#39;un </span><code>byte[]</code><span> passé en argument</span></li></ul></li><li><p><span>Flots d&#39;entrée filtrants, données viennent d&#39;un flot sous-jacent qui héritent de </span><code>FilterInputStream</code><span>.</span></p><ul><li><code>BufferedInputStream</code><span> – ajoute une mémoire tampon au input stream, donc on peut lui passer des autres </span><code>InputStream</code><span> concrets</span></li><li><code>GZIPInputStream</code><span> – décompresse un fichier ZIP  </span></li></ul></li><li><p><span>On peut combiner des InputStream, e.g. </span><code>InputStream a = new GZIPInputStream(new FileInputStream(&quot;allbytes.bin.gz&quot;))</code></p></li></ul></li><li><p><code>OutputStream</code><span> – similaire à </span><code>InputStream</code><span>:</span></p></li></ul><div class="md-diagram-panel md-fences-adv-panel"><svg id="mermaidChart60" width="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" height="309" style="max-width: 532.484375px;" viewBox="-8 -8 532.484375 309"><style>#mermaidChart60{font-family:sans-serif;font-size:16px;fill:#333;}#mermaidChart60 .error-icon{fill:#552222;}#mermaidChart60 .error-text{fill:#552222;stroke:#552222;}#mermaidChart60 .edge-thickness-normal{stroke-width:2px;}#mermaidChart60 .edge-thickness-thick{stroke-width:3.5px;}#mermaidChart60 .edge-pattern-solid{stroke-dasharray:0;}#mermaidChart60 .edge-pattern-dashed{stroke-dasharray:3;}#mermaidChart60 .edge-pattern-dotted{stroke-dasharray:2;}#mermaidChart60 .marker{fill:#333333;}#mermaidChart60 .marker.cross{stroke:#333333;}#mermaidChart60 svg{font-family:sans-serif;font-size:16px;}#mermaidChart60 .label{font-family:sans-serif;color:#333;}#mermaidChart60 .label text{fill:#333;}#mermaidChart60 .node rect,#mermaidChart60 .node circle,#mermaidChart60 .node ellipse,#mermaidChart60 .node polygon,#mermaidChart60 .node path{fill:#ECECFF;stroke:#9370DB;stroke-width:1px;}#mermaidChart60 .node .label{text-align:center;}#mermaidChart60 .node.clickable{cursor:pointer;}#mermaidChart60 .arrowheadPath{fill:#333333;}#mermaidChart60 .edgePath .path{stroke:#333333;stroke-width:1.5px;}#mermaidChart60 .flowchart-link{stroke:#333333;fill:none;}#mermaidChart60 .edgeLabel{background-color:#e8e8e8;text-align:center;}#mermaidChart60 .edgeLabel rect{opacity:0.5;background-color:#e8e8e8;fill:#e8e8e8;}#mermaidChart60 .cluster rect{fill:#ffffde;stroke:#aaaa33;stroke-width:1px;}#mermaidChart60 .cluster text{fill:#333;}#mermaidChart60 div.mermaidTooltip{position:absolute;text-align:center;max-width:200px;padding:2px;font-family:sans-serif;font-size:12px;background:hsl(80,100%,96.2745098039%);border:1px solid #aaaa33;border-radius:2px;pointer-events:none;z-index:100;}#mermaidChart60:root{--mermaid-font-family:sans-serif;}#mermaidChart60:root{--mermaid-alt-font-family:sans-serif;}#mermaidChart60 flowchart{fill:apa;}</style><g><g class="output"><g class="clusters"><g class="cluster" id="flowchart-subGraph0-886" transform="translate(262.2421875,150.5)" style="opacity: 1;"><rect width="508.484375" height="285" x="-254.2421875" y="-142.5"></rect><g class="label" transform="translate(0, -128.5)" id="mermaidChart60Text"><g transform="translate(-78.703125,-12.5)"><foreignObject width="157.40625" height="25"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;">OutputStream classes</div></foreignObject></g></g></g></g><g class="edgePaths"><g class="edgePath LS-FilterOutputStream LE-OutputStream" id="L-FilterOutputStream-OutputStream" style="opacity: 1;"><path class="path" d="M203.9765625,128L203.9765625,103L256.6800986842105,78" marker-end="url(#arrowhead1474)" style="fill:none"></path><defs><marker id="arrowhead1474" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" class="arrowheadPath" style="stroke-width: 1px; stroke-dasharray: 1px, 0px;"></path></marker></defs></g><g class="edgePath LS-PrintStream LE-FilterOutputStream" id="L-PrintStream-FilterOutputStream" style="opacity: 1;"><path class="path" d="M107.90625,223L107.90625,198L158.46957236842104,173" marker-end="url(#arrowhead1475)" style="fill:none"></path><defs><marker id="arrowhead1475" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" class="arrowheadPath" style="stroke-width: 1px; stroke-dasharray: 1px, 0px;"></path></marker></defs></g><g class="edgePath LS-FileOutputStream LE-OutputStream" id="L-FileOutputStream-OutputStream" style="opacity: 1;"><path class="path" d="M408.7890625,128L408.7890625,103L353.69654605263156,78" marker-end="url(#arrowhead1476)" style="fill:none"></path><defs><marker id="arrowhead1476" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" class="arrowheadPath" style="stroke-width: 1px; stroke-dasharray: 1px, 0px;"></path></marker></defs></g><g class="edgePath LS-BufferedOutputStream LE-FilterOutputStream" id="L-BufferedOutputStream-FilterOutputStream" style="opacity: 1;"><path class="path" d="M300.046875,223L300.046875,198L249.48355263157896,173" marker-end="url(#arrowhead1477)" style="fill:none"></path><defs><marker id="arrowhead1477" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" class="arrowheadPath" style="stroke-width: 1px; stroke-dasharray: 1px, 0px;"></path></marker></defs></g></g><g class="edgeLabels"><g class="edgeLabel" transform="" style="opacity: 1;"><g transform="translate(0,0)" class="label"><rect rx="0" ry="0" width="0" height="0"></rect><foreignObject width="0" height="0"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><span></span></div></foreignObject></g></g><g class="edgeLabel" transform="" style="opacity: 1;"><g transform="translate(0,0)" class="label"><rect rx="0" ry="0" width="0" height="0"></rect><foreignObject width="0" height="0"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><span></span></div></foreignObject></g></g><g class="edgeLabel" transform="" style="opacity: 1;"><g transform="translate(0,0)" class="label"><rect rx="0" ry="0" width="0" height="0"></rect><foreignObject width="0" height="0"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><span></span></div></foreignObject></g></g><g class="edgeLabel" transform="" style="opacity: 1;"><g transform="translate(0,0)" class="label"><rect rx="0" ry="0" width="0" height="0"></rect><foreignObject width="0" height="0"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><span></span></div></foreignObject></g></g></g><g class="nodes"><g class="node default" id="flowchart-OutputStream-879" transform="translate(304.11328125,55.5)" style="opacity: 1;"><rect rx="0" ry="0" x="-59.8046875" y="-22.5" width="119.609375" height="45" class="label-container"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-49.8046875,-12.5)"><foreignObject width="99.609375" height="25"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;">OutputStream</div></foreignObject></g></g></g><g class="node default" id="flowchart-FilterOutputStream-878" transform="translate(203.9765625,150.5)" style="opacity: 1;"><rect rx="0" ry="0" x="-77.578125" y="-22.5" width="155.15625" height="45" class="label-container"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-67.578125,-12.5)"><foreignObject width="135.15625" height="25"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;">FilterOutputStream</div></foreignObject></g></g></g><g class="node default" id="flowchart-PrintStream-880" transform="translate(107.90625,245.5)" style="opacity: 1;"><rect rx="0" ry="0" x="-52.234375" y="-22.5" width="104.46875" height="45" class="label-container"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-42.234375,-12.5)"><foreignObject width="84.46875" height="25"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;">PrintStream</div></foreignObject></g></g></g><g class="node default" id="flowchart-FileOutputStream-882" transform="translate(408.7890625,150.5)" style="opacity: 1;"><rect rx="0" ry="0" x="-72.6953125" y="-22.5" width="145.390625" height="45" class="label-container"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-62.6953125,-12.5)"><foreignObject width="125.390625" height="25"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;">FileOutputStream</div></foreignObject></g></g></g><g class="node default" id="flowchart-BufferedOutputStream-884" transform="translate(300.046875,245.5)" style="opacity: 1;"><rect rx="0" ry="0" x="-89.90625" y="-22.5" width="179.8125" height="45" class="label-container"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-79.90625,-12.5)"><foreignObject width="159.8125" height="25"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;">BufferedOutputStream</div></foreignObject></g></g></g></g></g></g></svg></div><p><span>À noter qu&#39;on a ajouté </span><code>PrintStream</code><span> qui ajoute </span><code>print</code><span>, </span><code>printf</code><span> et </span><code>println</code><span> qui représente les &quot;sorties standardes&quot;.</span></p><h5 id='gestion-de-ressources'><span>Gestion de ressources</span></h5><ul><li><p><span>Il est important d&#39;appeler </span><code>close()</code><span> à la fin de chaque utilisation de flot</span></p></li><li><p><span>Cela peut se faire plus automatiquement à l&#39;aide d&#39;un </span><em><span>try-with-resource</span></em><span>:</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">try</span> (<span class="cm-variable">InputStream</span> <span class="cm-variable">s</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">FileInputStream</span>(<span class="cm-variable">…</span>)) {</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable">System</span>.<span class="cm-variable">out</span>.<span class="cm-variable">println</span>(<span class="cm-variable">s</span>.<span class="cm-variable">read</span>());</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 66px;"></div><div class="CodeMirror-gutters" style="display: none; height: 66px;"></div></div></div></pre><p><span>À la fin de ce bloc, </span><code>close()</code><span> est appelé automatiquement.</span>
⚠️<span> Pour que cela fonctionne, il faut que la classe utilisée implémente l&#39;interface </span><code>AutoCloseable</code><span>.</span></p></li></ul><h3 id='représentationencodage-des-caractères'><span>Représentation/encodage des caractères</span></h3><p><span>On représente les caractères sous forme binaire afin de pouvoir les interpréter. Il faut donc pouvoir stocker tous les caractères du monde dans une représentation commune.</span></p><h5 id='standard-a----ascii-et-ses-extensions'><span>Standard A – ASCII et ses extensions</span></h5><figure><table><thead><tr><th><span>Nom</span></th><th><span>Bits par caractère</span></th><th><span>Nombre de caractère possibles</span></th><th><span>Notes</span></th></tr></thead><tbody><tr><td><span>ASCII</span></td><td><span>7</span></td><td><span>2</span><sup><span>7</span></sup><span> = 128</span></td><td><span>pas adapté pour les non-anglophones</span></td></tr><tr><td><span>ISO 8859–1</span></td><td><span>8</span></td><td><span>2</span><sup><span>8</span></sup><span> = 256</span></td><td><span>ne permet pas de repésenter Œ, œ et €</span></td></tr><tr><td><span>ISO 8859–15</span></td><td><span>8</span></td><td><span>2</span><sup><span>8</span></sup><span> = 256</span></td><td><span>résoud le problème de 8859–1</span></td></tr><tr><td><span>Mac Roman</span></td><td><span>8</span></td><td><span>2</span><sup><span>8</span></sup><span> = 256</span></td><td><span>utilisé sur macOS</span></td></tr><tr><td><span>Windows 1251</span></td><td><span>8</span></td><td><span>2</span><sup><span>8</span></sup><span> = 256</span></td><td><span>variante de 8859–1 pour Windows</span></td></tr></tbody></table></figure><h5 id='standard-b--- unicode'><span>Standard B – Unicode</span></h5><p><span>Ce dernier permet de représenter tous les caractères possiblement représentables de l&#39;univers, avec un peu plus d&#39;un million de valeurs différentes qui peuvent être représentées. Les implémentations varient :</span></p><figure><table><thead><tr><th><span>Nom</span></th><th><span>Encodage</span></th><th><span>Exemple – </span><code>œuf</code></th></tr></thead><tbody><tr><td><span>UTF-8</span></td><td><span>1 à 4 octets par caractère</span></td><td><code>C593 75 66</code></td></tr><tr><td><span>UTF-16</span></td><td><span>2 ou 4 octets par caractère</span></td><td><code>0153 0075 0066</code></td></tr><tr><td><span>UTF-32</span></td><td><span>Taille fixe – 4 octets par caractère</span></td><td><code>00000153 00000075 00000066</code></td></tr></tbody></table></figure><p><strong><span>Dans Java</span></strong></p><p><span>Étant donné la flexibilité de UTF-8 c&#39;est le format le plus populaire pour l&#39;encodage de fichier. Lorsque Java a été conçu cependant, UTF-8 n&#39;existait pas, donc Java utilise UTF-16.</span></p><p><span>Pour montrer un émoji, on a donc besoin de deux caractères Java:</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-3">String</span> <span class="cm-variable">thumbsUp</span> <span class="cm-operator">=</span> <span class="cm-string">"\uD83D\uDC4D"</span>; &nbsp; <span class="cm-comment">// correspond à 👍</span></span></pre></div></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 22px;"></div><div class="CodeMirror-gutters" style="display: none; height: 22px;"></div></div></div></pre><h3 id='entréessorties-textuelles'><span>Entrées/sorties textuelles</span></h3><h4 id='reader'><code>Reader</code><span> </span></h4><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style=""><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">abstract</span> <span class="cm-keyword">public</span> <span class="cm-keyword">class</span> <span class="cm-def">Reader</span> {</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-comment">// Lit et retourne le prochain caractère du flot (entier entre 0 et 2^16) ou -1</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable-3">int</span> <span class="cm-variable">read</span>();</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-comment">// Lit et place en retour la chaine de garactère donnés</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable-3">int</span> <span class="cm-variable">read</span>(<span class="cm-variable-3">char</span>[] <span class="cm-variable">c</span>);</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable-3">void</span> <span class="cm-variable">close</span>();</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 198px;"></div><div class="CodeMirror-gutters" style="display: none; height: 198px;"></div></div></div></pre><h4 id='writer'><code>Writer</code></h4><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style=""><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">abstract</span> <span class="cm-keyword">public</span> <span class="cm-keyword">class</span> <span class="cm-def">Writer</span> {</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-comment">// Écrit les 16 bits de poids faible de c dans le flot (UTF-16)</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable-3">void</span> <span class="cm-variable">write</span>(<span class="cm-variable-3">int</span> <span class="cm-variable">c</span>);</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-comment">// Écrit la totalité des caractères de a dans le flot.</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable-3">void</span> <span class="cm-variable">write</span>(<span class="cm-variable-3">char</span>[] <span class="cm-variable">a</span>);</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable-3">void</span> <span class="cm-variable">close</span>();</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 198px;"></div><div class="CodeMirror-gutters" style="display: none; height: 198px;"></div></div></div></pre><p>&nbsp;</p><h2 id='4-immuabilité'><em><span>4.</span></em><span> Immuabilité</span></h2><blockquote><p>🇬🇧<span> </span><strong><span>En anglais</span></strong><span> : </span><em><span>Immutability</span></em></p></blockquote><p><span>Une manière de copier les classes est de retourner à chaque fois une nouvelle instance de classe (e.g. avec </span><code>new</code><span>, apellées </span><strong><span>copies défensives</span></strong><span>), mais cela s&#39;avère particulièrement fastidieux étant donné qu&#39;on doit toujorus y penser. Une meilleure façon de coder c&#39;est d&#39;utiliser les méthodes de copie automatiques, mais qui ne </span><strong><span>modifie jamais directement les attributs d&#39;un code</span></strong><span>.</span></p><p><span>L&#39;idée de l&#39;immuabilité est d&#39;interdire la modification des attributs/de l&#39;état d&#39;une classe : un changement de valeur d&#39;attribut entraîne forcément la copie d&#39;un objet en une nouvelle instance.</span></p><p><span>Par exemple, un </span><code>record</code><span> est immuable.</span></p><blockquote><h3 id='une-classe-est'><span>Une classe est</span></h3><ul><li><strong><span>immuable</span></strong><span> </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="5.462ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 2414 549" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.054ex;"><defs><path id="MJX-45-TEX-N-27FA" d="M1438 514Q1438 525 1454 525Q1459 525 1462 525T1467 525T1471 524T1473 523T1475 520T1477 517T1480 512Q1517 438 1578 381T1689 300T1785 263Q1802 258 1802 250T1793 239T1756 228T1698 204Q1554 134 1480 -12Q1476 -21 1473 -22T1458 -24Q1438 -24 1438 -17Q1438 -13 1443 0Q1478 69 1529 123L1539 133H318L328 123Q379 69 414 0Q419 -13 419 -17Q419 -24 399 -24Q388 -24 385 -23T377 -12Q332 77 253 144T72 237Q62 240 59 242T56 250T59 257T70 262T89 268T119 278T160 296Q303 366 377 512Q382 522 385 523T401 525Q419 524 419 515Q419 510 414 500Q379 431 328 377L318 367H1539L1529 377Q1496 412 1467 458T1438 514ZM274 173H1583L1593 181Q1632 211 1710 250Q1709 251 1692 259T1647 283T1593 319L1583 327H930L927 328L602 327H274L264 319Q225 289 147 250Q148 249 165 241T210 217T264 181L274 173Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mspace"></g></g><g data-mml-node="mo" transform="translate(278,0)"><use data-c="27FA" xlink:href="#MJX-45-TEX-N-27FA"></use></g><g data-mml-node="mstyle" transform="translate(2136,0)"><g data-mml-node="mspace"></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mstyle scriptlevel="0"><mspace width="0.278em"></mspace></mstyle><mo stretchy="false">⟺</mo><mstyle scriptlevel="0"><mspace width="0.278em"></mspace></mstyle></math></mjx-assistive-mml></mjx-container><script type="math/tex">\iff</script><span> ses instances ne peuvent pas changer d&#39;état une fois créées</span></li><li><strong><span>non modifiable</span></strong><span> (</span><em><span>read-only</span></em><span>) </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="5.462ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 2414 549" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.054ex;"><defs><path id="MJX-45-TEX-N-27FA" d="M1438 514Q1438 525 1454 525Q1459 525 1462 525T1467 525T1471 524T1473 523T1475 520T1477 517T1480 512Q1517 438 1578 381T1689 300T1785 263Q1802 258 1802 250T1793 239T1756 228T1698 204Q1554 134 1480 -12Q1476 -21 1473 -22T1458 -24Q1438 -24 1438 -17Q1438 -13 1443 0Q1478 69 1529 123L1539 133H318L328 123Q379 69 414 0Q419 -13 419 -17Q419 -24 399 -24Q388 -24 385 -23T377 -12Q332 77 253 144T72 237Q62 240 59 242T56 250T59 257T70 262T89 268T119 278T160 296Q303 366 377 512Q382 522 385 523T401 525Q419 524 419 515Q419 510 414 500Q379 431 328 377L318 367H1539L1529 377Q1496 412 1467 458T1438 514ZM274 173H1583L1593 181Q1632 211 1710 250Q1709 251 1692 259T1647 283T1593 319L1583 327H930L927 328L602 327H274L264 319Q225 289 147 250Q148 249 165 241T210 217T264 181L274 173Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mspace"></g></g><g data-mml-node="mo" transform="translate(278,0)"><use data-c="27FA" xlink:href="#MJX-45-TEX-N-27FA"></use></g><g data-mml-node="mstyle" transform="translate(2136,0)"><g data-mml-node="mspace"></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mstyle scriptlevel="0"><mspace width="0.278em"></mspace></mstyle><mo stretchy="false">⟺</mo><mstyle scriptlevel="0"><mspace width="0.278em"></mspace></mstyle></math></mjx-assistive-mml></mjx-container><script type="math/tex">\iff</script><span> un morceau de code ayant accès à ses instances ne peut pas appeler des méthodes modifiant son état.</span></li></ul><p>⚠️<span> On doit avoir immuable </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="4.964ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 2194 549" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.054ex;"><defs><path id="MJX-94-TEX-N-27F9" d="M1218 514Q1218 525 1234 525Q1239 525 1242 525T1247 525T1251 524T1253 523T1255 520T1257 517T1260 512Q1297 438 1358 381T1469 300T1565 263Q1582 258 1582 250T1573 239T1536 228T1478 204Q1334 134 1260 -12Q1256 -21 1253 -22T1238 -24Q1218 -24 1218 -17Q1218 -13 1223 0Q1258 69 1309 123L1319 133H70Q56 140 56 153Q56 168 72 173H1363L1373 181Q1412 211 1490 250Q1489 251 1472 259T1427 283T1373 319L1363 327H710L707 328L390 327H72Q56 332 56 347Q56 360 70 367H1319L1309 377Q1276 412 1247 458T1218 514Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mspace"></g></g><g data-mml-node="mo" transform="translate(278,0)"><use data-c="27F9" xlink:href="#MJX-94-TEX-N-27F9"></use></g><g data-mml-node="mstyle" transform="translate(1916,0)"><g data-mml-node="mspace"></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mstyle scriptlevel="0"><mspace width="0.278em"></mspace></mstyle><mo stretchy="false">⟹</mo><mstyle scriptlevel="0"><mspace width="0.278em"></mspace></mstyle></math></mjx-assistive-mml></mjx-container><script type="math/tex">\implies</script><span> non-modifiable</span></p></blockquote><p>&nbsp;</p><h4 id='définir-des-classes-immuables'><span>Définir des classes immuables</span></h4><p><span>Une classe immuable doit satisfaire les conditions suivantes:</span></p><ul><li><span>tous les attributs sont finaux (</span><code>final</code><span>), initialisés à la construction puis inchangés</span></li><li><span>toute valeur non immuable fournie au contstructeur est une copie en profondeur avant d&#39;être stockée dans un de ses attributs</span></li><li><span>aucune valeur non-immuable stockée dans un attribut peut être modifiable directement depuis l&#39;extérieur — elle doit être soit rendue immuable, soit retournée en copie profonde.</span></li></ul><h4 id='les-tableaux--- un-bémol-pour-limmuabilité'><span>Les tableaux – un bémol pour l&#39;immuabilité</span></h4><ul><li><p><span>Les tableaux standards Java (</span><code>[]</code><span>) sont toujours modifiables. Il faut donc à chaque fois faire une copie défensive avant de les retourner à l&#39;extérieur.</span></p></li><li><p><span>Avec les tableaux dynamique (héritant de </span><code>Collection</code><span>), c&#39;est plus simple :</span></p><ul><li><span>La méthode </span><code>Collections.unmodifiableList(List l)</code><span> retourne une liste non modifiable qui lance une </span><code>UnsupportedOperationException</code><span> si on essaie de la modifier</span></li><li><code>List.copyOf()</code><span> permet de faire la même chose depuis Java 10.</span></li></ul></li></ul><h4 id='bâtisseurs'><strong><span>Bâtisseurs</span></strong></h4><p><a id="builder-immutability"></a><span> On peut créer une version &quot;modifiable&quot; d&#39;une classe puis la convertir en son implémentation immuable. Cette première s&#39;appelle un </span><strong><span>bâtisseur</span></strong><span> (builder).</span></p><p><span>Suppossons par exemple que nous avons la classe </span><code>Avatar</code><span>, qui représente un avatar qui ne changera pas au cours de sa vie. Pour le construire, on utilisera la classe </span><code>AvatarBuilder</code><span> : </span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style=""><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">AvatarBuilder</span> <span class="cm-variable">ab</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">AvatarBuilder</span>();</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">ab</span>.<span class="cm-variable">setName</span>(<span class="cm-string">"Avatar 1"</span>);</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">ab</span>.<span class="cm-variable">setImage</span>(<span class="cm-string">"image.png"</span>);</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">ab</span>.<span class="cm-variable">setDescription</span>(<span class="cm-string">"Description"</span>);</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" class="cm-tab-wrap-hack" style="padding-right: 0.1px;"><span class="cm-variable">Avatar</span> <span class="cm-variable">a</span> <span class="cm-operator">=</span> <span class="cm-variable">ab</span>.<span class="cm-variable">toAvatar</span>();<span class="cm-tab" role="presentation" cm-text="	"> </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-comment">// Avatar(Name: "Avatar 1", Image: "Image", <span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span>Description: "desciption")</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">a</span>.<span class="cm-variable">setName</span>(); <span class="cm-tab" role="presentation" cm-text="	"> </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-comment">// RuntimeException&nbsp;–&nbsp;method not found</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 176px;"></div><div class="CodeMirror-gutters" style="display: none; height: 176px;"></div></div></div></pre><h5 id='règles-lorsquon-crée-des-bâtisseurs'><span>Règles lorsqu&#39;on crée des bâtisseurs…</span></h5><ul><li><span>nommez la classe du bâtisseur </span><code>Builder</code><span>,</span></li><li><span>imbriquez-la statiquement dans la classe dont elle bâtit des instances,</span></li><li><span>nommez sa méthode de construction </span><code>build</code><span>, et</span></li><li><span>retournez </span><code>this</code><span> de toutes les méthodes de modification pour permettre les appels chaînés.</span></li></ul><h2 id='5-généricité'><em><span>5.</span></em><span> Généricité</span></h2><p><span>On peut utiliser le concept de cellules lorsqu&#39;on ne connaît pas le type d&#39;un certain objet qu&#39;on aimerait stocker.</span></p><p><span>Rappelons l&#39;hiérarchie des types:</span></p><div class="md-diagram-panel md-fences-adv-panel"><svg id="mermaidChart61" width="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" height="164" style="max-width: 275.59375px;" viewBox="-8 -8 275.59375 164"><style>#mermaidChart61{font-family:sans-serif;font-size:16px;fill:#333;}#mermaidChart61 .error-icon{fill:#552222;}#mermaidChart61 .error-text{fill:#552222;stroke:#552222;}#mermaidChart61 .edge-thickness-normal{stroke-width:2px;}#mermaidChart61 .edge-thickness-thick{stroke-width:3.5px;}#mermaidChart61 .edge-pattern-solid{stroke-dasharray:0;}#mermaidChart61 .edge-pattern-dashed{stroke-dasharray:3;}#mermaidChart61 .edge-pattern-dotted{stroke-dasharray:2;}#mermaidChart61 .marker{fill:#333333;}#mermaidChart61 .marker.cross{stroke:#333333;}#mermaidChart61 svg{font-family:sans-serif;font-size:16px;}#mermaidChart61 .label{font-family:sans-serif;color:#333;}#mermaidChart61 .label text{fill:#333;}#mermaidChart61 .node rect,#mermaidChart61 .node circle,#mermaidChart61 .node ellipse,#mermaidChart61 .node polygon,#mermaidChart61 .node path{fill:#ECECFF;stroke:#9370DB;stroke-width:1px;}#mermaidChart61 .node .label{text-align:center;}#mermaidChart61 .node.clickable{cursor:pointer;}#mermaidChart61 .arrowheadPath{fill:#333333;}#mermaidChart61 .edgePath .path{stroke:#333333;stroke-width:1.5px;}#mermaidChart61 .flowchart-link{stroke:#333333;fill:none;}#mermaidChart61 .edgeLabel{background-color:#e8e8e8;text-align:center;}#mermaidChart61 .edgeLabel rect{opacity:0.5;background-color:#e8e8e8;fill:#e8e8e8;}#mermaidChart61 .cluster rect{fill:#ffffde;stroke:#aaaa33;stroke-width:1px;}#mermaidChart61 .cluster text{fill:#333;}#mermaidChart61 div.mermaidTooltip{position:absolute;text-align:center;max-width:200px;padding:2px;font-family:sans-serif;font-size:12px;background:hsl(80,100%,96.2745098039%);border:1px solid #aaaa33;border-radius:2px;pointer-events:none;z-index:100;}#mermaidChart61:root{--mermaid-font-family:sans-serif;}#mermaidChart61:root{--mermaid-alt-font-family:sans-serif;}#mermaidChart61 flowchart{fill:apa;}</style><g><g class="output"><g class="clusters"></g><g class="edgePaths"><g class="edgePath LS-Date LE-Object" id="L-Date-Object" style="opacity: 1;"><path class="path" d="M34.8984375,103L34.8984375,78L109.5703125,45.09631830700101" marker-end="url(#arrowhead1486)" style="fill:none"></path><defs><marker id="arrowhead1486" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" class="arrowheadPath" style="stroke-width: 1px; stroke-dasharray: 1px, 0px;"></path></marker></defs></g><g class="edgePath LS-String LE-Object" id="L-String-Object" style="opacity: 1;"><path class="path" d="M142.6953125,103L142.6953125,78L142.6953125,53" marker-end="url(#arrowhead1487)" style="fill:none"></path><defs><marker id="arrowhead1487" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" class="arrowheadPath" style="stroke-width: 1px; stroke-dasharray: 1px, 0px;"></path></marker></defs></g><g class="edgePath LS-A LE-Object" id="L-A-Object" style="opacity: 1;"><path class="path" d="M241.59375,103L241.59375,78L175.8203125,46.409629512599736" marker-end="url(#arrowhead1488)" style="fill:none"></path><defs><marker id="arrowhead1488" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z" class="arrowheadPath" style="stroke-width: 1px; stroke-dasharray: 1px, 0px;"></path></marker></defs></g></g><g class="edgeLabels"><g class="edgeLabel" transform="" style="opacity: 1;"><g transform="translate(0,0)" class="label"><rect rx="0" ry="0" width="0" height="0"></rect><foreignObject width="0" height="0"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><span></span></div></foreignObject></g></g><g class="edgeLabel" transform="" style="opacity: 1;"><g transform="translate(0,0)" class="label"><rect rx="0" ry="0" width="0" height="0"></rect><foreignObject width="0" height="0"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><span></span></div></foreignObject></g></g><g class="edgeLabel" transform="" style="opacity: 1;"><g transform="translate(0,0)" class="label"><rect rx="0" ry="0" width="0" height="0"></rect><foreignObject width="0" height="0"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;"><span></span></div></foreignObject></g></g></g><g class="nodes"><g class="node default" id="flowchart-Date-893" transform="translate(34.8984375,125.5)" style="opacity: 1;"><rect rx="0" ry="0" x="-26.8984375" y="-22.5" width="53.796875" height="45" class="label-container"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-16.8984375,-12.5)"><foreignObject width="33.796875" height="25"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;">Date</div></foreignObject></g></g></g><g class="node default" id="flowchart-Object-894" transform="translate(142.6953125,30.5)" style="opacity: 1;"><rect rx="0" ry="0" x="-33.125" y="-22.5" width="66.25" height="45" class="label-container"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-23.125,-12.5)"><foreignObject width="46.25" height="25"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;">Object</div></foreignObject></g></g></g><g class="node default" id="flowchart-String-895" transform="translate(142.6953125,125.5)" style="opacity: 1;"><rect rx="0" ry="0" x="-30.8984375" y="-22.5" width="61.796875" height="45" class="label-container"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-20.8984375,-12.5)"><foreignObject width="41.796875" height="25"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;">String</div></foreignObject></g></g></g><g class="node default" id="flowchart-A-897" transform="translate(241.59375,125.5)" style="opacity: 1;"><rect rx="0" ry="0" x="-18" y="-22.5" width="36" height="45" class="label-container"></rect><g class="label" transform="translate(0,0)"><g transform="translate(-8,-12.5)"><foreignObject width="16" height="25"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; white-space: nowrap;">…</div></foreignObject></g></g></g></g></g></g></svg></div><p><span>Or, si on utilise un conteneur pour stoquer des types différents, on n&#39;aura pas accès aux méthodes spécifiques des objets spécifique, étant donné qu&#39;on n&#39;a que l&#39;accès à l&#39;abstraction </span><code>Object</code><span>. On pourrait alors faire des casts de type, mais cela s&#39;avère très fastidieux.</span></p><h3 id='classe-générique'><span>Classe générique</span></h3><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style=""><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">public</span> <span class="cm-keyword">final</span> <span class="cm-keyword">class</span> <span class="cm-def">Cell</span><span class="cm-operator">&lt;</span><span class="cm-variable">E</span><span class="cm-operator">&gt;</span> {</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-keyword">private</span> <span class="cm-keyword">final</span> <span class="cm-variable">E</span> <span class="cm-variable">object</span>;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-keyword">public</span> <span class="cm-variable">Cell</span>(<span class="cm-variable">E</span> <span class="cm-variable">object</span>) {</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">this</span>.<span class="cm-variable">object</span> <span class="cm-operator">=</span> <span class="cm-variable">object</span>;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  }</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-keyword">public</span> <span class="cm-variable">E</span> <span class="cm-variable">get</span>() {</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">object</span>;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  }</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 242px;"></div><div class="CodeMirror-gutters" style="display: none; height: 242px;"></div></div></div></pre><ul><li><p><span>Le </span><code>&lt;E&gt;</code><span> représente le </span><strong><span>type</span></strong><span> de la cellule (on l&#39;appelle </span><strong><span>paramètre de type</span></strong><span>). Lorsqu&#39;on crée une nouvelle instance de la classe </span><code>Cell</code><span>, on peut donc stoquer des objets de types différents:</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style=""><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Cell</span><span class="cm-operator">&lt;</span><span class="cm-variable-3">String</span><span class="cm-operator">&gt;</span> <span class="cm-variable">s</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">Cell</span><span class="cm-operator">&lt;&gt;</span> (<span class="cm-string">"String"</span>);</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Cell</span><span class="cm-operator">&lt;</span><span class="cm-variable">Date</span><span class="cm-operator">&gt;</span> <span class="cm-variable">d</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">Cell</span><span class="cm-operator">&lt;&gt;</span> (<span class="cm-variable">Date</span>.<span class="cm-variable">today</span>());</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">System</span>.<span class="cm-variable">out</span>.<span class="cm-variable">println</span>(<span class="cm-variable">s</span>.<span class="cm-variable">get</span>()); <span class="cm-comment">// --&gt; String</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">System</span>.<span class="cm-variable">out</span>.<span class="cm-variable">println</span>(<span class="cm-variable">s</span>.<span class="cm-variable">get</span>().<span class="cm-variable">year</span>()) <span class="cm-comment">// --&gt; 2022</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 110px;"></div><div class="CodeMirror-gutters" style="display: none; height: 110px;"></div></div></div></pre></li><li><p><span>On peut tout de même combiner plusieurs éléments dans la déclaration de classe:</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style=""><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">public</span> <span class="cm-keyword">final</span> <span class="cm-keyword">class</span> <span class="cm-def">Pair</span><span class="cm-operator">&lt;</span><span class="cm-variable">F</span>, <span class="cm-variable">S</span><span class="cm-operator">&gt;</span> {</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-keyword">private</span> <span class="cm-keyword">final</span> <span class="cm-variable">F</span> <span class="cm-variable">first</span>;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-keyword">private</span> <span class="cm-keyword">final</span> <span class="cm-variable">S</span> <span class="cm-variable">second</span>;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable">…</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">public</span> <span class="cm-keyword">static</span> <span class="cm-variable-3">void</span> <span class="cm-def">main</span>(<span class="cm-variable-3">String</span>[] <span class="cm-variable">args</span>) {</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable">Pair</span><span class="cm-operator">&lt;</span><span class="cm-variable-3">String</span>, <span class="cm-variable">Date</span><span class="cm-operator">&gt;</span> <span class="cm-variable">message</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">Pair</span><span class="cm-operator">&lt;&gt;</span> (<span class="cm-string">"The year is "</span>, <span class="cm-number">2022</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 220px;"></div><div class="CodeMirror-gutters" style="display: none; height: 220px;"></div></div></div></pre></li><li><p><span>Pour passer en argument un type générateur, il faut le mettre avant la déclaration de type de la signature:</span></p><div style="border-width: 1px 1px 0px 1px; border-style: solid; border-color: black; border-radius: 5px 5px 0 0; width: 100px; text-align:center;"><b>Cell.java</b></div><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">public</span> <span class="cm-operator">&lt;</span><span class="cm-variable">E</span><span class="cm-operator">&gt;</span> <span class="cm-variable">Pair</span><span class="cm-operator">&lt;</span><span class="cm-variable">E</span>, <span class="cm-variable">F</span><span class="cm-operator">&gt;</span> <span class="cm-variable">pairWith</span>(<span class="cm-variable">F</span> <span class="cm-variable">other</span>) {</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-keyword">return</span> <span class="cm-keyword">new</span> <span class="cm-variable">Pair</span><span class="cm-operator">&lt;</span><span class="cm-variable">E</span>, <span class="cm-variable">F</span><span class="cm-operator">&gt;</span> (<span class="cm-keyword">this</span>, <span class="cm-variable">other</span>);</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 66px;"></div><div class="CodeMirror-gutters" style="display: none; height: 66px;"></div></div></div></pre><blockquote><p><strong><span>Note</span></strong><span> – de manière générale, on n&#39;a pa besoin de spécifier le type de </span><code>F</code><span> lorsqu&#39;on fait appel à la fonction, car Java arrive à déterminer automatiquement le type à partir de l&#39;argument.</span></p></blockquote></li><li><p><span>On peut spécifier qu&#39;on accepte que une sous-classe (</span><strong><span>borne supérieure</span></strong><span>):</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">public</span> <span class="cm-keyword">final</span> <span class="cm-keyword">class</span> <span class="cm-def">Cell</span><span class="cm-operator">&lt;</span><span class="cm-variable">E</span> <span class="cm-keyword">extends</span> <span class="cm-variable-3">Number</span><span class="cm-operator">&gt;</span> { <span class="cm-variable">…</span> } </span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-comment">// dans ce cas-ci E doit être une sous-classe de Number.</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 44px;"></div><div class="CodeMirror-gutters" style="display: none; height: 44px;"></div></div></div></pre></li><li><p>⚠️<span> Les types primitifs (</span><code>int</code><span>, </span><code>char</code><span>, </span><code>byte</code><span>…) ne peuvent pas être utilisés comme types paramétrés.</span></p></li></ul><h5 id='limitations-de-la-généricité'><span>Limitations de la généricité</span></h5><ul><li><p><span>Interdiction de créer les tableaux dont les éléments ont un type générique (notamment  l&#39;utilisation du mot-clé </span><code>new</code><span>)</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">static</span> <span class="cm-operator">&lt;</span><span class="cm-variable">T</span><span class="cm-operator">&gt;</span> <span class="cm-variable">T</span>[] <span class="cm-def">newArray</span>(<span class="cm-variable">T</span> <span class="cm-variable">x</span>) {</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-keyword">return</span> <span class="cm-keyword">new</span> <span class="cm-variable">T</span>[]{ <span class="cm-variable">x</span> }; <span class="cm-comment">// interdit</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 66px;"></div><div class="CodeMirror-gutters" style="display: none; height: 66px;"></div></div></div></pre></li><li><p><span>Interdiction de tester les instances générique – e.g. </span><code>Cell&lt;T&gt; instanceof Cell&lt;String&gt;</code></p></li><li><p><span>Transtypages ne sont pas sûrs – Java ne vérifie pas explicitement le transtypage des types paramétrés, e.g.</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Cell</span><span class="cm-operator">&lt;</span><span class="cm-variable-3">Integer</span><span class="cm-operator">&gt;</span> <span class="cm-variable">c</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">Cell</span><span class="cm-operator">&lt;&gt;</span>(<span class="cm-number">1</span>);</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable-3">Object</span> <span class="cm-variable">o</span> <span class="cm-operator">=</span> <span class="cm-variable">c</span>;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Cell</span><span class="cm-operator">&lt;</span><span class="cm-variable-3">String</span><span class="cm-operator">&gt;</span> <span class="cm-variable">c2</span> <span class="cm-operator">=</span> (<span class="cm-variable">Cell</span><span class="cm-operator">&lt;</span><span class="cm-variable-3">String</span><span class="cm-operator">&gt;</span>)<span class="cm-variable">o</span>;</span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 66px;"></div><div class="CodeMirror-gutters" style="display: none; height: 66px;"></div></div></div></pre><p><span>ne lève pas d&#39;exception alors qu&#39;il devrait en lever une.</span></p></li><li><p><span>Une classe définisant une exception ne peut pas être générique – e.g.</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">InvalidException</span><span class="cm-operator">&lt;</span><span class="cm-variable">T</span><span class="cm-operator">&gt;</span> <span class="cm-keyword">extends</span> <span class="cm-variable">Exception</span> {} <span class="cm-comment">// interdit</span></span></pre></div></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 22px;"></div><div class="CodeMirror-gutters" style="display: none; height: 22px;"></div></div></div></pre><p>&nbsp;</p></li></ul><h2 id='6-collections'><em><span>6.</span></em><span> Collections</span></h2><p><span>On ne connait pas forcément la taille d&#39;un tableau d&#39;éléments que nous désirons stocker. Pour cela il nous faut donc un nouveau type de tableau appelé une collection. Il existe plusieurs sous-types de collections:</span></p><p><img src="/Users/julian/Library/Application Support/typora-user-images/image-20220409161028455.png" alt="image-20220409161028455" style="zoom:50%;" /></p><figure><table><thead><tr><th><span>Nom</span></th><th><span>Nom anglais</span></th><th><span>Ordre</span></th><th><span>Doublons</span></th></tr></thead><tbody><tr><td><span>Listes</span></td><td><span>List</span></td><td><span>Oui</span></td><td><span>Oui</span></td></tr><tr><td><span>Ensembles</span></td><td><span>Set</span></td><td><span>Non</span></td><td><span>Non</span></td></tr><tr><td><span>Tables associatives </span><br><em><span>(Association clé-valeurs)</span></em></td><td><span>Map</span></td><td><span>Oui</span></td><td><span>Non</span></td></tr></tbody></table></figure><h5 id='modifiabilité'><span>Modifiabilité </span></h5><p><span>Une collection est toujours soit</span></p><ul><li><strong><span>modifiable</span></strong><span> – on peut modifier la collection à l&#39;aide de </span><code>add</code><span>, </span><code>remove</code><span>… (méthodes dites </span><strong><span>optionnelles</span></strong><span>)</span></li><li><strong><span>non-modifiable</span></strong><span> – toutes les méthodes optionnelles lèvent une </span><code>UnsupportedOperationException</code></li></ul><h3 id='mises-en-œuvre'><span>Mises en œuvre</span></h3><p><img src="/Users/julian/Library/Application Support/typora-user-images/image-20220409123540350.png" referrerpolicy="no-referrer" alt="image-20220409123540350"><span> </span></p><h4 id='listes-1'><span>Listes</span></h4><p><span>On peut représenter une liste de plusieures façons:</span></p><figure><table><thead><tr><th><span>Nom</span></th><th><span>Implém. Java</span></th><th><span>Description</span></th><th><code>add()</code><span> </span><code>remove()</code></th><th><code>get()</code><span> </span><code>set()</code></th></tr></thead><tbody><tr><td><span>Tableau-liste</span></td><td><code>ArrayList</code></td><td><span>accès aléatoire aux éléments</span></td><td><span>O(</span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.025ex;"><defs><path id="MJX-38-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D45B" xlink:href="#MJX-38-TEX-I-1D45B"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>n</mi></math></mjx-assistive-mml></mjx-container><script type="math/tex">n</script><span>)</span></td><td><span>O(</span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.507ex" role="img" focusable="false" viewBox="0 -666 500 666" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: 0px;"><defs><path id="MJX-37-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><use data-c="31" xlink:href="#MJX-37-TEX-N-31"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>1</mn></math></mjx-assistive-mml></mjx-container><script type="math/tex">1</script><span>)</span></td></tr><tr><td><span>Liste chaînée</span></td><td><code>LinkedList</code></td><td><span>accès séquentiel aux éléments</span></td><td><span>O(</span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.507ex" role="img" focusable="false" viewBox="0 -666 500 666" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: 0px;"><defs><path id="MJX-37-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><use data-c="31" xlink:href="#MJX-37-TEX-N-31"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mn>1</mn></math></mjx-assistive-mml></mjx-container><script type="math/tex">1</script><span>)</span></td><td><span>O(</span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.025ex;"><defs><path id="MJX-38-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D45B" xlink:href="#MJX-38-TEX-I-1D45B"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>n</mi></math></mjx-assistive-mml></mjx-container><script type="math/tex">n</script><span>)</span></td></tr></tbody></table></figure><p><span>À noter que les compléxités ne sont valables que dans des cas précis.</span></p><h3 id='vues-sur-une-sous-liste'><span>Vues sur une sous-liste</span></h3><p><img src="/Users/julian/Library/Application Support/typora-user-images/image-20220409162641391.png" alt="image-20220409162641391" style="zoom:50%;" /></p><ul><li><p><span>On peut traiter une plus petite partie d&#39;une liste en utlisant la méthode </span><code>subList(int f, int t)</code><span> qui retourne une &quot;sous-liste&quot; de cette dernière allant de l&#39;indice </span><code>f</code><span> à </span><code>t</code><span>.</span></p><ul><li><span>Celle-ci enregistre des changements directement dans la liste d&#39;origine.</span></li></ul></li><li><p><span>Les vues peuvent aussi être non-modifiables : </span><code>Collections.unmodifiableList(List&lt;T&gt; l)</code><span> permet d&#39;obtenir une vue de la liste qui change si la liste originale est modifiée mais elle même ne peut pas influencer la liste.</span></p></li></ul><h3 id='parcourir-les-éléments---- linterface-iterable'><span>Parcourir les éléments  – l&#39;interface </span><code>Iterable</code></h3><ul><li><p><span>Pour parcourir tous les éléments d&#39;une liste, on recommande d&#39;utiliser une boucle </span><code>for (each : )</code><span>. Cela est possible grâce à l&#39;interface </span><code>Iterable</code><span> que les listes implémentent.</span></p></li><li><p><span>Si on doit modifier les éléments, plutôt que d&#39;utiliser la méthode </span><code>get()</code><span>, il est préférable d&#39;utiliser un </span><code>Iterator</code><span> car cela permet de choisir la méthode d&#39;accès la plus efficace.</span></p><ul><li><span>On peut l&#39;obtenir en appelant la méthode </span><code>iterator()</code><span> sur l&#39;instance en question.</span></li><li><span>Ensuite dans une boucle while on peut utiliser </span><code>hasNext()</code><span> pour confirmer la présence d&#39;un prochain élément et utiliser la méthode </span><code>next()</code><span> pour obtenir le prochain élément.</span></li><li><span>Si l&#39;on souhaite supprimer cet élément, on peut utiliser la méthode </span><code>remove()</code><span>.</span></li></ul></li><li><p><span>Les itérateurs de listes possèdent quelques méthodes de plus : </span></p><ul><li><code>hasPrevious</code><span> et </span><code>previous</code><span> pour aller en arrière</span></li><li><code>nextIndex</code><span> et </span><code>previousIndex</code><span> pour les éléments voisins de l&#39;itérateiur </span></li><li><code>add</code><span> pour insérer un élément à l&#39;endroit où est l&#39;itérateur</span></li><li><code>set</code><span> pour changer l&#39;élément désigné par l&#39;itérateur</span></li></ul></li></ul><h3 id='queues'><code>Queues</code></h3><div style="display: flex; align-items:center; justify-content:center;">
  <svg xmlns:xl="http://www.w3.org/1999/xlink" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="53.358274 22.188982 250.44885 185.72836" width="250.44885" height="185.72836">
  <defs>
    <font-face font-family="Avenir" font-size="16" panose-1="2 11 5 3 2 2 3 2 2 4" units-per-em="1000" underline-position="-75" underline-thickness="50" slope="0" x-height="500" cap-height="700" ascent="899.9939" descent="-276.00098" font-weight="400">
      <font-face-src>
        <font-face-name name="PTSans-Regular"></font-face-name>
      </font-face-src>
    </font-face>
    <marker orient="auto" overflow="visible" markerUnits="strokeWidth" id="FilledArrow_Marker" stroke-linejoin="miter" stroke-miterlimit="10" viewBox="-1 -4 10 8" markerWidth="10" markerHeight="8" color="black">
      <g>
        <path d="M 8 0 L 0 -3 L 0 3 Z" fill="currentColor" stroke="currentColor" stroke-width="1"></path>
      </g>
    </marker>
    <marker orient="auto" overflow="visible" markerUnits="strokeWidth" id="FilledArrow_Marker_2" stroke-linejoin="miter" stroke-miterlimit="10" viewBox="-9 -4 10 8" markerWidth="10" markerHeight="8" color="black">
      <g>
        <path d="M -8 0 L 0 3 L 0 -3 Z" fill="currentColor" stroke="currentColor" stroke-width="1"></path>
      </g>
    </marker>
  </defs>
  <metadata> Produced by OmniGraffle 7.18.1\n2021-01-05 09:12:47 +0000</metadata>
  <g id="Canevas_1" stroke-dasharray="none" fill-opacity="1" stroke="none" fill="none" stroke-opacity="1">
    <title>Canevas 1</title>
    <g id="Canevas_1_Calque_1">
      <title>Calque 1</title>
      <g id="Graphic_20">
        <text transform="translate(143.0227 30.023628)" fill="black">
          <tspan font-family="Avenir" font-size="16" font-weight="400" fill="black" x="0" y="14">pile (LIFO)</tspan>
        </text>
      </g>
      <g id="Graphic_21">
        <text transform="translate(145.1747 92.87403)" fill="black">
          <tspan font-family="Avenir" font-size="16" font-weight="400" fill="black" x="0" y="14">file (FIFO)</tspan>
        </text>
      </g>
      <g id="Graphic_22">
        <text transform="translate(157.5427 155.23624)" fill="black">
          <tspan font-family="Avenir" font-size="16" font-weight="400" fill="black" x="8739676e-19" y="14">deque</tspan>
        </text>
      </g>
      <g id="Line_25">
        <line x1="272.126" y1="58.527566" x2="290.57247" y2="58.527566" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"></line>
      </g>
      <g id="Group_49">
        <g id="Graphic_55">
          <rect x="85.03938" y="51.02363" width="28.34646" height="28.34646" fill="white"></rect>
          <rect x="85.03938" y="51.02363" width="28.34646" height="28.34646" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"></rect>
          <text transform="translate(90.03938 55.24483)" fill="black">
            <tspan font-family="Avenir" font-size="16" font-weight="400" fill="black" x="4.81323" y="14">1</tspan>
          </text>
        </g>
        <g id="Graphic_54">
          <rect x="124.72442" y="51.02363" width="28.34646" height="28.34646" fill="white"></rect>
          <rect x="124.72442" y="51.02363" width="28.34646" height="28.34646" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"></rect>
          <text transform="translate(129.72442 55.24483)" fill="black">
            <tspan font-family="Avenir" font-size="16" font-weight="400" fill="black" x="4.81323" y="14">2</tspan>
          </text>
        </g>
        <g id="Graphic_53">
          <rect x="164.40947" y="51.02363" width="28.34646" height="28.34646" fill="white"></rect>
          <rect x="164.40947" y="51.02363" width="28.34646" height="28.34646" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"></rect>
          <text transform="translate(169.40947 55.24483)" fill="black">
            <tspan font-family="Avenir" font-size="16" font-weight="400" fill="black" x="4.81323" y="14">3</tspan>
          </text>
        </g>
        <g id="Graphic_52">
          <rect x="204.0945" y="51.02363" width="28.34646" height="28.34646" fill="white"></rect>
          <rect x="204.0945" y="51.02363" width="28.34646" height="28.34646" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"></rect>
          <text transform="translate(209.0945 55.24483)" fill="black">
            <tspan font-family="Avenir" font-size="16" font-weight="400" fill="black" x="4.81323" y="14">4</tspan>
          </text>
        </g>
        <g id="Graphic_51">
          <rect x="243.77955" y="51.02363" width="28.34646" height="28.34646" fill="white"></rect>
          <rect x="243.77955" y="51.02363" width="28.34646" height="28.34646" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"></rect>
          <text transform="translate(248.77955 55.24483)" fill="black">
            <tspan font-family="Avenir" font-size="16" font-weight="400" fill="black" x="4.81323" y="14">5</tspan>
          </text>
        </g>
        <g id="Line_50">
          <line x1="282.026" y1="72.700796" x2="300.47247" y2="72.700796" marker-start="url(#FilledArrow_Marker_2)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"></line>
        </g>
      </g>
      <g id="Graphic_30">
        <text transform="translate(278.91703 40.58817)" fill="black">
          <tspan font-family="Avenir" font-size="16" font-weight="400" fill="black" x="8730794e-19" y="14">±</tspan>
        </text>
      </g>
      <g id="Group_39">
        <g id="Graphic_48">
          <rect x="85.03938" y="113.62993" width="28.34646" height="28.34646" fill="white"></rect>
          <rect x="85.03938" y="113.62993" width="28.34646" height="28.34646" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"></rect>
          <text transform="translate(90.03938 117.85114)" fill="black">
            <tspan font-family="Avenir" font-size="16" font-weight="400" fill="black" x="4.81323" y="14">1</tspan>
          </text>
        </g>
        <g id="Graphic_47">
          <rect x="124.72442" y="113.62993" width="28.34646" height="28.34646" fill="white"></rect>
          <rect x="124.72442" y="113.62993" width="28.34646" height="28.34646" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"></rect>
          <text transform="translate(129.72442 117.85114)" fill="black">
            <tspan font-family="Avenir" font-size="16" font-weight="400" fill="black" x="4.81323" y="14">2</tspan>
          </text>
        </g>
        <g id="Graphic_46">
          <rect x="164.40947" y="113.62993" width="28.34646" height="28.34646" fill="white"></rect>
          <rect x="164.40947" y="113.62993" width="28.34646" height="28.34646" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"></rect>
          <text transform="translate(169.40947 117.85114)" fill="black">
            <tspan font-family="Avenir" font-size="16" font-weight="400" fill="black" x="4.81323" y="14">3</tspan>
          </text>
        </g>
        <g id="Graphic_45">
          <rect x="204.0945" y="113.62993" width="28.34646" height="28.34646" fill="white"></rect>
          <rect x="204.0945" y="113.62993" width="28.34646" height="28.34646" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"></rect>
          <text transform="translate(209.0945 117.85114)" fill="black">
            <tspan font-family="Avenir" font-size="16" font-weight="400" fill="black" x="4.81323" y="14">4</tspan>
          </text>
        </g>
        <g id="Graphic_44">
          <rect x="243.77955" y="113.62993" width="28.34646" height="28.34646" fill="white"></rect>
          <rect x="243.77955" y="113.62993" width="28.34646" height="28.34646" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"></rect>
          <text transform="translate(248.77955 117.85114)" fill="black">
            <tspan font-family="Avenir" font-size="16" font-weight="400" fill="black" x="4.81323" y="14">5</tspan>
          </text>
        </g>
        <g id="Line_43">
          <line x1="282.026" y1="127.80316" x2="300.47247" y2="127.80316" marker-start="url(#FilledArrow_Marker_2)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"></line>
        </g>
        <g id="Line_42">
          <line x1="66.59292" y1="127.80316" x2="85.03938" y2="127.80316" marker-start="url(#FilledArrow_Marker_2)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"></line>
        </g>
        <g id="Graphic_41">
          <text transform="translate(285.8936 109.95606)" fill="black">
            <tspan font-family="Avenir" font-size="16" font-weight="400" fill="black" x="8730794e-19" y="14">+</tspan>
          </text>
        </g>
        <g id="Graphic_40">
          <text transform="translate(71.31375 109.95606)" fill="black">
            <tspan font-family="Avenir" font-size="16" font-weight="400" fill="black" x="6545875e-19" y="14">–</tspan>
          </text>
        </g>
      </g>
      <g id="Line_33">
        <line x1="272.126" y1="183.05038" x2="290.57247" y2="183.05038" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"></line>
      </g>
      <g id="Graphic_35">
        <text transform="translate(278.91703 165.11098)" fill="black">
          <tspan font-family="Avenir" font-size="16" font-weight="400" fill="black" x="8730794e-19" y="14">±</tspan>
        </text>
      </g>
      <g id="Group_56">
        <g id="Graphic_65">
          <rect x="85.03938" y="176.23624" width="28.34646" height="28.34646" fill="white"></rect>
          <rect x="85.03938" y="176.23624" width="28.34646" height="28.34646" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"></rect>
          <text transform="translate(90.03938 180.45744)" fill="black">
            <tspan font-family="Avenir" font-size="16" font-weight="400" fill="black" x="4.81323" y="14">1</tspan>
          </text>
        </g>
        <g id="Graphic_64">
          <rect x="124.72442" y="176.23624" width="28.34646" height="28.34646" fill="white"></rect>
          <rect x="124.72442" y="176.23624" width="28.34646" height="28.34646" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"></rect>
          <text transform="translate(129.72442 180.45744)" fill="black">
            <tspan font-family="Avenir" font-size="16" font-weight="400" fill="black" x="4.81323" y="14">2</tspan>
          </text>
        </g>
        <g id="Graphic_63">
          <rect x="164.40947" y="176.23624" width="28.34646" height="28.34646" fill="white"></rect>
          <rect x="164.40947" y="176.23624" width="28.34646" height="28.34646" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"></rect>
          <text transform="translate(169.40947 180.45744)" fill="black">
            <tspan font-family="Avenir" font-size="16" font-weight="400" fill="black" x="4.81323" y="14">3</tspan>
          </text>
        </g>
        <g id="Graphic_62">
          <rect x="204.0945" y="176.23624" width="28.34646" height="28.34646" fill="white"></rect>
          <rect x="204.0945" y="176.23624" width="28.34646" height="28.34646" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"></rect>
          <text transform="translate(209.0945 180.45744)" fill="black">
            <tspan font-family="Avenir" font-size="16" font-weight="400" fill="black" x="4.81323" y="14">4</tspan>
          </text>
        </g>
        <g id="Graphic_61">
          <rect x="243.77955" y="176.23624" width="28.34646" height="28.34646" fill="white"></rect>
          <rect x="243.77955" y="176.23624" width="28.34646" height="28.34646" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"></rect>
          <text transform="translate(248.77955 180.45744)" fill="black">
            <tspan font-family="Avenir" font-size="16" font-weight="400" fill="black" x="4.81323" y="14">5</tspan>
          </text>
        </g>
        <g id="Line_60">
          <line x1="282.026" y1="197.2236" x2="300.47247" y2="197.2236" marker-start="url(#FilledArrow_Marker_2)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"></line>
        </g>
        <g id="Line_59">
          <line x1="56.69292" y1="183.74018" x2="75.13938" y2="183.74018" marker-end="url(#FilledArrow_Marker)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"></line>
        </g>
        <g id="Line_58">
          <line x1="66.59292" y1="197.9134" x2="85.03938" y2="197.9134" marker-start="url(#FilledArrow_Marker_2)" stroke="black" stroke-linecap="round" stroke-linejoin="round" stroke-width="1"></line>
        </g>
        <g id="Graphic_57">
          <text transform="translate(63.483936 165.80078)" fill="black">
            <tspan font-family="Avenir" font-size="16" font-weight="400" fill="black" x="8730794e-19" y="14">±</tspan>
          </text>
        </g>
      </g>
    </g>
  </g>
</svg>
</div><ul><li><span>Pile/Stack – LIFO, comme une pile d&#39;objets dans un cafétéria</span></li><li><span>File/Queue – FIFO, une queue, comme une file d&#39;attente pour des tickets</span></li><li><span>Deque –  double-ended queue, une file où on peut ajouter et enlever à l&#39;avant tout comme à l&#39;arrière.</span></li></ul><p>&nbsp;</p><blockquote><h4 id='implémentations-à-utiliser-pour-les-collections'><strong><span>Implémentations à utiliser pour les collections</span></strong><span> </span></h4><ul><li><code>ArrayDeque</code><span> pour les piles, files et deques.</span></li><li><code>HashSet</code><span> ou </span><code>TreeSet</code><span> pour les ensembles, généralement </span><code>HashSet</code><span> sauf si les éléments doivent êtres triés dans quel cas </span><code>TreeSet</code><span> est plus judicieux.</span></li><li><code>ArrayList</code><span> ou </span><code>LinkedList</code><span> pour les listes, selon le comportement nécessaire.</span></li><li><code>HashMap</code><span> ou </span><code>TreeMap</code><span> pour les tables associatives.</span></li></ul></blockquote><h3 id='dictionnaires--tables-associatives-mapk-v'><span>Dictionnaires / tables associatives (</span><code>Map&lt;K, V&gt;</code><span>)</span></h3><ul><li><p><span>Il s&#39;agit de tables associatives qui relient un type d&#39;élement à un autre sous forme de paire (clé, valeur).</span></p></li><li><p><span>On associe à chaque </span><strong><span>clé unique</span></strong><span> une valeur (qui peut être répetée).</span></p><ul><li><span>Le type </span><code>K</code><span> représente le type des clés, généralement </span><code>Integer</code><span> ou </span><code>String</code></li><li><code>V</code><span> représente le type de la valeur associé à la clé</span></li></ul></li><li><p><span>Tables assocatives immuables – comme pour les </span><code>List</code><span> et </span><code>Set</code></p><ul><li><code>&lt;K, V&gt; Map&lt;K, V&gt; of(K k1, V v1..., K k10, V v10)</code><span> qui permet de gréer une table associative immuable avec jusqu&#39;à 10 paires clé-valeurs.</span></li><li><code>&lt;K, V&gt; Map&lt;K, V&gt; copyOf(Map&lt;K, V&gt; m )</code><span> qui retourne une nouvelle table associative immuable construite à partir de </span><code>m</code><span>.</span></li></ul></li><li><p><span>Tables associatives non-modifiables avec </span><code>Map.unmodifiableMap(Map&lt;K,V&gt;)</code></p></li></ul><p>&nbsp;</p><h2 id='7-patrons-de-construction'><em><span>7.</span></em><span> Patrons de Construction</span></h2><p><span>Des solutions/méthodes de design simples qui permettent de résoudre des problèmes récurrents.</span></p><h3 id='diagramme-de-classe'><span>Diagramme de classe</span></h3><p><span>Représentation universelle pour la modélisations de systèmes, notamment les classes en programmation.</span></p><p><img src="/Users/julian/Downloads/IMG_F8290D04D16C-1.jpeg" alt="IMG_F8290D04D16C-1" style="zoom:33%;" /></p><h5 id='relation-dassociation'><span>Relation d&#39;association</span></h5><p><span>On peut avoir plusieurs types d&#39;associations, notamment </span><em><span>un-à-un</span></em><span>, </span><em><span>un-à-plusieurs</span></em><span>, et </span><em><span>plusieurs-à-plusieurs</span></em><span>. Ces associations sont représentées soit par un numéro (</span><code>1</code><span> ou autre), soit par une étoile  </span><code>*</code><span> pour décrire un nombre indéterminé d&#39;instances associées (&quot;plusieures&quot;).</span></p><p><img src="/Users/julian/Library/Application Support/typora-user-images/image-20220409171950278.png" alt="image-20220409171950278" style="zoom:33%;" /></p><h5 id='classes-fictives'><span>Classes fictives</span></h5><p><span>Les diagrammes utilisent des bords discontinus pour représenter des classes fictives dont le nom décrit le rôle.</span></p><p>&nbsp;</p><p><img src="/Users/julian/Downloads/IMG_0182.jpg" alt="IMG_0182" style="zoom:33%;" /></p><p>&nbsp;</p><blockquote><h1 id='règle-des-classes'><span>Règle des classes</span></h1><p><span>Lorsqu&#39;on écrit une classe, il faut décider s&#39;il s&#39;agit d&#39;une classe </span></p><ul><li><em><span>héritable</span></em><span>, à rendre </span><u><span>abstraite</span></u><span>; ou bien </span></li><li><em><span>instanciable</span></em><span>, à rendre </span><u><span>finale</span></u><span>.</span></li></ul></blockquote><h3 id='types-de-patrons'><span>Types de patrons</span></h3><ul><li><p><strong><span>Builder</span></strong><span> – permet de construire des objets immuables. Voir </span><a href='#builder-immutability'><span>la section sur les bâtisseurs</span></a><span>.</span></p></li><li><p><strong><span>Decorator</span></strong><span> (a.k.a </span><em><span>wrapper</span></em><span>) – permet d&#39;augmenter la fonctionnalité d&#39;une classe en créant une nouvelle classe héritant la première mais qui la prend aussi comme attribut en ajoutant des fonctionnalités en plus.</span></p><p><span>L&#39;idée est </span><em><span>d&#39;emballer</span></em><span> la classe originale dans une sous-classe afin d&#39;éviter de changer son interface. Voir l&#39;image dessous.</span></p></li><li><p><strong><span>Composite</span></strong><span> – très similaire à Décorator, sauf que celui-ci permet de plutôt de regrouper plusieurs instances (et sous-classes) d&#39;une classe. L&#39;idée est que le composite reste du même type et donc des opérations dessus modifie directement toutes ses instances associées tout comme une sous-classe simple peut être modifée (par exemple </span><code>MultiRoute</code><span> et </span><code>SingleRoute</code><span> dans le cadre du projet JaVelo).</span></p></li></ul><blockquote><p>⭐️<span> La différence entre Composite et Decorator est minime et se résume au fait que le premier référence plusieurs objets de son propre type, le second un seul.</span></p><p><img src="/Users/julian/Library/Application Support/typora-user-images/image-20220409175419486.png" alt="image-20220409175419486" style="zoom:40%;" /></p></blockquote><ul><li><p><strong><span>Adapter</span></strong><span> – permet de changer d&#39;un type de classe à un autre, comme un adaptateur de prise électrique.</span>
<img src="/Users/julian/Library/Application Support/typora-user-images/image-20220409181800024.png" alt="image-20220409181800024" style="zoom:33%; align-self:center; text-align:center;" />
<span>Ce patron est utile lorsqu&#39;on désire utiliser une instance d&#39;une classe donnée là où on a besoin d&#39;une instance d&#39;une autre classe, car cela permet de facilement réutiliser du code sans rendre le tout </span><em><span>ad-hoc</span></em><span>.</span></p></li><li><p><strong><span>Observer</span></strong><span> – permet aux instances d&#39;une classe </span><em><span>d&#39;observer</span></em><span> d&#39;autres instances.</span>
<img src="/Users/julian/Library/Application Support/typora-user-images/image-20220409182623909.png" alt="image-20220409182623909" style="zoom:33%;" />
<span>On associe à chaque observateur un sujet, et l&#39;observateur se mettra à jour dès que le sujet change.</span></p><ul><li><span>En pratique, le sujet doit posséder une liste de ses observateurs auxquels il appelle une méthode (e.g. </span><code>update</code><span>) pour indiquer qu&#39;il s&#39;est mis à jour à ses observateurs (comme au MP2 de CS107).</span></li><li><em><span>Inconvénients</span></em><span> – le style de programmation devient impératif (non immuable) dans lequel les objets ont un état qui change au cours du temps, il rend les dépendances entre états difficiles à voir, et il peut aussi rendre observables les états qui ne devraient pas l&#39;être (</span><em><span>glitches</span></em><span>).</span></li><li><strong><span>Glitches</span></strong><span> – puisque l&#39;ordre des notifications dans lequel sont propagées aux observateurs n&#39;est pas connu, les valeurs qui dépendent d&#39;autres utilisent des fois celles du mauvais cycle de mise à jour et donc certaines valeurs peuvent être érronées par rapport à la valeur attendue.</span></li></ul></li><li><p><strong><span>Model–View–Controller (MVC)</span></strong><span> – offre une façon de créer des interfaces graphiques avec des composantes réutilisables en découplant la gestion de l&#39;interface utilisateur de la gestion de l&#39;état propre :</span>
<img src="/Users/julian/Library/Application Support/typora-user-images/image-20220409182802200.png" alt="image-20220409182802200" style="zoom:33%;" />
<span>Ce patron spécial donne une méthodolgie de conception sur le programme entier (on le désigne de </span><strong><span>patron architectural</span></strong><span>).</span></p><p><span>On distingue effectivement 3 parties importantes du patron MVC :</span></p><ul><li><strong><span>Model / modèle</span></strong><span> – gère uniquement les données de l&#39;application, n&#39;a aucune communication directe avec l&#39;utilisateur.</span></li><li><strong><span>View / vue</span></strong><span> – gère l&#39;affichage des données à l&#39;écran.</span></li><li><strong><span>Controller / contrôleur</span></strong><span> – gère les entrées de l&#39;utilisateur et le communique respectivement au modèle.</span></li></ul></li></ul><h2 id='8-interfaces-graphiques-avec-javafx'><em><span>8.</span></em><span> Interfaces graphiques avec JavaFX</span></h2><p><span>JavaFX est la bibliothèque graphique la mieux conçue de toutes pour les interfaces graphiques. Ses concepts sont très similaires pour les bibliothèques des autres langages de programmation.</span></p><h3 id='concepts-fondamentaux'><span>Concepts fondamentaux</span></h3><ul><li><p><span>Chaque interface JavaFX possède un certain nombre de </span><strong><span>nœuds</span></strong><span> (</span><em><span>nodes</span></em><span>) de différentes natures – formes géométriques, boutons et menus, conteneurs… héritant tous de la classe </span><code>Node</code><span>, qui permet de positionner les nœud dans le système de coordonnées de son parent (e.g. par translation et rotation), définir le style visuel et attacher des gestionaires d&#39;évènements.</span></p><ul><li><p><em><span>Nœuds géométriques</span></em><span> (</span><code>abstract class Shape</code><span>) — représentent des formes géométriques ou du texte.</span></p><ul><li><span>Formes géométriques simples : </span><code>Arc</code><span>, </span><code>Circle</code><span>, </span><code>Ellipse</code><span>, </span><code>Line</code><span>, </span><code>Polygon</code><span>, </span><code>Polyline</code><span>, </span><code>Rectangle</code><span>…</span></li><li><span>Courbes de Bézier : </span><code>CubicCurve</code><span>, </span><code>QuadCurve</code></li><li><span>Chemins composés d&#39;une succession d&#39;éléments simples comme des segments de lignes/courbes : </span><code>Path</code><span>, </span><code>SVGPath</code></li><li><span>Texte qui peut occuper plusieurs lignes : </span><code>Text</code></li></ul></li><li><p><em><span>Nœuds graphiques</span></em><span> — images et videos, telles que </span><code>ImageView</code><span> (affiche image), </span><code>MediaView</code><span> (vidéo), </span><code>Canvas</code><span> (image modifiable où on peut dessiner des primitives graphiques telles des lignes, rectangles…)</span></p><ul><li><span>Différence entre </span><code>Shape</code><span> et </span><code>Canvas</code><span> — les </span><code>Shape</code><span> peuvent être modifiées individuellement alors que dans un </span><code>Canvas</code><span> une fois déssinées elles ne peuvent plus être manipulées. Idée : vector (</span><code>Shape</code><span>) vs. bitmap (</span><code>Canvas</code><span>).</span></li></ul></li><li><p><em><span>Nœuds de contrôle</span></em><span> (</span><code>abstract class Control</code><span>) — composantes d&#39;interface interactives (boutons, menus, etc.)</span></p><ul><li><span>Certains sont passifs et ne présentent uniquement des informations. e.g. </span><code>Label</code><span> représente une étiquette qui indique du texte</span></li><li><code>Button</code><span>, </span><code>ToggleButton</code><span> et </span><code>RadioButton</code><span> représentent des types de boutons qui ont des fonctionalités variables</span></li><li><span>Éditeurs de valeurs atomiques (indivisibles) : </span><code>HTMLEditor</code><span>, </span><code>TextArea</code><span>, </span><code>TextField</code><span> permettent de modifier du texte tandis que </span><code>Slider</code><span> modifie une valeur continue entre deux bornes, </span><code>Spinner</code><span> un ensemble ordonné (e.g. entiers), </span><code>ChoiceBox</code><span> un choix parmi plusieurs finis et </span><code>ColorPicker</code><span> et </span><code>DatePicker</code><span> des couleurs et dates respectivement.</span></li><li><span>Éditeurs de valeurs composites : </span><code>ListView</code><span> permet de sélectionner plusieures valeurs parmis une liste, </span><code>TableView</code><span> une table de valeurs et </span><code>TreeView</code><span> des valeurs organisées en hiérarchie.</span></li></ul></li><li><p><em><span>Panneaux</span></em><span> (</span><code>class Pane</code><span>) — conteneur à des nœuds enfants et les organise spatialement d&#39;une manière spécifique (à l&#39;exception de la classe mère </span><code>Pane</code><span>). </span></p><ul><li><code>BorderPane</code><span> : cinq zones – centrale, gauche, droite, haut, bas qui peut être occupée par au plus un nœud et dont toutes les zones sauf la centrale sont dimensionée en fonction du nœud qu&#39;elles contiennent avec le reste de l&#39;espace attribué à la zone centrale</span></li><li><code>GridPane</code><span> : enfants organisés en grille, largeur et hauteur de lignes/colonnes déterminés en fonction de la taille des nœuds</span></li><li><code>StackPane</code><span> : epile les enfants les uns sur les autres</span></li><li><code>ScrollPane</code><span> : donne accès à une sous-partie d&#39;un nœud trop grand qui permet de déplacer la zone visualisée</span></li><li><code>TabPane</code><span> : possède des onglets qui affichent chacun un nœud différent</span></li><li><code>SplitPane</code><span> : divisié en plusieurs parties chacune occupée par un nœud différent qui peut être redimensionné par l&#39;utilisateur.</span></li></ul></li></ul></li><li><p><span>Les nœuds sont organisés dans le </span><strong><span>graphe de scène</span></strong><span> (</span><em><span>scene graph</span></em><span>) qui est un simple arbre dans lequel chaque nœud possède un parent.</span></p><p><img src="/Users/julian/Library/Application Support/typora-user-images/image-20220523145359934.png" referrerpolicy="no-referrer" alt="image-20220523145359934"></p><p>&nbsp;</p><ul><li><span>On doit toujours avoir un objet </span><code>Scene</code><span> de type </span><code>Stage</code><span> à la racine pour que les objets apparaissent bien à l&#39;écran.</span></li></ul></li><li><p><span>On utilise le patron </span><em><span>Observer</span></em><span> pour synchroniser les valeurs de l&#39;interface et obtenir un comportement désiré. JavaFX offre de nombreuses concepts pour ce faire :</span></p><ul><li><p><strong><span>Propriétés</span></strong><span> (</span><code>Property</code><span>) — cellule observable contenant une unique valeur qui peut être primitive (</span><code>DoubleProperty</code><span>, </span><code>IntegerProperty</code><span>…) ou d&#39;un type </span><code>T</code><span> donné (</span><code>ObjectProperty&lt;T&gt;</code><span>).</span><span>	</span></p><ul><li><span>Accessible en lecture seule (</span><code>ReadOnly…Property</code><span>) ou bien en lecture + écriture (</span><code>…Property</code><span>)</span></li><li><code>Simple…Property</code><span> est l&#39;implémentation concrète de chaque type de propriété.</span></li><li><em><span>Collections observables</span></em><span> (</span><code>javafx.collections</code><span>) : permet de créer des collections qui possède des propriétés observables, e.g. </span><code>ObservableList</code><span>. De même </span><code>FXCollections</code><span> offre des méthodes similaires à </span><code>java.util.Collections</code></li></ul></li><li><p><strong><span>Beans</span></strong><span> (</span><code>javafx.beans</code><span>) — combine plusieurs propriétés dans une classe afin de rendre chaque attribut observable. La convention JavaFX pour ces classes spéficie que :</span></p><ul><li><span>tout attribut de la classe doit être représenté par une propriété</span></li><li><span>la propriété correspondant à un attribut donné doit être accessible par une méthode </span><code>&lt;attributeName&gt;Property</code></li><li><span>la valeur stocké dans la propriété doit aussi être accessible avec </span><code>get&lt;AttributeName&gt;</code><span> (ou </span><code>is&lt;AttributeName&gt;</code><span> pour les booléens).</span></li><li><span>Si on peut accédér à la propriété en lecture + écriture, on doit aussi pouvoir modifier la propriété avec </span><code>set&lt;AttributeName&gt;</code><span>.</span></li></ul></li><li><p><strong><span>Liens</span></strong><span> — garantit que la valeur d&#39;une propriété est toujours égale à la valeur de l&#39;autre. Deux types :</span></p><ul><li><p><em><span>unidirectionnel</span></em><span> – dès que la propriété </span><code>other</code><span> passée à </span><code>this.bind(Property other)</code><span> change, </span><code>this</code><span> changera avec.</span></p></li><li><p><em><span>unidirectionnel complexe</span></em><span> – on déclare un objet de type </span><code>…Binding</code><span> qui est égale à une expression qui dépend d&#39;une ou plusieurs autres propriétés. Dans l&#39;exemple ci-dessous, si </span><code>r</code><span> change alors </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="7.646ex" height="2.007ex" role="img" focusable="false" viewBox="0 -666 3379.6 887" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.5ex;"><defs><path id="MJX-39-TEX-M-1D699" d="M89 431Q93 431 104 431T121 432Q173 432 173 401V396L182 402Q237 437 305 437Q376 437 434 378T492 217Q492 146 459 93T382 17T291 -6Q261 -6 232 5T188 26L174 37Q173 37 173 -54V-146H236Q250 -155 254 -162T258 -184Q258 -213 236 -221H27Q4 -214 4 -184Q4 -169 8 -162T27 -146H89V355H58L27 356Q4 363 4 393Q4 408 8 415T27 431H89ZM409 215Q409 269 377 315T283 361Q255 361 224 344T177 297L173 290V167Q189 124 213 97T278 70Q330 70 369 111T409 215Z"></path><path id="MJX-39-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-39-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-39-TEX-I-1D70B" d="M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z"></path><path id="MJX-39-TEX-I-1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtext"><use data-c="1D699" xlink:href="#MJX-39-TEX-M-1D699"></use></g><g data-mml-node="mo" transform="translate(802.8,0)"><use data-c="3D" xlink:href="#MJX-39-TEX-N-3D"></use></g><g data-mml-node="mn" transform="translate(1858.6,0)"><use data-c="32" xlink:href="#MJX-39-TEX-N-32"></use></g><g data-mml-node="mi" transform="translate(2358.6,0)"><use data-c="1D70B" xlink:href="#MJX-39-TEX-I-1D70B"></use></g><g data-mml-node="mi" transform="translate(2928.6,0)"><use data-c="1D45F" xlink:href="#MJX-39-TEX-I-1D45F"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mtext mathvariant="monospace">p</mtext><mo>=</mo><mn>2</mn><mi>π</mi><mi>r</mi></math></mjx-assistive-mml></mjx-container><script type="math/tex">\texttt{p} = 2 \pi r</script><span> changera aussi :</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style=""><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">DoubleProperty</span> <span class="cm-variable">r</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">SimpleDoubleProperty</span>();</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">DoubleBinding</span> <span class="cm-variable">p</span> <span class="cm-operator">=</span> <span class="cm-variable">r</span>.<span class="cm-variable">multiply</span>(<span class="cm-number">2</span><span class="cm-variable">d</span> <span class="cm-operator">*</span> <span class="cm-variable">Math</span>.<span class="cm-variable">PI</span>);</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">p</span>.<span class="cm-variable">addListener</span>((<span class="cm-variable">o</span>, <span class="cm-variable">oV</span>, <span class="cm-variable">nV</span>) <span class="cm-operator">-&gt;</span> <span class="cm-variable">System</span>.<span class="cm-variable">out</span>.<span class="cm-variable">println</span>(<span class="cm-variable">nV</span>));</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">r</span>.<span class="cm-variable">set</span>(<span class="cm-number">0.5</span>); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="cm-comment">// affiche 3.1415…</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">r</span>.<span class="cm-variable">set</span>(<span class="cm-number">1</span>); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="cm-comment">// affiche 6.2831…</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 132px;"></div><div class="CodeMirror-gutters" style="display: none; height: 132px;"></div></div></div></pre><p>&nbsp;</p></li><li><p><em><span>bidirectionnel</span></em><span> – deux propriétés s&#39;obsèrvent mutuellement : si </span><code>other</code><span> change alors </span><code>this</code><span> change aussi et si </span><code>this</code><span> change alors </span><code>other</code><span> change aussi lorsqu&#39;on lie les propriétés avec </span><code>this.bindBidirectional(other)</code></p></li></ul></li><li><p><strong><span>Gestion des événements</span></strong><span> – on définit un événement (</span><em><span>event</span></em><span>) par une interaction provoquée par un changement externe, e.g. information reçue d&#39;un serveur ou par interaction de l&#39;utilisateur</span></p><ul><li><span>Une </span><em><span>boucle événementielle</span></em><span> tourne indéfiniment jusqu&#39;à l&#39;arrêt du programme et réagit uniquement lorsqu&#39;un événement se produit. Dans JavaFX celle-ci est implicitement définie dans un fil d&#39;éxecution séparé (</span><em><span>JavaFX Application Thread</span></em><span>), le programmeur n&#39;a pas besoin de s&#39;en charger.</span></li><li><span>On définit pour chaque événement devant être traité par l&#39;application un </span><em><span>gestionnaire d&#39;évenement (event handler)</span></em><span>. Dans JavaFX cela se fait par des </span><code>EventHandler</code><span> qui sont des interfaces fonctionnelles prenant en argument une fonction lambda qui permet d&#39;exécuter du code en fonction des données de l&#39;événement qui s&#39;est produit (</span><code>abstract class Event</code><span>).</span></li></ul></li></ul></li></ul><h4 id='forme-générale-dune-application-javafx'><span>Forme générale d&#39;une application JavaFX</span></h4><p><span>Toute application JavaFX doit hériter de la classe </span><code>Application</code><span> et doit posséder une méthode </span><code>start(Stage primaryStage)</code><span>, où on fera passer à </span><code>primaryStage</code><span> la </span><code>Scene</code><span> avec ses nœuds enfants à afficher.</span></p><p><span>Afin de pouvoir directement exécuter la classe on doit de plus faire appel à la méthode JavaFX </span><code>launch</code><span> depuis la méthode statique </span><code>main</code><span> :</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java" style="break-inside: unset;"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style=""><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">public</span> <span class="cm-keyword">final</span> <span class="cm-keyword">class</span> <span class="cm-def">JavaFXApp</span> <span class="cm-keyword">extends</span> <span class="cm-variable">Application</span> {</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-keyword">public</span> <span class="cm-keyword">static</span> <span class="cm-variable-3">void</span> <span class="cm-variable">main</span>(<span class="cm-variable-3">String</span>[] <span class="cm-variable">args</span>) {</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable">launch</span>(<span class="cm-variable">args</span>);</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  }</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-meta">@Override</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-keyword">public</span> <span class="cm-variable-3">void</span> <span class="cm-variable">start</span>(<span class="cm-variable">Stage</span> <span class="cm-variable">primaryStage</span>) <span class="cm-keyword">throws</span> <span class="cm-variable">Exception</span> {</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable">Button</span> <span class="cm-variable">button</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">Button</span>(<span class="cm-string">"click me!"</span>);</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable">button</span>.<span class="cm-variable">setOnAction</span>(<span class="cm-variable">e</span> <span class="cm-operator">-&gt;</span> <span class="cm-variable">System</span>.<span class="cm-variable">out</span>.<span class="cm-variable">println</span>(<span class="cm-string">"click"</span>));</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable">Scene</span> <span class="cm-variable">scene</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">Scene</span>(<span class="cm-variable">button</span>);</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable">primaryStage</span>.<span class="cm-variable">setScene</span>(<span class="cm-variable">scene</span>);</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable">primaryStage</span>.<span class="cm-variable">show</span>();</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  }</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 330px;"></div><div class="CodeMirror-gutters" style="display: none; height: 330px;"></div></div></div></pre><h2 id='9-fonctions-lambdas'><em><span>9.</span></em><span> Fonctions Lambdas</span></h2><p><span>Il arrive fréquemment de devoir passer en paramètre à une fonction ou méthode du code à éxecuter. Pour cela on utilise des </span><strong><span>fonctions lambdas</span></strong><span>, qui sont essentiellement des fonctions sans nom que l&#39;on peut directement placer en argument.</span></p><h4 id='exemple--- les-comparateurs-comparatort'><span>Exemple – les comparateurs (</span><code>Comparator&lt;T&gt;</code><span>)</span></h4><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">public</span> <span class="cm-keyword">interface</span> <span class="cm-def">Comparator</span><span class="cm-operator">&lt;</span><span class="cm-variable">T</span><span class="cm-operator">&gt;</span> {</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">public</span> <span class="cm-keyword">abstract</span> <span class="cm-variable-3">int</span> <span class="cm-variable">compare</span> (<span class="cm-variable">T</span> <span class="cm-variable">v1</span>, <span class="cm-variable">T</span> <span class="cm-variable">v2</span>);</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 66px;"></div><div class="CodeMirror-gutters" style="display: none; height: 66px;"></div></div></div></pre><ul><li><p><span>La comparaison de deux valeurs </span><code>int compare(T v1, T v2)</code><span> doit retourner</span></p><ul><li><span>un entier négatif si </span><code>v1 &lt; v2</code></li><li><code>0</code><span> si </span><code>v1 == v2</code></li><li><span>un entier  positif si </span><code>v1 &gt; v2</code></li></ul></li><li><p><span>Pour mettre en œuvre une telle fonction, on cherche donc à instancier anonymement l&#39;interface </span><code>Comparator</code><span>. Lorsqu&#39;on appelle ainsi </span><code>sort(Comparator&lt;T&gt;)</code><span> à une </span><code>List&lt;T&gt;</code><span> on peut creer le comparateur de manières différentes :</span></p><ul><li><span>En créeant une classe anonyme avec </span><code>new Comparator&lt;Integer&gt;() {}</code><span> qui implémente sur le spot </span><code>compare</code></li><li><span>En créeant une lambda qui sert comme corps à la méthode </span><code>compare(T v1, T v2)</code><span> sachant que </span><code>Comparator</code><span> est une interface fonctionnelle.</span></li></ul><p><span>On préférera la dernière des deux options.</span></p></li></ul><h4 id='les-interfaces-fonctionnelles'><span>Les interfaces fonctionnelles</span></h4><p><span>L&#39;annotation </span><code>@FunctionalInterface</code><span> permet de définir des </span><strong><span>interfaces fonctionnelles</span></strong><span>, qui sont des interfaces possédant une seule méthode à implémenter. Ainsi l&#39;exemple ci-dessus pourrait ressembler à ceci :</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">List</span><span class="cm-operator">&lt;</span><span class="cm-variable">T</span><span class="cm-operator">&gt;</span> <span class="cm-variable">a</span> <span class="cm-operator">=</span> <span class="cm-variable">List</span>.<span class="cm-variable">of</span>(<span class="cm-variable">t1</span>, <span class="cm-variable">t2</span>)</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">a</span>.<span class="cm-variable">sort</span>((<span class="cm-variable">v1</span>, <span class="cm-variable">v2</span>) <span class="cm-operator">-&gt;</span> {<span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-comment">// sort(Comparator&lt;T&gt; comparator)</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment">// corps de la méthode compare</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">})</span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 88px;"></div><div class="CodeMirror-gutters" style="display: none; height: 88px;"></div></div></div></pre><h4 id='stucture-dune-lambda'><span>Stucture d&#39;une lambda</span></h4><blockquote><h3 id='corps-abrégé'><span>Corps abrégé</span></h3><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">(<span class="cm-variable">T</span> <span class="cm-variable">arg1</span>, <span class="cm-variable">U</span> <span class="cm-variable">arg2</span>, ...) <span class="cm-operator">-&gt;</span> <span class="cm-variable">valeurDeRetour</span></span></pre></div></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 22px;"></div><div class="CodeMirror-gutters" style="display: none; height: 22px;"></div></div></div></pre></blockquote><blockquote><h3 id='arguments-abrégés'><span>Arguments abrégés</span></h3><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">(<span class="cm-variable">arg1</span>, <span class="cm-variable">arg2</span>) <span class="cm-operator">-&gt;</span> {</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> <span class="cm-comment">// code à exécuter</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> <span class="cm-keyword">return</span> <span class="cm-variable">valeurDeRetour</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 88px;"></div><div class="CodeMirror-gutters" style="display: none; height: 88px;"></div></div></div></pre></blockquote><blockquote><h3 id='méthode-longue'><span>Méthode longue </span></h3><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">(<span class="cm-variable">T</span> <span class="cm-variable">arg1</span>, <span class="cm-variable">U</span> <span class="cm-variable">arg2</span>, ...) <span class="cm-operator">-&gt;</span> {</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> <span class="cm-comment">// code à exécuter</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> <span class="cm-keyword">return</span> <span class="cm-variable">valeurDeRetour</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 88px;"></div><div class="CodeMirror-gutters" style="display: none; height: 88px;"></div></div></div></pre></blockquote><h4 id='autres-remarques'><span>Autres remarques</span></h4><ul><li><p><strong><span>Accès à l&#39;environnement</span></strong><span> — une lambda a accès au même </span><em><span>namespace</span></em><span> que celui dans laquelle elle est défini - e.g. paramètres d&#39;une fonction mère, attributs de la classe, etc.</span></p></li><li><p><strong><span>Utilisation des lambdas</span></strong><span> — on utilise surtout des lambdas dans des situations où on aurait besoin d&#39;interface fonctionnelle :</span></p><ul><li><span>Parcours des collections itérables – </span><code>List&lt;T&gt;.forEach(Consumer&lt;T&gt; action)</code><span> prend en argument un </span><em><span>consommateur</span></em><span>, une interface fonctionnelle dont la méthode </span><code>accept(T t)</code><span> prend un argument et ne retourne rien. Cela permet d&#39;écrire une boucle </span><code>for : each</code><span> de manière très raccourcie.</span></li><li><span>Parcours des tables associatives – </span><code>Map&lt;K, V&gt;.forEach(BiConsumer&lt;K, V&gt; action)</code><span> fonctionne de la même manière mais la méthode </span><code>accept(K k, V v)</code><span> prend à la place deux arguments, le premier la clé et le second la valeur.</span></li><li><span>Ajout dans une table associative – </span><code>Map&lt;K, V&gt;.merge(K k, V v, BiConsumer&lt;K, V&gt; remapFunction)</code><span> permet de placer à la clé </span><code>k</code><span> la valeur </span><code>v</code><span> si la clé n&#39;existe pas, sinon elle y mettra la valeur retournée par </span><code>remapFunction</code><span> qui elle prend en arguments </span><code>k</code><span> et </span><code>v</code><span>.</span></li><li><span>Construction de comparateur – </span><code>&lt;T, U&gt; Comparator.comparing(Function&lt;T, U&gt; keyExtractor)</code><span> génère un </span><code>Comparator&lt;T&gt;</code><span> qui compare les valeurs en utilisant leur clé de type </span><code>U</code><span> (qui doit implémenter </span><code>Comparable</code><span>) donée par la méthode </span><code>keyExtractor</code><span>.</span></li></ul></li><li><p><strong><span>Référence de méthodes</span></strong><span> — plutôt que de passer en argument des lambda, on peut passer en argument des références de méthodes écrites, pourvu qu&#39;elles aient les arguments nécessaires à la lambda. </span></p><ul><li><p><span>Références statiques et non statique – </span><code>Class::functionName</code><span> donne la référence à la fonction </span><code>functionName</code><span> de </span><code>Class</code><span>.</span></p><ul><li><span>Si </span><code>functionName</code><span> est statique, alors la lambda produite par la référence aura le même nombre d&#39;arguments que la fonction originale.</span></li><li><span>Si elle est non statique, la lambda prendra un argument de plus que la méthode représentant le </span><em><span>récepteur</span></em><span>, l&#39;objet auquel on applique la méthode.</span></li></ul></li><li><p><span>Référence de constructeur – on peut passer </span><code>Class::new</code><span> en référence ce qui permettra d&#39;instancier automatiquement des objets. e.g. </span><code>Supplier&lt;ArrayList&lt;Integer&gt;&gt; lists = ArrayList::new</code><span> qui correspond à une classe qui fournit des </span><code>ArrayList</code><span> d&#39;entiers.</span></p></li></ul></li></ul><h2 id='10-programmation-par-flots'><b><span>10.</span></b><span> Programmation par flots</span></h2><p><strong><span>Rappel.</span></strong><span> Un </span><strong><span>flot</span></strong><span> (</span><em><span>stream</span></em><span>) est une séquence de valeurs auxquelles on accède l&#39;une après l&#39;autre, de la première à la dernière. </span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style=""><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">public</span> <span class="cm-keyword">interface</span> <span class="cm-def">Stream</span><span class="cm-operator">&lt;</span><span class="cm-variable">T</span><span class="cm-operator">&gt;</span> {</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-comment">// …méthodes</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span cm-text="" cm-zwsp="">
</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">public</span> <span class="cm-keyword">interface</span> <span class="cm-def">…Stream</span><span class="cm-operator">&lt;</span><span class="cm-variable">T</span><span class="cm-operator">&gt;</span> { <span class="cm-comment">// où … est parmi Int, Double et Long</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-comment">// …méthodes spécifiques aux int, double et long.</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 154px;"></div><div class="CodeMirror-gutters" style="display: none; height: 154px;"></div></div></div></pre><p><span>On peut utiliser les flots pour faire de la </span><strong><span>programmation par flots</span></strong><span>, qui consiste en effectuant un calcul sur des données en enchaînant des opérations simples appliquées au flot de ces données. On peut faciliter ces opérations avec les lambdas.</span></p><h3 id='méthodes-des-flots'><span>Méthodes des flots</span></h3><p><span>Il existe trois types de méthodes qui travaillent sur les flots</span></p><ol start='' ><li><p><span>méthodes </span><strong><span>sources</span></strong><span> — produisent un flot de valeurs à partir d&#39;une source (fichier, collection…).</span></p><ul><li><p><span>Générale à tous les </span><code>Stream&lt;T&gt;</code></p><ul><li><code>empty()</code><span> retourne un flot vide</span></li><li><code>of(T... vs)</code><span> retourne le flot des valeurs passées en argument</span></li><li><code>iterate(T i, UnaryOperator&lt;T&gt; f)</code><span> retourne un flot infini des applications successives de </span><code>f</code><span> à </span><code>i</code><span> — </span><code>i</code><span>, </span><code>f(i)</code><span>, </span><code>f(f(i))</code><span>, etc.</span></li></ul></li><li><p><span>Construction de flot d&#39;entiers</span></p><ul><li><code>IntStream range(int f, int t)</code><span> retourne un flot d&#39;entiers représentant </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="5.142ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2272.7 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-40-TEX-N-5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path><path id="MJX-40-TEX-M-1D68F" d="M43 395Q44 405 44 408T47 416T53 423T66 431H176V461Q176 500 182 518Q201 570 252 593T353 617Q399 614 418 593T437 548Q437 528 424 514T387 499Q365 499 353 511T338 537V541H328Q275 536 261 494Q260 490 260 460V431H327Q334 431 346 431T364 432Q392 432 404 425T416 393T405 362T365 355H327H260V76H319Q375 76 388 71T401 38Q401 27 400 23T395 12T379 1H58Q47 6 42 12T36 23T35 38Q35 65 53 73Q59 76 117 76H176V355H121H93Q64 355 54 362T43 395Z"></path><path id="MJX-40-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-40-TEX-M-1D69D" d="M25 395Q26 405 26 408T29 416T35 423T48 431H145V481L146 532Q154 547 161 550T184 554H189Q218 554 227 534Q229 529 229 480V431H405Q406 430 411 427T418 422T422 416T426 407T427 393Q427 387 427 382T424 374T421 368T417 363T413 360T408 358L405 356L317 355H229V249Q229 237 229 214T228 179Q228 126 241 98T295 70Q354 70 365 149Q366 167 375 174Q383 182 407 182H415Q438 182 446 166Q448 161 448 148Q448 84 398 39T282 -6Q226 -6 189 29T146 128Q145 134 145 247V355H96H72Q45 355 35 362T25 395Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><use data-c="5B" xlink:href="#MJX-40-TEX-N-5B"></use></g><g data-mml-node="mstyle" transform="translate(278,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mo" transform="translate(111,0)"><use data-c="5B" xlink:href="#MJX-40-TEX-N-5B"></use></g><g data-mml-node="mtext" transform="translate(389,0)"><use data-c="1D68F" xlink:href="#MJX-40-TEX-M-1D68F"></use></g><g data-mml-node="mo" transform="translate(914,0)"><use data-c="2C" xlink:href="#MJX-40-TEX-N-2C"></use></g><g data-mml-node="mtext" transform="translate(1358.7,0)"><use data-c="1D69D" xlink:href="#MJX-40-TEX-M-1D69D"></use></g><g data-mml-node="mo" transform="translate(1883.7,0)"><use data-c="5B" xlink:href="#MJX-40-TEX-N-5B"></use></g><g data-mml-node="mstyle" transform="translate(2161.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mo" transform="translate(1994.7,0)"><use data-c="5B" xlink:href="#MJX-40-TEX-N-5B"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo stretchy="false">[</mo><mstyle scriptlevel="0"><mspace width="-0.167em"></mspace></mstyle><mo stretchy="false">[</mo><mtext mathvariant="monospace">f</mtext><mo>,</mo><mtext mathvariant="monospace">t</mtext><mo stretchy="false">[</mo><mstyle scriptlevel="0"><mspace width="-0.167em"></mspace></mstyle><mo stretchy="false">[</mo></math></mjx-assistive-mml></mjx-container><script type="math/tex">[\![\texttt{f}, \texttt{t}[\![</script><span> (semi-ouvert).</span></li><li><code>IntStream rangeClosed(int f, int t)</code><span> retourne un flot d&#39;entiers représentant </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="5.142ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2272.7 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-41-TEX-N-5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path><path id="MJX-41-TEX-M-1D68F" d="M43 395Q44 405 44 408T47 416T53 423T66 431H176V461Q176 500 182 518Q201 570 252 593T353 617Q399 614 418 593T437 548Q437 528 424 514T387 499Q365 499 353 511T338 537V541H328Q275 536 261 494Q260 490 260 460V431H327Q334 431 346 431T364 432Q392 432 404 425T416 393T405 362T365 355H327H260V76H319Q375 76 388 71T401 38Q401 27 400 23T395 12T379 1H58Q47 6 42 12T36 23T35 38Q35 65 53 73Q59 76 117 76H176V355H121H93Q64 355 54 362T43 395Z"></path><path id="MJX-41-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-41-TEX-M-1D69D" d="M25 395Q26 405 26 408T29 416T35 423T48 431H145V481L146 532Q154 547 161 550T184 554H189Q218 554 227 534Q229 529 229 480V431H405Q406 430 411 427T418 422T422 416T426 407T427 393Q427 387 427 382T424 374T421 368T417 363T413 360T408 358L405 356L317 355H229V249Q229 237 229 214T228 179Q228 126 241 98T295 70Q354 70 365 149Q366 167 375 174Q383 182 407 182H415Q438 182 446 166Q448 161 448 148Q448 84 398 39T282 -6Q226 -6 189 29T146 128Q145 134 145 247V355H96H72Q45 355 35 362T25 395Z"></path><path id="MJX-41-TEX-N-5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><use data-c="5B" xlink:href="#MJX-41-TEX-N-5B"></use></g><g data-mml-node="mstyle" transform="translate(278,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mo" transform="translate(111,0)"><use data-c="5B" xlink:href="#MJX-41-TEX-N-5B"></use></g><g data-mml-node="mtext" transform="translate(389,0)"><use data-c="1D68F" xlink:href="#MJX-41-TEX-M-1D68F"></use></g><g data-mml-node="mo" transform="translate(914,0)"><use data-c="2C" xlink:href="#MJX-41-TEX-N-2C"></use></g><g data-mml-node="mtext" transform="translate(1358.7,0)"><use data-c="1D69D" xlink:href="#MJX-41-TEX-M-1D69D"></use></g><g data-mml-node="mo" transform="translate(1883.7,0)"><use data-c="5D" xlink:href="#MJX-41-TEX-N-5D"></use></g><g data-mml-node="mstyle" transform="translate(2161.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mo" transform="translate(1994.7,0)"><use data-c="5D" xlink:href="#MJX-41-TEX-N-5D"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo stretchy="false">[</mo><mstyle scriptlevel="0"><mspace width="-0.167em"></mspace></mstyle><mo stretchy="false">[</mo><mtext mathvariant="monospace">f</mtext><mo>,</mo><mtext mathvariant="monospace">t</mtext><mo stretchy="false">]</mo><mstyle scriptlevel="0"><mspace width="-0.167em"></mspace></mstyle><mo stretchy="false">]</mo></math></mjx-assistive-mml></mjx-container><script type="math/tex">[\![\texttt{f}, \texttt{t}]\!]</script><span> (fermé).</span></li></ul></li><li><p><span>Bâtisseur — </span><code>static &lt;T&gt; Stream.Builder&lt;T&gt; Stream.builder()</code><span> retourne un </span><code>Stream.Builder&lt;T&gt;</code><span> qui permet de bâtir un </span><code>Stream&lt;T&gt;</code><span> en ajoutant une par une les valeurs :</span></p><ul><li><code>Stream.Builder&lt;T&gt; add(T t)</code><span> ajoute </span><code>t</code><span> au flot en construction et retourne le constructeur.</span></li><li><code>Stream&lt;T&gt; build()</code><span> construit et retourne le flot des éléments ajoutés, ce qui rend ensuite le bâtisseur inutilisable.</span></li></ul></li><li><p><span>La méthode d&#39;instance </span><code>&lt;? super Collection&gt;.stream()</code><span> retourne le flot d&#39;une collection. Cela marche avec les </span><code>List</code><span>, </span><code>Map</code><span>, etc.</span></p></li><li><p><code>&lt;? super BufferedReader&gt;.lines()</code><span> retourne la le flot des lignes du lecteur instancié.</span></p></li></ul></li><li><p><span>méthodes </span><strong><span>intermédiaires</span></strong><span> — transforment les valeurs du flot pour en produire un nouveau.</span></p><ul><li><code>Stream&lt;T&gt; limit(long l)</code><span> retourne un flot de longueur maximale égale à </span><code>l</code><span> et contenant les mêmes éléments que le flot auquel on l&#39;applique</span></li><li><code>Stream&lt;T&gt; skip(long n)</code><span> retourne le flot des éléments restants après avoir ignoré les </span><code>n</code><span> premières valeurs</span></li><li><code>Stream&lt;T&gt; sorted()</code><span> retourne un flot dont les éléments ont été triés d&#39;ordre naturel croissant (selon la définition de </span><code>Comparable</code><span>).</span></li><li><code>Stream&lt;T&gt; sorted(Comparator&lt;T&gt; c)</code><span> retourne un flot dont les éléments sont triés avec </span><code>c</code><span>.</span></li><li><code>Stream&lt;T&gt; filter(Predicate&lt;T&gt;)</code><span> retourne le flot des valeurs qui satisfont </span><code>p</code></li><li><code>Stream&lt;R&gt; map(Function&lt;T, R&gt; f)</code><span> retourne le flot obtenu en appliquant </span><code>f</code><span> aux éléments du flot (un différent type peut être donc retourné).</span></li></ul></li><li><p><span>méthodes </span><strong><span>terminales</span></strong><span> — consomment les valeurs du flot en les affichant à l&#39;écran, réduisant à une valeur unique, etc.</span></p><ul><li><span>Méthodes statiques – pour obtenir des statistiques sur les éléments du flot auquel on l&#39;applique.</span></li><li><span>Méthodes logiques – pour déterminer si les éléments du flot satisfont une condition (exprimée sous forme de </span><code>Predicate&lt;T&gt;</code><span>), qui correpondent aux opérateurs logiques </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.258ex" height="1.62ex" role="img" focusable="false" viewBox="0 -694 556 716" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.05ex;"><defs><path id="MJX-42-TEX-N-2200" d="M0 673Q0 684 7 689T20 694Q32 694 38 680T82 567L126 451H430L473 566Q483 593 494 622T512 668T519 685Q524 694 538 694Q556 692 556 674Q556 670 426 329T293 -15Q288 -22 278 -22T263 -15Q260 -11 131 328T0 673ZM414 410Q414 411 278 411T142 410L278 55L414 410Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="2200" xlink:href="#MJX-42-TEX-N-2200"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi mathvariant="normal">∀</mi></math></mjx-assistive-mml></mjx-container><script type="math/tex">\forall</script><span>, </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.258ex" height="1.57ex" role="img" focusable="false" viewBox="0 -694 556 694" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: 0px;"><defs><path id="MJX-43-TEX-N-2203" d="M56 661T56 674T70 694H487Q497 686 500 679V15Q497 10 487 1L279 0H70Q56 7 56 20T70 40H460V327H84Q70 334 70 347T84 367H460V654H70Q56 661 56 674Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="2203" xlink:href="#MJX-43-TEX-N-2203"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi mathvariant="normal">∃</mi></math></mjx-assistive-mml></mjx-container><script type="math/tex">\exists</script><span>, et </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.258ex" height="2.106ex" role="img" focusable="false" viewBox="0 -716 556 931" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.486ex;"><defs><path id="MJX-44-TEX-I-2203" d="M56 661T56 674T70 694H487Q497 686 500 679V15Q497 10 487 1L279 0H70Q56 7 56 20T70 40H460V327H84Q70 334 70 347T84 367H460V654H70Q56 661 56 674Z"></path><path id="MJX-44-TEX-I-338" d="M-612 -215T-619 -215T-631 -212T-637 -204T-639 -197Q-639 -190 -634 -183Q-621 -157 -400 274T-176 707Q-173 716 -160 716Q-153 716 -148 712T-142 703T-140 696Q-140 691 -372 241T-608 -212Q-612 -215 -619 -215Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><g data-c="2204"><use data-c="2203" xlink:href="#MJX-44-TEX-I-2203"></use><use data-c="338" xlink:href="#MJX-44-TEX-I-338" transform="translate(556,0)"></use></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>∄</mi></math></mjx-assistive-mml></mjx-container><script type="math/tex">\nexists</script><span>.</span></li><li><span>Méthodes de consommation – </span><code>void forEach(Consumer&lt;T&gt; c)</code><span> applique </span><code>c</code><span> à tous les éléments du flot.</span></li><li><span>Méthodes de réduction – réduit les éléments du flot à une seule valeur en utilisant des </span><code>BinaryOperator&lt;T&gt;</code></li><li><span>Méthode de collecteur </span><code>collect(Collector c)</code><span> permet de collecter les éléments restants du flot à l&#39;aide d&#39;un </span><code>Collector</code><span> (c.f. </span><strong><span>Collecteurs prédéfinis</span></strong><span>).</span></li></ul></li></ol><p><span>On peut utiliser les méthodes pour construire une </span><strong><span>pipeline</span></strong><span> (queue séquentielle d&#39;instructions à exécuter ):</span></p><ul><li><em><span>une</span></em><span> méthode source</span></li><li><em><span>zéro ou plusiers</span></em><span> méthodes intermédiares</span></li><li><em><span>une</span></em><span> méthode terminale</span></li></ul><blockquote><p>⚠️<span> Les flots </span><strong><span>ne sont pas</span></strong><span> immuables ! Dès consommés par une méthode terminales, ils deviennent vides et ne peuvent plus être utilisés.</span></p></blockquote><h3 id='collecteurs-prédéfinis'><span>Collecteurs prédéfinis</span></h3><p><span>La classe </span><code>java.util.stream.Collectors</code><span> fournit des méthodes qui permettent d&#39;obtenir des collecteurs qui retransforment les flots en leurs types Java respectifs (collections, chaînes de caractères…) : </span></p><ul><li><p><code>toList()</code><span> retourne un collecteur qui place les éléments du flot dans une liste.</span></p></li><li><p><code>toSet()</code><span> retourne un collecteur qui place les éléments du flot dans un ensemble.</span></p></li><li><p><code>toMap(Function&lt;T, K&gt; k, Function&lt;T, V&gt; v)</code><span> retourne un collecteur qui place les éléments du flot dans une table associative, où </span><code>k</code><span> retourne la clé et </span><code>v</code><span> la valeur à placer dans le nouveau tableau.</span></p></li><li><p><em><span>Spécifique au flots de caractères</span></em><span> (</span><code>CharSequence</code><span>)</span></p><ul><li><code>joining()</code><span> concate les chaînes collectés.</span></li><li><code>joining(String d)</code><span> concate en utilisant </span><code>d</code><span> come délimiteur.</span></li><li><code>joining(String d, String p, String s)</code><span> concate en utilisant </span><code>d</code><span> comme délilmiteur, </span><code>p</code><span> comme préfixe au début et </span><code>s</code><span> comme suffixe à la fin de la chaîne retournée.</span></li></ul></li></ul><h2 id='11-égalité-ordre-et-hachage'><b><span>11.</span></b><span> Égalité, ordre et hachage</span></h2><p><span>On a souvent besoin de trier des éléments en fonction de leur valeur, notamment dans le contexte des </span><code>TreeSet</code><span> et </span><code>HashSet</code><span>. Pour cela on introduit dans Java la notion d&#39;égalité et de hachage.</span></p><h3 id='égalité'><span>Égalité</span></h3><p><span>Il n&#39;y a pas de notion absole d&#39;égalité, il faut déterminer selon les cas celle qu&#39;on utilise.</span></p><ul><li><span>Égalité </span><strong><span>par référence</span></strong><span> (</span><strong><span>identité</span></strong><span>) — deux objets sont égaux </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="5.462ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 2414 549" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.054ex;"><defs><path id="MJX-45-TEX-N-27FA" d="M1438 514Q1438 525 1454 525Q1459 525 1462 525T1467 525T1471 524T1473 523T1475 520T1477 517T1480 512Q1517 438 1578 381T1689 300T1785 263Q1802 258 1802 250T1793 239T1756 228T1698 204Q1554 134 1480 -12Q1476 -21 1473 -22T1458 -24Q1438 -24 1438 -17Q1438 -13 1443 0Q1478 69 1529 123L1539 133H318L328 123Q379 69 414 0Q419 -13 419 -17Q419 -24 399 -24Q388 -24 385 -23T377 -12Q332 77 253 144T72 237Q62 240 59 242T56 250T59 257T70 262T89 268T119 278T160 296Q303 366 377 512Q382 522 385 523T401 525Q419 524 419 515Q419 510 414 500Q379 431 328 377L318 367H1539L1529 377Q1496 412 1467 458T1438 514ZM274 173H1583L1593 181Q1632 211 1710 250Q1709 251 1692 259T1647 283T1593 319L1583 327H930L927 328L602 327H274L264 319Q225 289 147 250Q148 249 165 241T210 217T264 181L274 173Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mspace"></g></g><g data-mml-node="mo" transform="translate(278,0)"><use data-c="27FA" xlink:href="#MJX-45-TEX-N-27FA"></use></g><g data-mml-node="mstyle" transform="translate(2136,0)"><g data-mml-node="mspace"></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mstyle scriptlevel="0"><mspace width="0.278em"></mspace></mstyle><mo stretchy="false">⟺</mo><mstyle scriptlevel="0"><mspace width="0.278em"></mspace></mstyle></math></mjx-assistive-mml></mjx-container><script type="math/tex">\iff</script><span> il s&#39;agit d&#39;un seul et même objet physique.</span></li><li><span>Égalité </span><strong><span>par structure</span></strong><span> (</span><strong><span>structurelle</span></strong><span>) — deux objets sont égaux </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="5.462ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 2414 549" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.054ex;"><defs><path id="MJX-45-TEX-N-27FA" d="M1438 514Q1438 525 1454 525Q1459 525 1462 525T1467 525T1471 524T1473 523T1475 520T1477 517T1480 512Q1517 438 1578 381T1689 300T1785 263Q1802 258 1802 250T1793 239T1756 228T1698 204Q1554 134 1480 -12Q1476 -21 1473 -22T1458 -24Q1438 -24 1438 -17Q1438 -13 1443 0Q1478 69 1529 123L1539 133H318L328 123Q379 69 414 0Q419 -13 419 -17Q419 -24 399 -24Q388 -24 385 -23T377 -12Q332 77 253 144T72 237Q62 240 59 242T56 250T59 257T70 262T89 268T119 278T160 296Q303 366 377 512Q382 522 385 523T401 525Q419 524 419 515Q419 510 414 500Q379 431 328 377L318 367H1539L1529 377Q1496 412 1467 458T1438 514ZM274 173H1583L1593 181Q1632 211 1710 250Q1709 251 1692 259T1647 283T1593 319L1583 327H930L927 328L602 327H274L264 319Q225 289 147 250Q148 249 165 241T210 217T264 181L274 173Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mspace"></g></g><g data-mml-node="mo" transform="translate(278,0)"><use data-c="27FA" xlink:href="#MJX-45-TEX-N-27FA"></use></g><g data-mml-node="mstyle" transform="translate(2136,0)"><g data-mml-node="mspace"></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mstyle scriptlevel="0"><mspace width="0.278em"></mspace></mstyle><mo stretchy="false">⟺</mo><mstyle scriptlevel="0"><mspace width="0.278em"></mspace></mstyle></math></mjx-assistive-mml></mjx-container><script type="math/tex">\iff</script><span> leur contenu est identique.</span></li></ul><blockquote><h4 id='règle-de-légalité-et-de-limmuabilité'><span>Règle de l&#39;égalité et de l&#39;immuabilité</span></h4><p><span>Toujours redéfinr la méthode </span><code>equals</code><span> pour une classe immubale afin que ses instances soient comparées par structure. </span></p><p><span>Ne </span><strong><span>pas le faire</span></strong><span> lors de la définition d&#39;une classe </span><em><span>non immuable</span></em><span>.</span></p><p>⚠️<span> </span><em><span>Exception</span></em><span> — s&#39;il est exclu qu&#39;il existe deux instances d&#39;une classe immuable aient le même contenu (e.g. deux instances de </span><code>Integer</code><span> ayant le même contenu) alors l&#39;égalité par référence est équivalente à l&#39;égalité par structure et il n&#39;est pas nécessaire de redéfinir </span><code>equals</code><span>.</span></p></blockquote><h3 id='ordre'><span>Ordre</span></h3><p><span>La comparaison de deux éléments permet de mettre en œuvre des collections plus efficacement. On a deux manières de s&#39;en charger :</span></p><ul><li><p><span>L&#39;interface </span><code>Comparable</code><span> – les instances de la classes se comparent entre eux.</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">public</span> <span class="cm-keyword">interface</span> <span class="cm-def">Comparable</span><span class="cm-operator">&lt;</span><span class="cm-variable">T</span><span class="cm-operator">&gt;</span> {</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable-3">int</span> <span class="cm-variable">compareTo</span>(<span class="cm-variable">T</span> <span class="cm-variable">that</span>);</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 66px;"></div><div class="CodeMirror-gutters" style="display: none; height: 66px;"></div></div></div></pre><ul><li><p><span>La valeur retournée par </span><code>compareTo</code><span> donne une indication de l&#39;ordre de </span><code>this</code><span> par rapport à </span><code>that</code><span> :</span></p><ul><li><span>un entier négatif si </span><code>this &lt; that</code></li><li><code>0</code><span> si </span><code>this == that</code></li><li><span>un entier  positif si </span><code>this &gt; that</code></li></ul></li></ul></li><li><blockquote><h3 id='règle-de-compatibilité-\ncompareto\n-et-\nequals'><span>Règle de compatibilité </span><code>compareTo</code><span> et </span><code>equals</code></h3><p><span>Les méthodes </span><code>compareTo</code><span>  et </span><code>equals</code><span> d&#39;une classe sont compatibles ssi elles consièdrent exactement les mêmes couples d&#39;objets comme étant égaux :</span></p><p><code>o1.equals(o2)</code><span> </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="5.462ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 2414 549" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.054ex;"><defs><path id="MJX-45-TEX-N-27FA" d="M1438 514Q1438 525 1454 525Q1459 525 1462 525T1467 525T1471 524T1473 523T1475 520T1477 517T1480 512Q1517 438 1578 381T1689 300T1785 263Q1802 258 1802 250T1793 239T1756 228T1698 204Q1554 134 1480 -12Q1476 -21 1473 -22T1458 -24Q1438 -24 1438 -17Q1438 -13 1443 0Q1478 69 1529 123L1539 133H318L328 123Q379 69 414 0Q419 -13 419 -17Q419 -24 399 -24Q388 -24 385 -23T377 -12Q332 77 253 144T72 237Q62 240 59 242T56 250T59 257T70 262T89 268T119 278T160 296Q303 366 377 512Q382 522 385 523T401 525Q419 524 419 515Q419 510 414 500Q379 431 328 377L318 367H1539L1529 377Q1496 412 1467 458T1438 514ZM274 173H1583L1593 181Q1632 211 1710 250Q1709 251 1692 259T1647 283T1593 319L1583 327H930L927 328L602 327H274L264 319Q225 289 147 250Q148 249 165 241T210 217T264 181L274 173Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mspace"></g></g><g data-mml-node="mo" transform="translate(278,0)"><use data-c="27FA" xlink:href="#MJX-45-TEX-N-27FA"></use></g><g data-mml-node="mstyle" transform="translate(2136,0)"><g data-mml-node="mspace"></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mstyle scriptlevel="0"><mspace width="0.278em"></mspace></mstyle><mo stretchy="false">⟺</mo><mstyle scriptlevel="0"><mspace width="0.278em"></mspace></mstyle></math></mjx-assistive-mml></mjx-container><script type="math/tex">\iff</script><span> </span><code>o1.compareTo(o2) == 0</code></p></blockquote></li></ul><ul><li><p><span>L&#39;interface </span><code>Comparator</code></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">public</span> <span class="cm-keyword">interface</span> <span class="cm-def">Comparator</span><span class="cm-operator">&lt;</span><span class="cm-variable">T</span><span class="cm-operator">&gt;</span> {</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable-3">int</span> <span class="cm-variable">compare</span>(<span class="cm-variable">T</span> <span class="cm-variable">o1</span>, <span class="cm-variable">T</span> <span class="cm-variable">o2</span>);</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 66px;"></div><div class="CodeMirror-gutters" style="display: none; height: 66px;"></div></div></div></pre><p><span>Il est possible qu&#39;on aie des ordres différents pour un même type (e.g. tri par nom mais aussi par date), et donc on doit pouvoir ordonner les valeurs de manière externe à leur classe. Cela devient possible grâce à l&#39;interface </span><code>Comparator&lt;T&gt;</code><span>.</span></p></li></ul><p><code>TreeSet</code><span> met en œuvre un ensemble d&#39;éléments en les triant, par défaut dans l&#39;ordre croissant. Il est également possible d&#39;instancier un </span><code>TreeSet</code><span> qui trie ses éléments selont un comparateur en le lui passant dans son constructeur : </span><code>new TreeSet&lt;T&gt;(Comparator&lt;T&gt; c)</code><span>. À ne pas oublier que </span><code>Comparator&lt;T&gt;</code><span> est une interface fonctionnelle !</span></p><h3 id='hachage'><span>Hachage</span></h3><p><span>Le </span><strong><span>hachage</span></strong><span> (</span><em><span>hashing</span></em><span>) consiste à transformer une donnée quelconque en un entier, compris dans un intervalle borné. Cela se fait par une </span><strong><span>fonction de hachage</span></strong><span> (</span><em><span>hash function</span></em><span>) qui produit la </span><strong><span>valeur de hachage</span></strong><span> (</span><em><span>hash value</span></em><span>) de la donnée initiale.</span></p><p><span>La fonction de hachage est une fonction mathématique, elle doit satisfaire </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="29.74ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 13144.9 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-48-TEX-N-2200" d="M0 673Q0 684 7 689T20 694Q32 694 38 680T82 567L126 451H430L473 566Q483 593 494 622T512 668T519 685Q524 694 538 694Q556 692 556 674Q556 670 426 329T293 -15Q288 -22 278 -22T263 -15Q260 -11 131 328T0 673ZM414 410Q414 411 278 411T142 410L278 55L414 410Z"></path><path id="MJX-48-TEX-I-1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path><path id="MJX-48-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-48-TEX-I-1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-48-TEX-N-3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path><path id="MJX-48-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-48-TEX-N-27F9" d="M1218 514Q1218 525 1234 525Q1239 525 1242 525T1247 525T1251 524T1253 523T1255 520T1257 517T1260 512Q1297 438 1358 381T1469 300T1565 263Q1582 258 1582 250T1573 239T1536 228T1478 204Q1334 134 1260 -12Q1256 -21 1253 -22T1238 -24Q1218 -24 1218 -17Q1218 -13 1223 0Q1258 69 1309 123L1319 133H70Q56 140 56 153Q56 168 72 173H1363L1373 181Q1412 211 1490 250Q1489 251 1472 259T1427 283T1373 319L1363 327H710L707 328L390 327H72Q56 332 56 347Q56 360 70 367H1319L1309 377Q1276 412 1247 458T1218 514Z"></path><path id="MJX-48-TEX-I-210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path><path id="MJX-48-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-48-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="2200" xlink:href="#MJX-48-TEX-N-2200"></use></g><g data-mml-node="mi" transform="translate(556,0)"><use data-c="1D465" xlink:href="#MJX-48-TEX-I-1D465"></use></g><g data-mml-node="mo" transform="translate(1128,0)"><use data-c="2C" xlink:href="#MJX-48-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(1572.7,0)"><use data-c="1D466" xlink:href="#MJX-48-TEX-I-1D466"></use></g><g data-mml-node="mo" transform="translate(2340.4,0)"><use data-c="3A" xlink:href="#MJX-48-TEX-N-3A"></use></g><g data-mml-node="mi" transform="translate(2896.2,0)"><use data-c="1D465" xlink:href="#MJX-48-TEX-I-1D465"></use></g><g data-mml-node="mo" transform="translate(3746,0)"><use data-c="3D" xlink:href="#MJX-48-TEX-N-3D"></use></g><g data-mml-node="mi" transform="translate(4801.8,0)"><use data-c="1D466" xlink:href="#MJX-48-TEX-I-1D466"></use></g><g data-mml-node="mstyle" transform="translate(5291.8,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mo" transform="translate(5847.6,0)"><use data-c="27F9" xlink:href="#MJX-48-TEX-N-27F9"></use></g><g data-mml-node="mstyle" transform="translate(7485.6,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(8041.3,0)"><use data-c="210E" xlink:href="#MJX-48-TEX-I-210E"></use></g><g data-mml-node="mo" transform="translate(8617.3,0)"><use data-c="28" xlink:href="#MJX-48-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(9006.3,0)"><use data-c="1D465" xlink:href="#MJX-48-TEX-I-1D465"></use></g><g data-mml-node="mo" transform="translate(9578.3,0)"><use data-c="29" xlink:href="#MJX-48-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(10245.1,0)"><use data-c="3D" xlink:href="#MJX-48-TEX-N-3D"></use></g><g data-mml-node="mi" transform="translate(11300.9,0)"><use data-c="210E" xlink:href="#MJX-48-TEX-I-210E"></use></g><g data-mml-node="mo" transform="translate(11876.9,0)"><use data-c="28" xlink:href="#MJX-48-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(12265.9,0)"><use data-c="1D466" xlink:href="#MJX-48-TEX-I-1D466"></use></g><g data-mml-node="mo" transform="translate(12755.9,0)"><use data-c="29" xlink:href="#MJX-48-TEX-N-29"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi mathvariant="normal">∀</mi><mi>x</mi><mo>,</mo><mi>y</mi><mo>:</mo><mi>x</mi><mo>=</mo><mi>y</mi><mstyle scriptlevel="0"><mspace width="0.278em"></mspace></mstyle><mo stretchy="false">⟹</mo><mstyle scriptlevel="0"><mspace width="0.278em"></mspace></mstyle><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>h</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></math></mjx-assistive-mml></mjx-container><script type="math/tex">\forall x,y : x = y \implies h(x) = h(y)</script><span>. Elle est dite </span><strong><span>parfaite</span></strong><span> si elle est injective, càd </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="29.74ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 13144.9 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-92-TEX-N-2200" d="M0 673Q0 684 7 689T20 694Q32 694 38 680T82 567L126 451H430L473 566Q483 593 494 622T512 668T519 685Q524 694 538 694Q556 692 556 674Q556 670 426 329T293 -15Q288 -22 278 -22T263 -15Q260 -11 131 328T0 673ZM414 410Q414 411 278 411T142 410L278 55L414 410Z"></path><path id="MJX-92-TEX-I-1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path><path id="MJX-92-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-92-TEX-I-1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-92-TEX-N-3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path><path id="MJX-92-TEX-I-210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path><path id="MJX-92-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-92-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-92-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-92-TEX-N-27F9" d="M1218 514Q1218 525 1234 525Q1239 525 1242 525T1247 525T1251 524T1253 523T1255 520T1257 517T1260 512Q1297 438 1358 381T1469 300T1565 263Q1582 258 1582 250T1573 239T1536 228T1478 204Q1334 134 1260 -12Q1256 -21 1253 -22T1238 -24Q1218 -24 1218 -17Q1218 -13 1223 0Q1258 69 1309 123L1319 133H70Q56 140 56 153Q56 168 72 173H1363L1373 181Q1412 211 1490 250Q1489 251 1472 259T1427 283T1373 319L1363 327H710L707 328L390 327H72Q56 332 56 347Q56 360 70 367H1319L1309 377Q1276 412 1247 458T1218 514Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="2200" xlink:href="#MJX-92-TEX-N-2200"></use></g><g data-mml-node="mi" transform="translate(556,0)"><use data-c="1D465" xlink:href="#MJX-92-TEX-I-1D465"></use></g><g data-mml-node="mo" transform="translate(1128,0)"><use data-c="2C" xlink:href="#MJX-92-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(1572.7,0)"><use data-c="1D466" xlink:href="#MJX-92-TEX-I-1D466"></use></g><g data-mml-node="mo" transform="translate(2340.4,0)"><use data-c="3A" xlink:href="#MJX-92-TEX-N-3A"></use></g><g data-mml-node="mi" transform="translate(2896.2,0)"><use data-c="210E" xlink:href="#MJX-92-TEX-I-210E"></use></g><g data-mml-node="mo" transform="translate(3472.2,0)"><use data-c="28" xlink:href="#MJX-92-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(3861.2,0)"><use data-c="1D465" xlink:href="#MJX-92-TEX-I-1D465"></use></g><g data-mml-node="mo" transform="translate(4433.2,0)"><use data-c="29" xlink:href="#MJX-92-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(5100,0)"><use data-c="3D" xlink:href="#MJX-92-TEX-N-3D"></use></g><g data-mml-node="mi" transform="translate(6155.8,0)"><use data-c="210E" xlink:href="#MJX-92-TEX-I-210E"></use></g><g data-mml-node="mo" transform="translate(6731.8,0)"><use data-c="28" xlink:href="#MJX-92-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(7120.8,0)"><use data-c="1D466" xlink:href="#MJX-92-TEX-I-1D466"></use></g><g data-mml-node="mo" transform="translate(7610.8,0)"><use data-c="29" xlink:href="#MJX-92-TEX-N-29"></use></g><g data-mml-node="mstyle" transform="translate(7999.8,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mo" transform="translate(8555.6,0)"><use data-c="27F9" xlink:href="#MJX-92-TEX-N-27F9"></use></g><g data-mml-node="mstyle" transform="translate(10193.6,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(10749.3,0)"><use data-c="1D465" xlink:href="#MJX-92-TEX-I-1D465"></use></g><g data-mml-node="mo" transform="translate(11599.1,0)"><use data-c="3D" xlink:href="#MJX-92-TEX-N-3D"></use></g><g data-mml-node="mi" transform="translate(12654.9,0)"><use data-c="1D466" xlink:href="#MJX-92-TEX-I-1D466"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi mathvariant="normal">∀</mi><mi>x</mi><mo>,</mo><mi>y</mi><mo>:</mo><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>h</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><mstyle scriptlevel="0"><mspace width="0.278em"></mspace></mstyle><mo stretchy="false">⟹</mo><mstyle scriptlevel="0"><mspace width="0.278em"></mspace></mstyle><mi>x</mi><mo>=</mo><mi>y</mi></math></mjx-assistive-mml></mjx-container><script type="math/tex">\forall x,y: h(x) = h(y) \implies x=y</script><span>.</span></p><p><span>Il se peut que deux valeurs différentes aient la même valeur de hachage : </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="20.11ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 8888.6 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-96-TEX-I-1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path><path id="MJX-96-TEX-N-21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z"></path><path id="MJX-96-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-96-TEX-I-1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-96-TEX-N-2227" d="M318 591Q325 598 333 598Q344 598 348 591Q349 590 414 445T545 151T611 -4Q609 -22 591 -22Q588 -22 586 -21T581 -20T577 -17T575 -13T572 -9T570 -4L333 528L96 -4Q87 -20 80 -21Q78 -22 75 -22Q57 -22 55 -4Q55 2 120 150T251 444T318 591Z"></path><path id="MJX-96-TEX-I-210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path><path id="MJX-96-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-96-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D465" xlink:href="#MJX-96-TEX-I-1D465"></use></g><g data-mml-node="mo" transform="translate(572,0)"><use data-c="21" xlink:href="#MJX-96-TEX-N-21"></use></g><g data-mml-node="mo" transform="translate(1127.8,0)"><use data-c="3D" xlink:href="#MJX-96-TEX-N-3D"></use></g><g data-mml-node="mi" transform="translate(2183.6,0)"><use data-c="1D466" xlink:href="#MJX-96-TEX-I-1D466"></use></g><g data-mml-node="mo" transform="translate(2895.8,0)"><use data-c="2227" xlink:href="#MJX-96-TEX-N-2227"></use></g><g data-mml-node="mi" transform="translate(3785,0)"><use data-c="210E" xlink:href="#MJX-96-TEX-I-210E"></use></g><g data-mml-node="mo" transform="translate(4361,0)"><use data-c="28" xlink:href="#MJX-96-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(4750,0)"><use data-c="1D465" xlink:href="#MJX-96-TEX-I-1D465"></use></g><g data-mml-node="mo" transform="translate(5322,0)"><use data-c="29" xlink:href="#MJX-96-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(5988.8,0)"><use data-c="3D" xlink:href="#MJX-96-TEX-N-3D"></use></g><g data-mml-node="mi" transform="translate(7044.6,0)"><use data-c="210E" xlink:href="#MJX-96-TEX-I-210E"></use></g><g data-mml-node="mo" transform="translate(7620.6,0)"><use data-c="28" xlink:href="#MJX-96-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(8009.6,0)"><use data-c="1D466" xlink:href="#MJX-96-TEX-I-1D466"></use></g><g data-mml-node="mo" transform="translate(8499.6,0)"><use data-c="29" xlink:href="#MJX-96-TEX-N-29"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>x</mi><mo>!</mo><mo>=</mo><mi>y</mi><mo>∧</mo><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>h</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></math></mjx-assistive-mml></mjx-container><script type="math/tex">x!=y \land h(x) = h(y)</script><span>. Il s&#39;agit d&#39;une </span><strong><span>collision de hachage</span></strong><span>.</span></p><h4 id='dans-java'><span>Dans Java</span></h4><p><span>La méthode </span><code>int hashCode()</code><span> est fournie dans </span><code>Object</code><span> et donne par défaut . La méthode doit toujours être écrite de sorte à ce que </span><code>hashCode</code><span> et </span><code>equals</code><span> soient compatibles :</span></p><p><code>x.equals(y)</code><span> </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="4.964ex" height="1.242ex" role="img" focusable="false" viewBox="0 -525 2194 549" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.054ex;"><defs><path id="MJX-94-TEX-N-27F9" d="M1218 514Q1218 525 1234 525Q1239 525 1242 525T1247 525T1251 524T1253 523T1255 520T1257 517T1260 512Q1297 438 1358 381T1469 300T1565 263Q1582 258 1582 250T1573 239T1536 228T1478 204Q1334 134 1260 -12Q1256 -21 1253 -22T1238 -24Q1218 -24 1218 -17Q1218 -13 1223 0Q1258 69 1309 123L1319 133H70Q56 140 56 153Q56 168 72 173H1363L1373 181Q1412 211 1490 250Q1489 251 1472 259T1427 283T1373 319L1363 327H710L707 328L390 327H72Q56 332 56 347Q56 360 70 367H1319L1309 377Q1276 412 1247 458T1218 514Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mspace"></g></g><g data-mml-node="mo" transform="translate(278,0)"><use data-c="27F9" xlink:href="#MJX-94-TEX-N-27F9"></use></g><g data-mml-node="mstyle" transform="translate(1916,0)"><g data-mml-node="mspace"></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mstyle scriptlevel="0"><mspace width="0.278em"></mspace></mstyle><mo stretchy="false">⟹</mo><mstyle scriptlevel="0"><mspace width="0.278em"></mspace></mstyle></math></mjx-assistive-mml></mjx-container><script type="math/tex">\implies</script><code>x.hashCode() == y.hashCode()</code></p><p>&nbsp;</p><blockquote><h1 id='règle-de-compatibilité-\nhashcode\n-et-\nequals'><span>Règle de compatibilité </span><code>hashCode</code><span> et </span><code>equals</code></h1><p><span>Si on décide de le faire, il faut toujours redéfinir </span><code>hashCode</code><span> et </span><code>equals</code><span> de sorte à ce que les deux méthodes soient compatible</span></p></blockquote><blockquote><h1 id='règle-de-mise-en-œuvre-de-\nhashcode'><span>Règle de mise en œuvre de </span><code>hashCode</code></h1><p><span>Il faut utiliser la méthode </span><code>Objects.hash(Object... values)</code><span> pour mettre en œuvre </span><code>hashCode</code><span> lorsqu&#39;on la redéfinit. On passe alors à </span><code>values</code><span> les attributs que l&#39;on souhaite hacher.</span></p><p>⚠️<span> </span><em><span>Exceptions</span></em></p><ol><li><span>une classe ne possédant qu&#39;un seul attribut peut utiliser la valeur de hachage de cet attribut comme sa propre valeur de hachage, sans passer par la méthode </span><code>hash</code></li><li><span>une classe ne possédant qu&#39;un seul attribut de type entier (</span><code>int</code><span>, </span><code>byte</code><span>, </span><code>float</code><span>…) peut directement utiliser sa valeur comme valeur de hachage.</span></li></ol></blockquote><h3 id='exigences-sur-les-valeurs-des-collections'><span>Exigences sur les valeurs des collections</span></h3><figure><table><thead><tr><th><span>Collection</span></th><th><span>Méthodes requises</span></th></tr></thead><tbody><tr><td><code>List&lt;E&gt;</code></td><td><em><span>aucune</span></em></td></tr><tr><td><code>Set&lt;E&gt;</code></td><td><code>equals</code></td></tr><tr><td><code>HashSet&lt;E&gt;</code></td><td><code>equals</code><span> et </span><code>hashCode</code></td></tr><tr><td><code>TreeSet&lt;E&gt;</code></td><td><code>equals</code><span> et </span><code>compareTo</code></td></tr><tr><td><code>TreeSet&lt;E&gt;</code></td><td><code>equals</code><span> et </span><code>compare</code></td></tr></tbody></table></figure><h2 id='12-mise-en-œuvre-des-collections'><b><span>12.</span></b><span> Mise en œuvre des collections</span></h2><p><span>Cette section explique en de plus amples détails les mises en œuves des collections, qui utilisent des techniques fondamentales.</span></p><h3 id='listes-2'><span>Listes</span></h3><p><span>On étudie une version simplfiée des listes :</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style=""><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">public</span> <span class="cm-keyword">interface</span> <span class="cm-def">SList</span><span class="cm-operator">&lt;</span><span class="cm-variable">E</span><span class="cm-operator">&gt;</span> <span class="cm-keyword">extends</span> <span class="cm-variable">Iterable</span><span class="cm-operator">&lt;</span><span class="cm-variable">E</span><span class="cm-operator">&gt;</span> {</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable-3">int</span> <span class="cm-variable">size</span>();</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable-3">boolean</span> <span class="cm-variable">isEmpty</span>();</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable-3">void</span> <span class="cm-variable">add</span>(<span class="cm-variable-3">int</span> <span class="cm-variable">i</span>, <span class="cm-variable">E</span> <span class="cm-variable">e</span>);</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable-3">void</span> <span class="cm-variable">remove</span>(<span class="cm-variable-3">int</span> <span class="cm-variable">i</span>);</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable-3">boolean</span> <span class="cm-variable">contains</span>(<span class="cm-variable">E</span> <span class="cm-variable">e</span>);</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable">E</span> <span class="cm-variable">get</span>(<span class="cm-variable-3">int</span> <span class="cm-variable">i</span>);</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable">E</span> <span class="cm-variable">set</span>(<span class="cm-variable-3">int</span> <span class="cm-variable">i</span>, <span class="cm-variable">E</span> <span class="cm-variable">e</span>);</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable">Iterator</span><span class="cm-operator">&lt;</span><span class="cm-variable">E</span><span class="cm-operator">&gt;</span> <span class="cm-variable">iterator</span>();</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 220px;"></div><div class="CodeMirror-gutters" style="display: none; height: 220px;"></div></div></div></pre><p><span>Avant de pouvoir passer aux mises en œuvre concrètes, on définit d&#39;abord une classe abstraite qui fournit des mises en œuvre par défaut de quelques fonctions :</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java" style="break-inside: unset;"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style=""><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">public</span> <span class="cm-keyword">abstract</span> <span class="cm-keyword">class</span> <span class="cm-def">SAbstractList</span><span class="cm-operator">&lt;</span><span class="cm-variable">E</span><span class="cm-operator">&gt;</span> <span class="cm-keyword">implements</span> <span class="cm-variable">SList</span><span class="cm-operator">&lt;</span><span class="cm-variable">E</span><span class="cm-operator">&gt;</span> {</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-meta">@Override</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-keyword">public</span> <span class="cm-variable-3">boolean</span> <span class="cm-variable">isEmpty</span>() {</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">size</span> <span class="cm-operator">==</span> <span class="cm-number">0</span>;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="	">  </span>}</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-meta">@Override</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-keyword">public</span> <span class="cm-variable-3">boolean</span> <span class="cm-variable">contains</span>(<span class="cm-variable">E</span> <span class="cm-variable">e</span>) {</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">for</span> (<span class="cm-variable">E</span> <span class="cm-variable">e1</span> : <span class="cm-keyword">this</span>) <span class="cm-keyword">if</span> (<span class="cm-variable">e1</span>.<span class="cm-variable">equals</span>(<span class="cm-variable">e</span>)) <span class="cm-keyword">return</span> <span class="cm-atom">true</span>;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-atom">false</span>;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  }</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-meta">@Override</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-keyword">public</span> <span class="cm-variable-3">String</span> <span class="cm-variable">toString</span>() {</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable">StringJoinger</span> <span class="cm-variable">j</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">StringJoiner</span>(<span class="cm-string">", "</span>, <span class="cm-string">"["</span>, <span class="cm-string">"]"</span>);</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">for</span> (<span class="cm-variable">E</span> <span class="cm-variable">e</span>: <span class="cm-keyword">this</span>) <span class="cm-variable">j</span>.<span class="cm-variable">add</span>(<span class="cm-variable">e</span>.<span class="cm-variable">toString</span>());</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">j</span>.<span class="cm-variable">toString</span>();</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  }</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-comment">// vérifie que l'index qu'on lui passe est bien compris entre 0 (incl.)</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-comment">// et la taille de la liste (excl.)</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-comment">// càd que c'est un élément de la liste</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-keyword">protected</span> <span class="cm-keyword">final</span> <span class="cm-variable-3">int</span> <span class="cm-variable">checkElementIndex</span>(<span class="cm-variable-3">int</span> <span class="cm-variable">i</span>) {</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">if</span> (<span class="cm-operator">!</span> (<span class="cm-number">0</span> <span class="cm-operator">&lt;=</span> <span class="cm-variable">i</span> <span class="cm-operator">&amp;&amp;</span> <span class="cm-variable">i</span> <span class="cm-operator">&lt;</span> <span class="cm-variable">size</span>())) <span class="cm-keyword">throw</span> <span class="cm-keyword">new</span> <span class="cm-variable">IndexOutOfBoundsException</span>();</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">i</span>;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  }</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-comment">// vérifie que l'index qu'on lui passe est bien compris entre 0 (incl.)</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-comment">// et la taille de la liste (incl.)</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-comment">// càd que c'est une position d'insertion valable</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-keyword">protected</span> <span class="cm-keyword">final</span> <span class="cm-variable-3">int</span> <span class="cm-variable">checkPositionIndex</span>(<span class="cm-variable-3">int</span> <span class="cm-variable">i</span>) {</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">if</span> (<span class="cm-operator">!</span> (<span class="cm-number">0</span> <span class="cm-operator">&lt;=</span> <span class="cm-variable">i</span> <span class="cm-operator">&amp;&amp;</span> <span class="cm-variable">i</span> <span class="cm-operator">&lt;=</span> <span class="cm-variable">size</span>())) <span class="cm-keyword">throw</span> <span class="cm-keyword">new</span> <span class="cm-variable">IndexOutOfBoundsException</span>();</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">i</span>;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  }</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 770px;"></div><div class="CodeMirror-gutters" style="display: none; height: 770px;"></div></div></div></pre><p>&nbsp;</p><p><span>On possède dans Java deux implémentations principales de listes.</span></p><ul><li><p><code>ArrayList</code><span> — mi-chemin entre les tableaux et les listes : stocke un tableau statique et en recrée un si nécessaire. Le temps d&#39;accès d&#39;un élément est de </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="4.618ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2041 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-106-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-106-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-106-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-106-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D442" xlink:href="#MJX-106-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763,0)"><use data-c="28" xlink:href="#MJX-106-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(1152,0)"><use data-c="31" xlink:href="#MJX-106-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(1652,0)"><use data-c="29" xlink:href="#MJX-106-TEX-N-29"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></math></mjx-assistive-mml></mjx-container><script type="math/tex">O(1)</script><span> mais son temps d&#39;ajout varie entre </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="4.618ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2041 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-106-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-106-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-106-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-106-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D442" xlink:href="#MJX-106-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763,0)"><use data-c="28" xlink:href="#MJX-106-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(1152,0)"><use data-c="31" xlink:href="#MJX-106-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(1652,0)"><use data-c="29" xlink:href="#MJX-106-TEX-N-29"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></math></mjx-assistive-mml></mjx-container><script type="math/tex">O(1)</script><span> et </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="4.844ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2141 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-102-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-102-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-102-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-102-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D442" xlink:href="#MJX-102-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763,0)"><use data-c="28" xlink:href="#MJX-102-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1152,0)"><use data-c="1D45B" xlink:href="#MJX-102-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1752,0)"><use data-c="29" xlink:href="#MJX-102-TEX-N-29"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></math></mjx-assistive-mml></mjx-container><script type="math/tex">O(n)</script><span> (complexité amortie).</span>
<img src="https://cs108.epfl.ch/c/COI1/i/SArrayList;16.png" referrerpolicy="no-referrer" alt="SArrayList;16.png"></p><ul><li><p><span>Par défaut on initialise la taille du tableau-liste à 10, mais on peut aussi passer sa capacité initiale au constructeur.</span></p></li><li><p><span>Pour ajouter un élément au tableau, il y a deux possibilités – soit il reste de la place dans le tableau sous-jacent pour stocker le nouvel élément, soit il en reste pas.</span></p></li><li><p><span>Dans le deuxième des cas on va donc doubler la taille du tableau dès qu&#39;on doit y ajouter un tableau plus grand que l&#39;original. Cela peut se faire à l&#39;aide de la méthode </span><code>System.arraycopy</code><span> pour copier les élément à un nouveau tableau.</span></p></li><li><p><span>Pour supprimer un élément on doit donc copier tous les éléments après l&#39;élément à supprimer, puis mettre à </span><code>null</code><span> l&#39;ancien dernier élément du tableau. pour éviter l&#39;allocation inutile de mémoire</span></p></li><li><p><span>L&#39;itérateur des tableaux, qui est retourné par la méthode </span><code>iterator</code><span>, peut être écrit de plusieurs manières</span></p><ul><li><em><span>Imbriqué statiquement</span></em><span> – on crée une classe statique à l&#39;intérieur de notre </span><code>SArrayList</code><span> qui connaît le prochain indice </span><code>nextI</code><span> et sait s&#39;il peut encore effacer des éléments à l&#39;aide de </span><code>canRemove</code><span> qui est modifié avec tout appel à </span><code>hasNext()</code><span>.</span></li><li><em><span>Itérateur intérieur</span></em><span> – on crée une classe imbriquée non statique qui a donc accès aux instances courantes ce qui permet de raccourir le code de la méthode ci-dessus</span></li><li><em><span>Itérateur intérieur anonyme</span></em><span> – on peut déclarer la même classe qu&#39;au dessus mais à la place on la déclare anonymement dans la méthode </span><code>iterator</code><span> de la classe </span><code>SArrayList</code><span>.</span></li></ul></li></ul></li><li><p><code>LinkedList</code><span> — les éléments sont référencés par des </span><strong><span>nœuds</span></strong><span> chaînés entre-eux. Le temps d&#39;accès est de </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="4.844ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2141 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-102-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-102-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-102-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-102-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D442" xlink:href="#MJX-102-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763,0)"><use data-c="28" xlink:href="#MJX-102-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1152,0)"><use data-c="1D45B" xlink:href="#MJX-102-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1752,0)"><use data-c="29" xlink:href="#MJX-102-TEX-N-29"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></math></mjx-assistive-mml></mjx-container><script type="math/tex">O(n)</script><span> mais en revanche le temps d&#39;ajout d&#39;un élément est de </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="4.618ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2041 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-106-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-106-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-106-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-106-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D442" xlink:href="#MJX-106-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763,0)"><use data-c="28" xlink:href="#MJX-106-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(1152,0)"><use data-c="31" xlink:href="#MJX-106-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(1652,0)"><use data-c="29" xlink:href="#MJX-106-TEX-N-29"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></math></mjx-assistive-mml></mjx-container><script type="math/tex">O(1)</script><span>.</span>
<img src="https://cs108.epfl.ch/c/COI1/i/SLinkedList;16.png" referrerpolicy="no-referrer" alt="SLinkedList;16.png"></p><ul><li><p><span>Chaque nœud possède une référence vers au moins un de ses voisins (liste simplement chaînée), mais peut en posséder une vers ses deux voisins (liste doublement chaînée) et même le dernier élément peut pointer vers le premier (liste circulaire). On les représente par la classe imbriquée </span><code>SLinedList.Node&lt;T&gt;</code><span>.</span></p></li><li><p><span>Pour </span><em><span>accéder</span></em><span> à un élément, on est obligé de parcourir tous les nœuds à partir du premier et déterminer l&#39;indice respectif du nœud.</span></p></li><li><p><span>Pour </span><em><span>ajouter</span></em><span> un élément, on doit distinguer deux cas – soit on ajoute un élément en tête de liste, soit on l&#39;ajoute à l&#39;indice spécifié, dans quel cas on doit parcourir tous les éléments pour trouver la bonne position. De même pour les listes chaînées.</span></p></li><li><p><span>On peut retourner deux types d&#39;itérateurs :</span></p><ul><li><code>unmodifiableIterator()</code><span> qui donne un itérateur qui ne permet uniquement de parcourir les éléments de la liste sans les modifier, et est assez simple à écrire</span></li><li><span>L&#39;implémentation de </span><code>iterator()</code><span> contraint donc l&#39;itérateur de connaître trois références vers des nœuds : </span><code>pred</code><span>, </span><code>curr</code><span> et </span><code>next</code><span> où </span><code>curr</code><span> est le nœud en parcours. On doit donc se servir de l&#39;attribut </span><code>next</code><span> pour mettre à jour la référence de </span><code>pred.next</code><span> ce qui permet effectivement d&#39;éffacer </span><code>curr</code><span> de la liste.</span></li></ul></li></ul></li></ul><h3 id='ensembles'><span>Ensembles</span></h3><p><span>On étudiera la mise en œuvre de </span><code>HashSet</code><span> car celle-ci se base sur les tables de hachage et est plus simple que celle de </span><code>TreeSet</code><span>.</span></p><p><span>Notre interface d&#39;ensemble sera donc</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">public</span> <span class="cm-keyword">interface</span> <span class="cm-def">SSet</span><span class="cm-operator">&lt;</span><span class="cm-variable">E</span><span class="cm-operator">&gt;</span> <span class="cm-keyword">extends</span> <span class="cm-variable">Iterable</span><span class="cm-operator">&lt;</span><span class="cm-variable">E</span><span class="cm-operator">&gt;</span> {</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable-3">int</span> <span class="cm-variable">size</span>();</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable-3">boolean</span> <span class="cm-variable">isEmpty</span>();</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable-3">void</span> <span class="cm-variable">add</span>(<span class="cm-variable">E</span> <span class="cm-variable">e</span>);</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable-3">void</span> <span class="cm-variable">remove</span>(<span class="cm-variable">E</span> <span class="cm-variable">e</span>);</span></pre><div class="" style="position: relative;"><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable-3">boolean</span> <span class="cm-variable">contains</span>(<span class="cm-variable">E</span> <span class="cm-variable">e</span>);</span></pre></div><div class="" style="position: relative;"><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-variable">Iterator</span><span class="cm-operator">&lt;</span><span class="cm-variable">E</span><span class="cm-operator">&gt;</span> <span class="cm-variable">iterator</span>();</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 176px;"></div><div class="CodeMirror-gutters" style="display: none; height: 176px;"></div></div></div></pre><p><span>Les définitions par défaut de certaines méthodes sont fournies par la classe abstraite </span><code>SAbstractSet</code><span>:</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">public</span> <span class="cm-keyword">abstract</span> <span class="cm-keyword">class</span> <span class="cm-def">SAbstractSet</span><span class="cm-operator">&lt;</span><span class="cm-variable">E</span><span class="cm-operator">&gt;</span> <span class="cm-keyword">implements</span> <span class="cm-variable">SSet</span><span class="cm-operator">&lt;</span><span class="cm-variable">E</span><span class="cm-operator">&gt;</span> {</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-meta">@Override</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-keyword">public</span> <span class="cm-variable-3">boolean</span> <span class="cm-variable">isEmpty</span>() {</span></pre><div class="" style="position: relative;"><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">size</span>() <span class="cm-operator">==</span> <span class="cm-number">0</span>;</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  }</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-meta">@Override</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-keyword">public</span> <span class="cm-variable-3">String</span> <span class="cm-variable">toString</span>() {</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable">StringJoiner</span> <span class="cm-variable">j</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">StringJoiner</span>(<span class="cm-string">", "</span>, <span class="cm-string">"{"</span>, <span class="cm-string">"}"</span>);</span></pre><div class="" style="position: relative;"><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">for</span> (<span class="cm-variable">E</span> <span class="cm-variable">e</span> : <span class="cm-keyword">this</span>) <span class="cm-variable">j</span>.<span class="cm-variable">add</span>(<span class="cm-variable">e</span>.<span class="cm-variable">toString</span>());</span></pre></div><div class="" style="position: relative;"><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">j</span>.<span class="cm-variable">toString</span>();</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  }</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 286px;"></div><div class="CodeMirror-gutters" style="display: none; height: 286px;"></div></div></div></pre><h4 id='ensemble-par-liste'><span>Ensemble par liste</span></h4><p><span>On peut utiliser une liste sans doublons pour construire un ensemble.</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation"><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">public</span> <span class="cm-keyword">final</span> <span class="cm-keyword">class</span> <span class="cm-def">SListSet</span><span class="cm-operator">&lt;</span><span class="cm-variable">E</span><span class="cm-operator">&gt;</span> <span class="cm-keyword">extends</span> <span class="cm-variable">SAbstractSet</span><span class="cm-operator">&lt;</span><span class="cm-variable">E</span><span class="cm-operator">&gt;</span> {</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-keyword">private</span> <span class="cm-keyword">final</span> <span class="cm-variable">SList</span><span class="cm-operator">&lt;</span><span class="cm-variable">E</span><span class="cm-operator">&gt;</span> <span class="cm-variable">list</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">SLinkedList</span><span class="cm-operator">&lt;&gt;</span>();</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-meta">@Override</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-keyword">public</span> <span class="cm-variable-3">int</span> <span class="cm-variable">size</span>() {</span></pre><div class="" style="position: relative;"><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">list</span>.<span class="cm-variable">size</span>();</span></pre></div><div class="" style="position: relative;"><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  }</span></pre></div><div class="" style="position: relative;"><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 176px;"></div><div class="CodeMirror-gutters" style="display: none; height: 176px;"></div></div></div></pre><p><span>Cette mise en œuvre est cependant très inefficace due à la complexité de </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="4.844ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2141 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-102-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-102-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-102-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-102-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D442" xlink:href="#MJX-102-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763,0)"><use data-c="28" xlink:href="#MJX-102-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(1152,0)"><use data-c="1D45B" xlink:href="#MJX-102-TEX-I-1D45B"></use></g><g data-mml-node="mo" transform="translate(1752,0)"><use data-c="29" xlink:href="#MJX-102-TEX-N-29"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></math></mjx-assistive-mml></mjx-container><script type="math/tex">O(n)</script><span> de recherche dans les listes :</span></p><ul><li><span>Pour ajouter un élément à l&#39;ensemble, on vérifie si il existe dans la liste (avec </span><code>List.contains(E e)</code><span> et si ce n&#39;est pas le cas on l&#39;ajoute en tête de liste.</span></li><li><span>Pour supprimer un élément on le cherche puis on le supprime, s&#39;il existe, à l&#39;aide d&#39;un itérateur.</span></li><li><span>On peut itérer à travers les éléments d&#39;un ensemble facilement en retournant l&#39;itérateur de la liste.</span></li></ul><h4 id='ensemble-par-table-de-hachage'><span>Ensemble par table de hachage</span></h4><p><span>En implémentant une table de hachage on peut mettre en œuvre un ensmeble avec des opérations qui ont une complexité (sous conditions) de </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="4.618ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2041 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-106-TEX-I-1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path><path id="MJX-106-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-106-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-106-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D442" xlink:href="#MJX-106-TEX-I-1D442"></use></g><g data-mml-node="mo" transform="translate(763,0)"><use data-c="28" xlink:href="#MJX-106-TEX-N-28"></use></g><g data-mml-node="mn" transform="translate(1152,0)"><use data-c="31" xlink:href="#MJX-106-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(1652,0)"><use data-c="29" xlink:href="#MJX-106-TEX-N-29"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></math></mjx-assistive-mml></mjx-container><script type="math/tex">O(1)</script><span>. Cela se fait en créant un tableau de listes de taille 1 (</span><code>SList&lt;E&gt;[]</code><span>), puis de placer les valeurs dans le tableau se trouvant à une transformation appliquée à leur indice de hachage.</span></p><pre class="md-fences md-end-block ty-contain-cm modeLoaded" spellcheck="false" lang="java" style="break-inside: unset;"><div class="CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang="java"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre><span>xxxxxxxxxx</span></pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code" role="presentation" style=""><div class="CodeMirror-activeline" style="position: relative;"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: 0px; width: 0px;"></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">public</span> <span class="cm-keyword">final</span> <span class="cm-keyword">class</span> <span class="cm-def">SHashSet</span><span class="cm-operator">&lt;</span><span class="cm-variable">E</span><span class="cm-operator">&gt;</span> <span class="cm-keyword">extends</span> <span class="cm-variable">SAbstractSet</span><span class="cm-operator">&lt;</span><span class="cm-variable">E</span><span class="cm-operator">&gt;</span> {</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-keyword">private</span> <span class="cm-variable-3">int</span> <span class="cm-variable">size</span> <span class="cm-operator">=</span> <span class="cm-number">0</span>;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-keyword">private</span> <span class="cm-variable">SList</span><span class="cm-operator">&lt;</span><span class="cm-variable">E</span><span class="cm-operator">&gt;</span>[] <span class="cm-variable">table</span> <span class="cm-operator">=</span> <span class="cm-variable">newTable</span>(<span class="cm-number">10</span>);</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-meta">@Override</span></span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-keyword">public</span> <span class="cm-variable-3">int</span> <span class="cm-variable">size</span>() {</span></pre><div class="" style="position: relative;"><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">size</span>;</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  }</span></pre><div class="" style="position: relative;"><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;</span></pre></div><div class="" style="position: relative;"><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-comment">// … autres méthodes</span></span></pre></div><div class="" style="position: relative;"><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;</span></pre></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp;<span class="cm-keyword">private</span> <span class="cm-keyword">static</span> <span class="cm-operator">&lt;</span><span class="cm-variable">E</span><span class="cm-operator">&gt;</span> <span class="cm-variable">SList</span><span class="cm-operator">&lt;</span><span class="cm-variable">E</span><span class="cm-operator">&gt;</span>[] <span class="cm-variable">newTable</span>(<span class="cm-variable-3">int</span> <span class="cm-variable">capacity</span>) {</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-meta">@SuppressWarnings</span>(<span class="cm-string">"unchecked"</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable">SList</span><span class="cm-operator">&lt;</span><span class="cm-variable">E</span><span class="cm-operator">&gt;</span>[] <span class="cm-variable">table</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">SList</span>[<span class="cm-variable">capacity</span>];</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">for</span> (<span class="cm-variable-3">int</span> <span class="cm-variable">i</span> <span class="cm-operator">=</span> <span class="cm-number">0</span>; <span class="cm-variable">i</span> <span class="cm-operator">&lt;</span> <span class="cm-variable">capacity</span>; <span class="cm-operator">++</span><span class="cm-variable">i</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp;<span class="cm-variable">table</span>[<span class="cm-variable">i</span>] <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">SLinkedList</span>();</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword">return</span> <span class="cm-variable">table</span>;</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">  }</span></pre><div class="" style="position: relative;"><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div></div></div></div></div></div><div style="position: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; top: 418px;"></div><div class="CodeMirror-gutters" style="display: none; height: 418px;"></div></div></div></pre><ul><li><p><span>Pour trouver l&#39;indice d&#39;une liste contenant un élément donné, il suffit donc de prendre par exemple la division entière de la valeur de hachage de l&#39;élément par la capacité du tableau.</span></p><ul><li><span>On utilise </span><code>Math.floorMod(int a, int b)</code><span> pour ce faire, ce qui permet aussi de prendre en compte les indices de hachage négatifs en rendant un résultat positif. Ce résultat peut donc être utilisé pour déterminer la liste d&#39;un élément donné, dans une fonction nommée par exemple </span><code>listFor(table[] t, E e)</code></li></ul></li><li><p><span>Pour ajouter un élément à la liste ou vérifier son existence, on peut donc appeler </span><code>listFor</code><span> et vérifier si celle-ci contient l&#39;élément voulu.</span></p></li><li><p><span>Pour parcourir les éléments stockés de la liste, on doit forcément parcourir les deux dimensions des éléments. Cela se simplifie à l&#39;aide de la méthode </span><code>SList.iterator()</code><span> qui permet de boucler à travers les éléments des </span><code>SList&lt;E&gt;</code><span>. À noter qu&#39;on doit aussi stocker le nombre restant d&#39;éléments restants à parcourir pour que </span><code>hasNext</code><span> sache s&#39;il reste des éléments ou pas.</span></p></li><li><p><span>Le rapport entre le nombre d&#39;éléments stockés dans une table de hachage et sa capacité est nommé son </span><strong><span>facteur de charge</span></strong><span> (</span><em><span>load factor</span></em><span>). On aimerait que celui-ci reste le plus proche possible de 1 pour que les </span><code>SList&lt;E&gt;</code><span> aient une valeur le plus proche possible de 1. Sa formule est donc </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="5.437ex" height="2.397ex" role="img" focusable="false" viewBox="0 -706.5 2403.2 1059.3" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.798ex;"><defs><path id="MJX-115-TEX-I-1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path><path id="MJX-115-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-115-TEX-I-1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path><path id="MJX-115-TEX-I-1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D459" xlink:href="#MJX-115-TEX-I-1D459"></use></g><g data-mml-node="mo" transform="translate(575.8,0)"><use data-c="3D" xlink:href="#MJX-115-TEX-N-3D"></use></g><g data-mml-node="mfrac" transform="translate(1631.6,0)"><g data-mml-node="mi" transform="translate(220,394) scale(0.707)"><use data-c="1D460" xlink:href="#MJX-115-TEX-I-1D460"></use></g><g data-mml-node="mi" transform="translate(232.7,-345) scale(0.707)"><use data-c="1D450" xlink:href="#MJX-115-TEX-I-1D450"></use></g><rect width="531.6" height="60" x="120" y="220"></rect></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>l</mi><mo>=</mo><mfrac><mi>s</mi><mi>c</mi></mfrac></math></mjx-assistive-mml></mjx-container><script type="math/tex">l = \frac{s}{c}</script><span>, où </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.023ex" role="img" focusable="false" viewBox="0 -442 469 452" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.023ex;"><defs><path id="MJX-116-TEX-I-1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D460" xlink:href="#MJX-116-TEX-I-1D460"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>s</mi></math></mjx-assistive-mml></mjx-container><script type="math/tex">s</script><span> est la taille de la table et </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="0.98ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 433 453" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.025ex;"><defs><path id="MJX-121-TEX-I-1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D450" xlink:href="#MJX-121-TEX-I-1D450"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>c</mi></math></mjx-assistive-mml></mjx-container><script type="math/tex">c</script><span> sa capacité.</span></p><ul><li><span>Au fur et à mesure qu&#39;on ajoute des éléments, on aura un </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.023ex" role="img" focusable="false" viewBox="0 -442 469 452" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.023ex;"><defs><path id="MJX-116-TEX-I-1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D460" xlink:href="#MJX-116-TEX-I-1D460"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>s</mi></math></mjx-assistive-mml></mjx-container><script type="math/tex">s</script><span> qui augmente tandis que </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="0.98ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 433 453" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.025ex;"><defs><path id="MJX-121-TEX-I-1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D450" xlink:href="#MJX-121-TEX-I-1D450"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>c</mi></math></mjx-assistive-mml></mjx-container><script type="math/tex">c</script><span> reste constant. On peut donc définir une &quot;plage&quot; acceptable pour </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="0.674ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 298 705" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.025ex;"><defs><path id="MJX-132-TEX-I-1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D459" xlink:href="#MJX-132-TEX-I-1D459"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>l</mi></math></mjx-assistive-mml></mjx-container><script type="math/tex">l</script><span> de </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="6.287ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2778.7 1000" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.566ex;"><defs><path id="MJX-133-TEX-N-5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path><path id="MJX-133-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path id="MJX-133-TEX-N-2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path><path id="MJX-133-TEX-N-34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path><path id="MJX-133-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-133-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-133-TEX-N-5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><use data-c="5B" xlink:href="#MJX-133-TEX-N-5B"></use></g><g data-mml-node="mn" transform="translate(278,0)"><use data-c="30" xlink:href="#MJX-133-TEX-N-30"></use><use data-c="2E" xlink:href="#MJX-133-TEX-N-2E" transform="translate(500,0)"></use><use data-c="34" xlink:href="#MJX-133-TEX-N-34" transform="translate(778,0)"></use></g><g data-mml-node="mo" transform="translate(1556,0)"><use data-c="2C" xlink:href="#MJX-133-TEX-N-2C"></use></g><g data-mml-node="mn" transform="translate(2000.7,0)"><use data-c="31" xlink:href="#MJX-133-TEX-N-31"></use></g><g data-mml-node="mo" transform="translate(2500.7,0)"><use data-c="5D" xlink:href="#MJX-133-TEX-N-5D"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo stretchy="false">[</mo><mn>0.4</mn><mo>,</mo><mn>1</mn><mo stretchy="false">]</mo></math></mjx-assistive-mml></mjx-container><script type="math/tex">[0.4, 1]</script><span> et un facteur idéal de </span><mjx-container class="MathJax" jax="SVG" style="position: relative;"><svg xmlns="http://www.w3.org/2000/svg" width="6.583ex" height="1.756ex" role="img" focusable="false" viewBox="0 -694 2909.6 776" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" style="vertical-align: -0.186ex;"><defs><path id="MJX-141-TEX-I-1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path><path id="MJX-141-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-141-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path id="MJX-141-TEX-N-2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path><path id="MJX-141-TEX-N-37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D459" xlink:href="#MJX-141-TEX-I-1D459"></use></g><g data-mml-node="mo" transform="translate(575.8,0)"><use data-c="3D" xlink:href="#MJX-141-TEX-N-3D"></use></g><g data-mml-node="mn" transform="translate(1631.6,0)"><use data-c="30" xlink:href="#MJX-141-TEX-N-30"></use><use data-c="2E" xlink:href="#MJX-141-TEX-N-2E" transform="translate(500,0)"></use><use data-c="37" xlink:href="#MJX-141-TEX-N-37" transform="translate(778,0)"></use></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>l</mi><mo>=</mo><mn>0.7</mn></math></mjx-assistive-mml></mjx-container><script type="math/tex">l= 0.7</script><span>, qu&#39;on pourra ensuite vérifier à chaque opération faite.</span></li><li><span>Cela entraîne le besoin d&#39;une méthode </span><code>rehashIfNeeded</code><span> qui redimensionne la table et replace les éléments en fonction de la nouvelle capacité et la taille actuelle. On l&#39;appelle donc ensuite à la fin des méthodes </span><code>add</code><span> et </span><code>remove</code><span>.</span></li></ul></li></ul></div></div>
</body>
</html>
